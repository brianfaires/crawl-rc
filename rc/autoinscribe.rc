ai := autoinscribe

# Armour
ai += fire dragon scale:rF++, rC-
ai += gold dragon scale:rC+, rF+, rPois
ai += ice dragon scale:rC++, rF-
ai += pearl dragon scale:rN+
ai += storm dragon scale:rElec
ai += swamp dragon scale:rPois
ai += quicksilver dragon scale:MR+
ai += shadow dragon scale:Stlth+


# Amulets
ai += amulet of faith:Faith, !P

# Rings
ai += ring of fire:rF+, rC-
ai += ring of flight:+Fly
ai += ring of ice:rC+, rF-
ai += ring of magical power:MP+9
ai += ring of poison resistance:rPois
ai += ring of protection from cold:rC+
ai += ring of protection from fire:rF+
ai += ring of resist corrosion:rCorr
ai += ring of see invisible:sInv
ai += ring of wizardry:wiz+

# Staves
ai += staff of air:rElec
ai += staff of cold:rC+
ai += staff of death:rN+
ai += staff of fire:rF+
ai += staff of poison:rPois


{
  -- Protective consumable inscriptions on everything w/o a built-in prompt
  -- Updates every turn to:
    -- Inscribe starting items
    -- Update inscriptions after ID
  
  local no_inscription_needed = {
    "acquirement", "amnesia", "blinking", "brand weapon", "enchant armour", "enchant weapon",
    "identify", "immolation", "noise", "vulnerability", "attraction", "lignification", "mutation"}

  ------------------- Hook -------------------
  function ready_safe_consumables()
    -- Remove the default "!r" and "!q" inscriptions after identify
    for inv in iter.invent_iterator:new(items.inventory()) do
      local inv_class = inv.class(true)
      if inv_class == "potion" or inv_class == "scroll" then
        local st, _ = inv.subtype()
        if (st == "poison" and you.res_poison() > 0)
          or (st == "torment" and you.torment_immune())
          or util.contains(no_inscription_needed, st) then
            if inv.inscription:find("%!r") then inv.inscribe(inv.inscription:gsub("%!r", ""), false) end
            if inv.inscription:find("%!q") then inv.inscribe(inv.inscription:gsub("%!q", ""), false) end
        elseif inv_class == "scroll" and not inv.inscription:find("!r") then
            inv.inscribe("!r")
        elseif inv_class == "potion" and not inv.inscription:find("!q") then
            inv.inscribe("!q")
        end
      end
    end
  end
}
