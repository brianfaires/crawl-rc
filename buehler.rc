## Config at start of file

################################### Begin lua/core/config.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
CONFIG = {}
TUNING = {}
WEAPON_BRAND_BONUSES = {}


function init_config()
  CONFIG = {}

  CONFIG.emojis = false -- Use emojis in alerts and damage announcements

  -- Announce HP/MP when change is greater than this value
  CONFIG.announce_hp_threshold = 1
  CONFIG.announce_mp_threshold = 0
  -- Flash/Force more for losing this percentage of max HP
  CONFIG.dmg_flash_threshold = 0.20
  CONFIG.dmg_fm_threshold = 0.30

  -- Inscribe stats
  CONFIG.inscribe_weapons = true
  CONFIG.inscribe_armour = true

  -- Runrest features
  CONFIG.ignore_altars = true
  CONFIG.ignore_portal_exits = true
  CONFIG.stop_on_pan_gates = true
  CONFIG.temple_macros = true
  CONFIG.gauntlet_macros = true

  -- Misc alerts
  CONFIG.warn_v5 = true
  CONFIG.warn_stairs_threshold = 5 -- Warn if taking stairs back within # turns; 0 to disable
  CONFIG.fm_pack_duration = 15 -- Turns before alerting again for a pack monster; 0 to disable
  CONFIG.alert_remove_faith = true
  CONFIG.alert_low_hp_threshold = 0.35 -- % max HP to alert; 0 to disable
  CONFIG.save_with_msg = true
  CONFIG.stop_on_scrolls_count = 2 -- Before finding ID, stop when you have this many un-ID'd scrolls
  CONFIG.stop_on_pots_count = 3 -- Before finding ID, stop when you have this many un-ID'd potions

  -- exclude-dropped
  CONFIG.exclude_stashed_enchant_scrolls = false -- Don't exclude enchant/brand scrolls if holding enchantable weapon

  CONFIG.do_auto_weapon_slots_abw = true

  ---- Pickup/Alert system
  -- Choose which items are auto-picked up
  CONFIG.pickup = {
    armour = true,
    weapons = true,
    staves = true
  } -- CONFIG.pickup (do not remove this comment)

  -- Which alerts are enabled
  CONFIG.alert = {
    system_enabled = true, -- If false, all alerts are skipped
    armour = true,
    weapons = true,
    orbs = true,
    talismans = true,
    staff_resists = true,

    -- Each item is alerted once. Set to empty to disable.
    one_time = {
      "broad axe", "executioner's axe", "eveningstar", "demon whip",
      "sacred scourge", "lajatang", "bardiche", "demon trident", "trishula",
      "quick blade", "eudemon blade", "demon blade", "double sword", "triple sword",
      "crystal plate armour", "gold dragon scales", "pearl dragon scales",
      "storm dragon scales", "shadow dragon scales", "wand of digging",
      "triple crossbow", "hand cannon", "buckler", "kite shield", "tower shield"
    } -- one_time_alerts (do not remove this comment)
  } -- CONFIG.alert (do not remove this comment)

  -- Which alerts generate a force_more
  CONFIG.fm_alert = {
    early_weap = false,
    new_weap = true,
    body_armour = true,
    aux_armour = true,
    shields = true,
    high_score_weap = true,
    high_score_armour = true,
    one_time_alerts = true,
    artefact = true,
    orbs = false,
    talismans = false,
    staff_resists = true
  } -- CONFIG.fm_alert (do not remove this comment)

  -- Startup
  CONFIG.show_skills_on_startup = true
  CONFIG.auto_set_skill_targets = {
    { "Stealth", 2.0 },
    { "Fighting", 2.0 }
  } -- auto_set_skill_targets (do not remove this comment)

  -- Debugging
  CONFIG.debug_init = false -- track progress through init()
  CONFIG.debug_fm_monsters = false -- Get a message when a fm changes



  -- Heuristics for tuning the pickup/alert system
  TUNING = {}

  -- Alerts for armour of diff encumbrance, when ratio of gain/loss (AC|EV) is > value
  -- Lower values mean more alerts. gain/diff/same/lose refers to egos.
  -- min_gain/max_loss check against the AC or EV delta when ego changes
  TUNING.armour = {
    lighter = {gain_ego = 0.6, diff_ego = 0.8, same_ego = 1.2, lost_ego = 2.0, min_gain = 3.0, max_loss = 4.0 },
    heavier = {gain_ego = 0.4, diff_ego = 0.5, same_ego = 0.7, lost_ego = 2.0, min_gain = 3.0, max_loss = 8.0 },
    encumb_penalty_weight = 0.7 -- Penalizes heavier armour when training spellcasting/ranged. 0 to disable
  }

  -- All 'magic numbers' used in the weapon pickup/alert system.
    -- 1. Cutoffs for pickup/alert weapons (when DPS ratio exceeds a value)
    -- 2. Cutoffs for when alerts are active (XL, skill_level)
  TUNING.weap = {}
  TUNING.weap.pickup = {
    add_ego = 0.85, -- Pickup weapon that gains a brand if DPS ratio > `add_ego`
    same_type_melee = 1.1, -- Pickup melee weap of same type if DPS ratio > `same_type_melee`
    same_type_ranged = 1.0, -- Pickup ranged weap of same type if DPS ratio > `same_type_ranged`
    accuracy_weight = 0.33 -- Treat +1 Accuracy as +`accuracy_weight` DPS
  }
  
  TUNING.weap.alert = {
    -- Alerts for weapons not requiring an extra hand
    pure_dps = 1.0, -- Alert if DPS ratio > `pure_dps`
    gain_ego = 0.8, -- Gaining ego; Alert if DPS ratio > `gain_ego`
    new_ego = 0.8, -- Get ego not in inventory;Alert if DPS ratio > `new_ego`
    low_skill_penalty_damping = 8, -- Small values penalize low-trained schools more. Penalty is (skill+damp) / (top_skill+damp)

    -- Alerts for 2-handed weapons, when carrying 1-handed
    add_hand = {
      ignore_sh_lvl = 4.0, -- Treat offhand as empty if shield_skill < `ignore_sh_lvl`
      add_ego_lose_sh = 0.8, -- Alert 1h -> 2h (using shield) if DPS ratio > `add_ego_lose_sh`
      not_using = 1.0, --  Alert 1h -> 2h (not using 2nd hand) if DPS ratio > `not_using`
    },

    -- Alerts for good early weapons of all types
    early = {
      xl = 7, -- Alert early weapons if XL <= `xl`
      skill = { factor = 1.5, offset = 2.0 }, -- Skip weapons with skill diff > XL * factor + offset
      branded_min_plus = 4 -- Alert branded weapons with plus >= `branded_min_plus`
    },

    -- Alerts for particularly strong ranged weapons
    early_ranged = {
      xl = 14, -- Alert strong ranged weapons if XL <= `xl`
      min_plus = 7, -- Alert ranged weapons with plus >= `min_plus`
      branded_min_plus = 4, -- Alert branded ranged weapons with plus >= `branded_min_plus`
      max_shields = 8.0 -- Alert 2h ranged, despite shield, if shield_skill <= `max_shields`
    }
  }



  -- Defining impact of brands on DPS; used in PA system and weapon inscriptions
  -- `scoring` includes subtle brands
  DMG_TYPE = { unbranded = 1, branded = 2, scoring = 3 }

  WEAPON_BRAND_BONUSES = {
    spectralizing = { factor = 2.0, offset = 0 },
    heavy = { factor = 1.8, offset = 0 },
    flaming = { factor = 1.25, offset = 0 },
    freezing = { factor = 1.25, offset = 0 },
    draining = { factor = 1.25, offset = 2.0 },
    electrocution = { factor = 1.0, offset = 4.5 }, -- technically 3.5 on avg; fudged up for AC pen
    venom = { factor = 1.0, offset = 5.0 }, -- 5 dmg per poisoning
    pain = { factor = 1.0, offset = you.skill("Necromancy")/2 },
    distortion = { factor = 1.0, offset = 6.0 },
    chaos = { factor = 1.15, offset = 2.0 }, -- Approximate weighted average

    subtle = { -- Completely made up in attempt to balance vs the damaging brands
      protection = { factor = 1.15, offset = 0 },
      vampirism = { factor = 1.2, offset = 0 },
      holy_wrath = { factor = 1.15, offset = 0 },
      antimagic = { factor = 1.1, offset = 0 }  
    }
  }


  ALERT_COLORS = {
    weapon = { desc = COLORS.magenta, item = COLORS.yellow, stats = COLORS.lightgrey },
    body_arm = { desc = COLORS.blue, item = COLORS.lightcyan, stats = COLORS.lightgrey },
    aux_arm = { desc = COLORS.lightblue, item = COLORS.yellow },
    orb = { desc = COLORS.green, item = COLORS.lightgreen },
    talisman = { desc = COLORS.green, item = COLORS.lightgreen },
    staff = { desc = COLORS.brown, item = COLORS.white },
  }

  if CONFIG.debug_init then crawl.mpr("Initialized config") end
end

}
############################### End lua/core/config.lua ###############################
##########################################################################################

## (Resuming init.txt) ##

####### Main options #######
easy_confirm = all
show_more = false
small_more = true
mouse_input = false
default_manual_training = true
autofight_caught = true
rest_wait_both = true
rest_wait_ancestor = true

autofight_stop = 60
hp_warning = 20
item_stack_summary_minimum = 8
fail_severity_to_confirm = 4

sort_menus = true:equipped,art,ego,glowing,identified,basename,qualname,>qty
drop_filter += useless_item, forbidden
fire_order = silver javelin, javelin, silver boomerang, boomerang, curare-tipped dart, poisoned dart, dart, stone


####### Explore options #######
explore_delay = -1
travel_delay = -1
rest_delay = -1
view_delay = 100
show_travel_trail = true

explore_stop = artefacts,altars,branches,portals,runed_doors,greedy_pickup_smart
explore_stop_pickup_ignore += scroll, potion, misc, wand, stone, dart, boomerang, javelin


### Mostly normal RC options ###

################################### Begin rc/autoinscribe.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
# See safe-consumables.lua for consumable inscriptions

ai := autoinscribe

# Armour
ai += fire dragon scale:rF++, rC-
ai += gold dragon scale:rC+, rF+, rPois
ai += ice dragon scale:rC++, rF-
ai += pearl dragon scale:rN+
ai += storm dragon scale:rElec
ai += swamp dragon scale:rPois
ai += quicksilver dragon scale:MR+
ai += shadow dragon scale:Stlth+


# Amulets
ai += amulet of faith:Faith, !P

# Rings
ai += ring of fire:rF+, rC-
ai += ring of flight:+Fly
ai += ring of ice:rC+, rF-
ai += ring of magical power:MP+9
ai += ring of poison resistance:rPois
ai += ring of protection from cold:rC+
ai += ring of protection from fire:rF+
ai += ring of positive energy:rN+
ai += ring of resist corrosion:rCorr
ai += ring of see invisible:sInv
ai += ring of wizardry:wiz+

# Staves
ai += staff of air:rElec
ai += staff of cold:rC+
ai += staff of death:rN+
ai += staff of fire:rF+
ai += staff of poison:rPois

############################### End rc/autoinscribe.rc ###############################
##########################################################################################

################################### Begin rc/autopickup.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
####### Autopickup exceptions #######
ae := autopickup_exceptions
ae ^= <potions? of attraction, <potions? of lignification, <potions? of mutation
ae ^= <scrolls? of immolation, <scrolls? of poison
ae ^= <missile, <misc
ae ^= >staff of.*, >useless_item

############################### End rc/autopickup.rc ###############################
##########################################################################################

################################### Begin rc/display.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
## Mutes are at end of file, so they override the rest

stat_colour = 3:red, 7:lightred

hp_colour = 100:green, 99:lightgrey, 75:yellow, 50:lightred, 25:red
mp_colour = 100:green, 99:lightgrey, 75:yellow, 50:lightred, 25:red

tile_font_crt_family  = Lucida Console
tile_font_stat_family = Lucida Console
tile_font_msg_family  = Lucida Console
tile_font_lbl_family  = Lucida Console


####### Menu Colors #######
# Set Alias & clear defaults
menu := menu_colour
menu =

# Variables
$decent := white
$mp := lightcyan
$interface := cyan
$danger := lightred
$item_dmg := red
$warning := yellow
$boring := darkgrey
$negative := brown
$positive := green
$good := lightblue
$verypositive := lightgreen
$awesome := lightmagenta

# General
menu += $boring:(melded)
menu += $boring:.*useless_item.*
menu += $item_dmg:.*evil_item.*
menu += inventory:$interface:.*equipped.*
#menu += $decent:.*artefact.*

menu += $warning:^unidentified .*(jewellery|potion|scroll|wand).*
menu += $good:^unidentified .*weapon.*(runed|glowing)
menu += $good:^unidentified .*armour.*(runed|glowing|embroidered|shiny|dyed)

# Staves
menu += $positive:[^r]staff of

# Wands
menu += brown:wand of digging
menu += lightgrey:wand of (flame|paralysis|charming|mindburst)
menu += lightmagenta:wand of (acid|quicksilver|light)
menu += lightcyan:wand of (iceblast|roots|warping)
menu += blue:wand of polymorph

# Scrolls
menu += $danger:scrolls? of torment
menu += $boring:scrolls? of noise
menu += $decent:scrolls? of (amnesia|identify|immolation)
menu += $good:scrolls? of (fear|fog|silence|summoning|vulnerability)
menu += $positive:scrolls? of (brand|enchant|revelation)
menu += $verypositive:scrolls? of (blinking|teleportation|butterflies)
menu += $awesome:scrolls? of (acquirement)

# Potions
menu += $danger:potions? of berserk
menu += magenta:potions? of mutation
menu += $decent:potions? of (enlightenment|lignification|ambrosia)
menu += $good:potions? of (stabbing|brilliance|cancellation|invisibility|might|resistance)
menu += $positive:potions? of curing
menu += $mp:potions? of magic
menu += $verypositive:potions? of (haste|heal wounds)
menu += $awesome:potions? of experience

# Amulets
menu += $good:amulet of (guardian spirit|the acrobat)
menu += $positive:amulet of (faith|reflection|magic regeneration|regeneration)

# Rings
menu += $warning:ring of (fire|ice)
menu += $decent:ring of flight
menu += $verypositive:ring of (.*slaying)
menu += $positive:ring of (poison resistance|protection from |positive energy|see invisible|resist corrosion)
menu += $good:ring of (.*evasion|.*protection|magical power|wizardry)

# Misc items
menu += blue:inert
menu += $good:throwing net
menu += $good:artefact

# Deck colouring
menu += $verypositive:deck of escape
menu += $positive:deck of summoning
menu += $danger:deck of destruction


######## Message coloring ########
# black, blue, green, cyan, red, magenta, brown, lightgrey,
# darkgrey, lightblue, lightgreen, lightcyan, lightred,
# lightmagenta, yellow, white

# Standard colours to be used for message highlighting
$danger   := lightred
$item_dmg := red
$warning  := yellow
$boring   := darkgrey
$negative := brown
$good     := lightblue
$positive := green
$verypositive := lightgreen
$awesome := lightmagenta
$interface := cyan
$takesaction := blue
$godaction := magenta
$mp := lightcyan

# Set Alias & clear defaults
msc := message_colour
msc =

msc += $mp:You feel your power returning
msc += $mp:Done waiting

msc += $danger:roused to righteous anger
msc += $danger:is roused by the hymn
msc += $danger:A magical barricade bars your way
msc += $danger:is repulsed
msc += $danger:seems less drained
msc += $danger:preventing you from leaping
msc += $danger:shrugs off the wave
msc += $danger:Your unholy channel expires
msc += $danger:Being near the torpor snail leaves you feeling lethargic
msc += $danger:The amulet engulfs you in a massive magical discharge
msc ^= $danger:Your.*appears confused
msc ^= $danger:You open a gate to Pandemonium
msc += $danger:Some icy apparitions appear
msc += $danger:You feel less empathic
msc ^= $danger:Qazlal is no longer ready to protect you from an element
msc ^= $danger:Your divine halo fades away
msc ^= $danger:Your divine shield disappears
msc ^= $danger:The orb of electricity explodes
msc ^= $danger:Your divine shield fades away
msc += $danger:visions of slaying
msc += $danger:You.*no longer.*bleed smoke
msc += $danger:Your shadow no longer tangibly mimics your actions
msc += $danger:You are even more entangled
msc += $danger:You have drawn Pain
msc += $danger:Your magical shield disappears
msc += $danger:creates some ice likenesses
msc += $danger:soul is no longer ripe for the taking
msc += $danger:You are no longer magically infusing your attacks
msc += $danger:The ambient light returns to normal
msc += $danger:An iron grate slams shut
msc += $danger:begins to accept
msc += $danger:begins to recite a word of recall
msc += $danger:begins to radiate toxic energy
msc += $danger:The shadow imp is revulsed by your support of nature
msc += $danger:Careful! You are starting to lose your buoyancy
msc ^= $danger:plants?.*suddenly grows? acid sacs
msc ^= $danger:Your.*is devoured by a tear in reality
msc += $danger:Your body is bloodless
msc += $danger:Your unliving flesh cannot be transformed in this way
msc += $danger:You can't disarm
msc += $danger:You feel strangely static
msc += $danger:A powerful magic interferes with your control of the blink
msc += $danger:burns.*terribly
msc += $danger:You are no longer teleporting projectiles to their destination
msc += $danger:Water floods your area
msc += $danger:You feel the presence of a powerless spirit
msc += $danger:You feel less (resistant|protected)
msc += $danger:You hear a crashing sound
msc += $danger:The tree smolders and burns
msc += $danger:You are contaminated with residual magics
msc += $danger:is duplicated
msc += $danger:You sense a malign presence
msc += $danger:The deck only has
msc += $danger:blocks your orb of destruction
msc += $danger:There are no remains here to animate
msc += $danger:Your ring of flames gutters out
msc += $danger:The elephant guardians awaken
msc += $danger:slides away
msc += $danger:moves from beneath you
msc += $danger:A powerful magic prevents control of your teleportation
msc += $danger:There's only.*cards? left!
msc += $danger:A huge vortex of air appears
msc += $danger:you're silenced
msc += $danger:Your hands slow down
msc += $danger:Your shroud falls apart
msc += $danger:Not with that terrain in the way
msc += $danger:Your teleport is interrupted
msc += $danger:Your.*revert to.*normal proportions
msc += $danger:Its appearance distorts for a moment
msc += $danger:A shaft opens up in the floor
msc += $danger:You are held in a net
msc += $danger:(The|Your).*falls away!
msc += $danger:The orbs collide in a blinding explosion
msc += $danger:You feel the power of the Abyss delaying your translocation
msc += $danger:Mara shimmers
msc += $danger:Your.*is blown up
msc += $danger:seems to grow more fierce
msc += $danger:attacks!
msc += $danger:You sense the presence of something unfriendly
msc += $danger:Your.*falls into the water
msc += $danger:Something unseen opens the huge gate
msc += $danger:changes into something you cannot see
msc += $danger:The rod doesn't have enough magic points
msc += $danger:The power of the Abyss keeps you in your place
msc += $danger:Your.*is destroyed
msc += $danger:You feel your control is inadequate
msc += $danger:A great vortex of raging winds appears
msc += $danger:You blow up your
msc += $danger:The sixfirhy seems to be charged up
msc += $danger:You feel your power drain away
msc += $danger:You cannot cast spells when silenced
msc += $danger:You feel hot and cold all over
msc += $danger:You don't have the energy to cast that spell
msc += $danger:and don't expect to remain undetected
msc += $danger:but the box appears empty
msc += $danger:your gold pieces vanish
msc += $danger:Your.*dies
msc += $danger:You cannot teleport right now
msc += $danger:You feel your power drawn to a protective spirit
msc += $danger:your magic stops regenerating
msc += $danger:Some monsters swap places
msc += $danger:You turn into a spiny porcupine
msc += $danger:Your limbs have turned to stone
msc += $danger:Your skin feels tender
msc += $danger:You turn into a fleshy mushroom
msc += $danger:The sound of falling rocks suddenly begins to subside
msc += $danger:The walls and floor vibrate strangely for a moment
msc += $danger:Your.*(armour|shield) melts away
msc += $danger:drains you
msc += $danger:feel drained
msc += $danger:strangely unstable
msc += $danger:curare-tipped.*hits you
msc += $danger:Space warps.* around you
msc += $danger:Space bends around you
msc += $danger:Space bends sharply around you!
msc += $danger:sense of stasis
msc += $danger:clumsily bash
msc += $danger:goes berserk
msc += $danger:Forgetting.* will destroy the book
msc += $danger:The blast of calcifying dust hits you
msc += $danger:You are engulfed in calcifying dust
msc += $danger:^It .* you
msc += $danger:[^f]Something.*you[^r]
msc += $danger:grabs you[^r]
msc += $danger:you convulse
msc += $danger:is unaffected
msc += $danger:blinks into view
msc += $danger:seems to speed up
msc += $danger:You feel yourself slow down
msc += $danger:The alarm trap emits a blaring wail
msc += $danger:The mark upon you grows brighter.
msc += $danger:flickers (and vanishes|out of sight)
msc += $danger:Terrible wounds (open|spread)
msc += $danger:The acid burns
msc += $danger:The.*is recalled
msc += $danger:The.*blows on a signal horn!
msc += $danger:You miscast
msc += $danger:zaps a wand
msc += $danger:You are no longer berserk
msc += $danger:You suddenly lose the ability to move
msc += $danger:Your.*glows black for a moment
msc += $danger:You are caught in a web
msc += $danger:You are knocked back by the lance of force
msc += $danger:You are knocked back by the blast of cold
msc += $danger:You are knocked back by the great wave of water
msc += $danger:You feel very sick
msc += $danger:Your.*falls away
msc += $danger:splits in two
msc += $danger:assumes the form|sacrifices itself
msc += $danger:Necromantic energies
msc += $danger:You feel an extremely numb sensation
msc += $danger:You feel jittery
msc += $danger:You are caught in (a|the) (net|web)
msc += $danger:You become entangled in (a|the) (net|web)
msc += $danger:You fall asleep
msc += $danger:The forest starts to sway and rumble
msc += $danger:Vines fly forth from the trees!
msc += $danger:Roots grasp at your
msc += $danger:Roots rise up from beneath you and drag you back to the ground
msc += $danger:The.*picks up a wand
msc += $danger:You struggle against (a|the) (net|web)
msc += $danger:You struggle to escape the net
msc += $danger:The.*engulfs you in water
msc += $danger:Your magical defenses are stripped away
msc += $danger:appears out of thin air
msc += $danger:You feel less protected from missiles
msc += $danger:The power of Zot is invoked against
msc += $danger:you fail to dodge
msc += $danger:Death has come for you
msc += $danger:Your body is wracked with pain
msc += $danger:You sense an overwhelmingly malignant aura
msc += $danger:Space twists in upon itself
msc += $danger:Strange energies course through your body
msc += $danger:You feel haunted
msc += $danger:Your.*suddenly stops moving
msc += $danger:You feel incredibly sick
msc += $danger:You don't have enough magic
msc += $danger:You haven't enough magic at the moment
msc += $danger:You (fall|are sucked) into a shaft
msc += $danger:seems to grow stronger
msc += $danger:Dowan seems to find hidden reserves of power
msc += $danger:You struggle to resist
msc += $danger:You barely resist
msc += $danger:You turn into an animated tree
msc += $danger:Your roots penetrate the ground
msc += $danger:is no longer charmed
msc += $danger:You try to slip out of the net
msc += $danger:You become entangled in the net
msc += $danger:You feel a build-up of mutagenic energy
msc += $danger:You cannot pacify this monster
msc += $danger:You feel a (horrible|terrible) chill
msc += $danger:You are burned terribly
msc += $danger:moth of wrath (goads|infuriates) the
msc += $danger:you trip and fall back down the stairs
msc += $danger:the glow from your corona prevents you from becoming completely invisible
msc += $danger:A red film seems to cover your vision as you go berserk
msc += $danger:Your limbs are stiffening
msc += $danger:You have turned to stone
msc += $danger:Draining that being is not a good idea
msc += $danger:You feel.*ill
msc += $danger:Something feeds on your intellect
msc += $danger:The barbed spikes become lodged in your body
msc += $danger:You feel your translocation being delayed
msc += $danger:You fail to use your ability
msc += $danger:Oh no! You have blundered into a Zot trap
msc += $danger:Wisps of shadow swirl around
msc += $danger:The.*grows two more
msc += $danger:There is a sealed passage
msc += $danger:doors? slams? shut
msc += $danger:A basket of spiders falls from above
msc += $danger:is bolstered by the flame
msc ^= $danger:Mennas' surroundings become eerily quiet
msc += $danger:attempts to bespell you
msc += $danger:You feel horribly lethargic
msc += $danger:firmly anchored in space
msc += $danger:You stop (a|de)scending the stairs
msc += $danger:You tear a large gash into the net
msc += $danger:reflects
msc += $danger:The walls disappear
msc += $danger:You cannot afford.*fee
msc += $danger:This weapon is already enchanted
msc += $danger:You feel.*sluggish
msc += $danger:You no longer adapt resistances upon receiving elemental damage
msc += $danger:The storm surrounding you is now too weak to repel missiles
msc += $danger:You feel extremely strange
msc += $danger:You feel rather ponderous
msc += $danger:That seemed strangely inert
msc += $danger:You can't unwield your weapon to draw a new one
msc += $danger:the volcano erupts with a roar
msc += $danger:Your guardian golem overheats
msc += $danger:burn any scroll you tried to read
msc += $danger:You are blown backwards
msc += $danger:It is caustic
msc += $danger:Not only inedible but also greatly harmful
msc += $danger:evokes.*(amulet|ring)
msc += $danger:take too long for a potion to reach your roots
msc += $danger:There was something very wrong with that liquid
msc += $danger:You cannot move
msc += $danger:stands defiantly in death's doorway
msc += $danger:twongs alarmingly
msc += $danger:You( suddenly)? feel( more| all small and)? vulnerable
msc += $danger:The poison in your body grows stronger
msc += $danger:You are being crushed by all of your possessions
msc += $danger:You are carrying too much
msc += $danger:You draw Wild Magic
msc += $danger:You draw the Helix
msc += $danger:This potion can/'t work under stasis
msc += $danger:Your icy (armour|shield) evaporates
msc += $danger:You struggle to detach yourself from the web
msc += $danger:You are more confused
msc += $danger:You are confused
msc += $danger:breaks free
msc += $danger:You.*re too confused
msc += $danger:Your skin stops crawling
msc += $danger:Your attempt to break free
msc += $danger:Your resistance to elements expires
msc += $danger:You are blasted by holy energy
msc += $danger:You feel uncertain
msc += $danger:You are firmly grounded in the material plane once more
msc += $danger:The writing blurs in front of your eyes
msc += $danger:You cannot cast spells while unable to breathe
msc += $danger:You feel your rage building
msc += $danger:You feel a little less
msc += $danger:This card doesn't seem to belong here
msc += $danger:You flicker back
msc += $danger:something.*blocking the
msc += $danger:You slice into (a|the) (net|web)
msc += $danger:It doesn't seem very happy
msc += $danger:You have been turned into a pig
msc += $danger:comes? into view
msc += $danger:You feel quite a bit less full
msc += $danger:Your unstable footing causes you to fumble your attack
msc += $danger:You are being weighed down by all of your possessions
msc += $danger:flinch away in fear
msc += $danger:is completely unfazed by your meager offer of peace
msc += $danger:deflects the
msc += $danger:The blink frog basks in the distortional energy
msc += $danger:appears unharmed
msc ^= $danger:You and your allies can no longer gain power from killing the unholy and evil
msc += $danger:You have lost your religion
msc += $danger:Your shroud unravels
msc += $danger:Your attacks are no longer magically infused
msc += $danger:You feel your attacks grow feeble
msc += $danger:Magical energy is drained from your
msc += $danger:A chorus of chattering voices calls out to you
msc += $danger:You can no longer
msc += $danger:The.*shudders
msc ^= $danger:Your unholy and evil allies forsake you
msc += $danger:Your transformation has ended
msc += $danger:Nothing appears to have answered your call
msc += $danger:The grasping roots prevent you from becoming airborne
msc += $danger:You kill your
msc += $danger:You feel less regenerative
msc += $danger:Lernaean hydra knocks down a tree
msc += $danger:You are caught in an explosion of electrical discharges
msc += $danger:bends your attack away
msc += $danger:Your song has ended
msc += $danger:goes into a battle-frenzy
msc += $danger:Your aura of abjuration expires
msc += $danger:Your.*is blown up
msc += $danger:There's only one card left
msc += $danger:You deal a card
msc += $danger:darts out from under the net
msc += $danger:You wield the.*\'s
msc += $danger:dips into the water
msc += $danger:You destroy your
msc += $danger:You're too exhausted to jump
msc += $danger:Your battlesphere expends the last of its energy and dissipates
msc += $danger:You feel your bond with your battlesphere wane
msc += $danger:Your battlesphere wavers and loses cohesion
msc += $danger:You lose concentration completely
msc += $danger:go into a battle-frenzy
msc += $danger:You can't jump while in water
msc += $danger:staircase.*moves
msc += $danger:You wield
msc += $danger:is filled with.*inner flame
msc += $danger:You feel guilty
msc += $danger:You feel extremely guilty
msc += $danger:picks up.*throwing net
msc += $danger:You feel less protected from physical attacks
msc ^= $danger:Your.*falters for a moment
msc += $danger:Mutagenic energy flows through the plutonium sword
msc += $danger:Your.*is incinerated
msc ^= $danger:begins absorbing vital energies
msc += $danger:Blessed fire suddenly surrounds you
msc ^= $danger:Your.*is poisoned
msc ^= $danger:Your.*looks even sicker
msc ^= $danger:Your.*is no longer beserk
msc += $danger:You swing wildly
msc += $danger:You lose your focus
msc += $danger:You feel threatened and lose the ability
msc ^= $danger:Your.*looks rather confused

# Item Destruction, gaining bad mutations, or losing good ones, penance, and gong
msc += $item_dmg:Your teeth shrink to normal size
msc += $item_dmg:Your.*scales disappear
msc += $item_dmg:You feel a strong urge to yell
msc += $item_dmg:Your wild genetic ride slows down
msc += $item_dmg:The barb on your tail disappears
msc += $item_dmg:Your wings shrivel and weaken
msc += $item_dmg:You feel very strange
msc += $item_dmg:You feel conductive
msc += $item_dmg:A chill runs up and down your throat
msc += $item_dmg:You feel forlorn
msc += $item_dmg:Your skin no longer functions as natural camouflage
msc += $item_dmg:Your natural healing is weakened
msc += $item_dmg:Your rate of healing slows
msc += $item_dmg:Your talons dull and shrink into feet
msc += $item_dmg:You feel genetically unstable
msc += $item_dmg:The horns on your head shrink a bit
msc += $item_dmg:You feel an ache in your throat
msc += $item_dmg:You feel yourself wasting away
msc += $item_dmg:You feel angry
msc += $item_dmg:You feel a little pissed off
msc += $item_dmg:Your hooves look more like feet
msc += $item_dmg:A piece of fruit is consumed
msc += $item_dmg:pieces of fruit are consumed
msc += $item_dmg:You feel slightly disoriented
msc += $item_dmg:Your system partially rejects artificial healing
msc += $item_dmg:You feel even more weirdly uncertain
msc += $item_dmg:You feel weirdly uncertain
msc += $item_dmg:The drain falls to bits
msc += $item_dmg:acid corrodes
msc ^= $item_dmg:freezes? and shatters?
msc += $item_dmg:covered with spores
msc += $item_dmg:rots? away
msc += $item_dmg:It has a very clean taste
msc += $item_dmg:You feel your flesh rotting away
msc += $item_dmg:You are engulfed in dark miasma
msc += $item_dmg:You feel very guilty
msc += $item_dmg:That really hurt
msc += $item_dmg:You fall into the water
msc += $item_dmg:PTOANNNG
msc += $item_dmg:PANG
msc += $item_dmg:GONNNNG
msc += $item_dmg:BOUMMMMG
msc += $item_dmg:SHROANNG
msc += $item_dmg:BONNNG
msc += $item_dmg:You will pay for your transgression. mortal
msc += $item_dmg:You hear a distant slurping noise
msc ^= $item_dmg:picks up.*(potions?|scrolls?|wand)
msc += $item_dmg:drinks a potion
msc += $item_dmg:You hear a zap
msc += $item_dmg:reads a scroll
msc += $item_dmg:Mutagenic energies flood into your body
msc += $item_dmg:your body twists? and deforms?
msc += $item_dmg:You really shouldn't be using
msc += $item_dmg:You die.
msc += $item_dmg:You are engulfed in mutagenic fog
msc += $item_dmg:You feel the urge to shout
msc += $item_dmg:Your vision blurs
msc += $item_dmg:You feel frail
msc += $item_dmg:the book crumbles to dust
msc += $item_dmg:Your thinking seems confused
msc += $item_dmg:You are heavily infused with residual magics
msc += $item_dmg:Your vision seems duller
msc += $item_dmg:You feel less energetic


msc += $warning:You yowl
msc += $warning:You scream at
msc += $warning:is no longer distracted by gold
msc += $warning:boulder beetle smashes into something
msc += $warning:grate falls apart
msc += $warning:Your passage of Golubria closes with a snap
msc += $warning:is no longer weakened
msc += $warning:Something blocks
msc += $warning:Your aim is not that steady anymore
msc += $warning:You feel strangely alone
msc += $warning:You feel the tide rushing in
msc += $warning:Failed to move towards target
msc += $warning:Your protection from physical attacks is fading
msc ^= $warning:The Screaming Sword
msc += $warning:A large net falls onto you
msc += $warning:You stop recalling your allies
msc += $warning:You feel a little guilty
msc += $warning:snaps.*out of.*fear
msc += $warning:Your stasis keeps you stable
msc += $warning:You retract your mandibles
msc += $warning:The boots cling to your feet
msc ^= $warning:Your ring of flames is guttering out
msc += $warning:reforms as a
msc += $warning:You draw the first five cards.*and discard the rest
msc += $warning:You have damaged your brain
msc += $warning:A thin mist springs up around you
msc += $warning:The mangrove smolders and burns
msc += $warning:You feel your anger subside
msc += $warning:You feel nervous for a moment
msc += $warning:Your.*is burned terribly
msc += $warning:Your.*is frozen
msc += $warning:There is nothing there. so you fail to move
msc += $warning:You enter the passage of Golubria
msc += $warning:You start to feel a little slower
msc += $warning:drowns your?
msc += $warning:puts on a
msc += $warning:Faint laughter comes from somewhere
msc += $warning:shroud bends your.*attack away
msc += $warning:shadowy figures dance through the air in front of you
msc += $warning:This room is filled with shadowy figures
msc += $warning:You feel spirits watching over you
msc += $warning:You feel a genetic drift
msc += $warning:You return to the normal time flow
msc += $warning:reappears nearby
msc += $warning:I'll put it outside for you
msc += $warning:A pair of horns grows on your head
msc += $warning:is held in a (net|web)
msc += $warning:Smoke pours forth from your.*of chaos
msc += $warning:You cannot go berserk while under stasis
msc += $warning:You feel less woody
msc += $warning:is no longer paralysed
msc += $warning:The antennae on your head shrink away
msc += $warning:You feel less stealthy
msc += $warning:falls into the lava
msc ^= $warning:Your spellforged servitor disappears
msc += $warning:The shock serpent's electric aura discharges
msc += $warning:The air sparks with electricity
msc += $warning:You sense an evil presence
msc += $warning:Jory draws you further into his thrall
msc += $warning:grabs your
msc += $warning:You shudder from the earth-shattering force
msc += $warning:Smoke pours from your
msc += $warning:curses noisily
msc += $warning:is no longer blind
msc += $warning:Lightning arcs down from a storm cloud
msc += $warning:You feel strangely numb
msc += $warning:You feel less sure on your feet
msc += $warning:The air around you crackles with electrical energy
msc += $warning:The vortex of raging winds lifts you up
msc += $warning:creates a blast of rain
msc += $warning:shimmers and seems to become two
msc += $warning:Your ball lightning explodes
msc += $warning:There is a sudden explosion of flames
msc += $warning:You feel extremely nervous for a moment
msc += $warning:The orb fizzles
msc += $warning:A film of ice covers the
msc += $warning:That ambrosia tasted strange
msc += $warning:orb of destruction hits.*wall
msc += $warning:Something tries to affect you
msc += $warning:You block its attack
msc += $warning:A large net falls down
msc += $warning:You have made a black mistake
msc += $warning:You are stuck in your current form
msc += $warning:You feel like a pig
msc += $warning:Your hearing returns
msc += $warning:You feel less in control of your magic
msc += $warning:You feel your magical power running wild
msc += $warning:are frozen
msc += $warning:Something hits you but does no damage
msc += $warning:You turn into a bat
msc += $warning:A demon appears
msc += $warning:twists and deforms
msc += $warning:There is a sudden blast of acid
msc += $warning:Die. mortal
msc += $warning:You choke on the stench
msc += $warning:Your summoned allies are left behind
msc += $warning:You feel that your aim is more steady
msc += $warning:There's a creature in the
msc += $warning:They are\:
msc += $warning:A card falls out of the deck
msc += $warning:(dart|javelin|large rock|stone|boomerang) disappears in a puff of smoke
msc += $warning:You can't close doors while held in a net
msc += $warning:A slime creature suddenly
msc += $warning:You feel closer to the material plane
msc += $warning:leaps out from its hiding place
msc += $warning:You stop removing your armour
msc += $warning:You smell decay
msc += $warning:You feel a malignant aura surround you
msc += $warning:briefly surrounded by a scintillating aura of random colours
msc += $warning:looks stronger
msc += $warning:You have difficulty breathing
msc += $warning:The heat melts your.*(armour|shield)
msc += $warning:You are engulfed in a cloud of spores
msc += $warning:You feel less perceptive
msc += $warning:A profound silence engulfs you
msc += $warning:An unnatural silence engulfs you
msc ^= $warning:Hurry and find it before the entrance collapses
msc += $warning:Your memory of.*unravels
msc += $warning:You speak a Word of immense power
msc += $warning:seems to move somewhat quicker
msc += $warning:steals.*your
msc += $warning:A tentacle flies out from the starspawn's body
msc += $warning:The explosive bolt releases an explosion
msc += $warning:There is a Zot trap here
msc += $warning:You enter a teleport trap
msc += $warning:You need to enable at least one skill for training
msc += $warning:You (resume|stop) training
msc += $warning:You feel slightly jumpy
msc += $warning:You are splashed with acid
msc += $warning:ticking.*clock
msc += $warning:dying ticks
msc += $warning:distant snort
msc += $warning:odd grinding sound
msc += $warning:creaking of ancient gears
msc += $warning:floor suddenly vibrates
msc += $warning:a sudden draft
msc += $warning:coins.*counted
msc += $warning:tolling.*bell
msc += $warning:fails to return
msc += $warning:Something appears in a flash of light
msc += $warning:you turn into a fiery being
msc += $warning:no longer ripe
msc += $warning:The wave splashes down
msc += $warning:The spell fizzles
msc += $warning:The crackling of melting ice is subsiding rapidly
msc += $warning:seems to gain new vigour
msc += $warning:You feel strangely stable
msc += $warning:(asks|barks|bellows|boasts|brags|breathes|buzzes|cackles|calls|caws|chants|cheers)
msc += $warning:(chilling moan|complains|cries|croak|curses loudly|embarks|explains|Floosh|gibbers|giggles)
msc += $warning:(grits|groans|growls|grumbles|grunts|gurgles|hisses|jeers|keens|laughs|launches|makes a sound)
msc += $warning:(mewls|moans|mumbles|murmurs|mutters|pleads|prattles|preaches|queries|recites|roars|says)
msc += $warning:(scowls|screams|screeches|shout|shriek|sighs|sings|snarls|sneers|snorts|threatens|trumpets)
msc += $warning:(utters an oath|wail|wails|whimpers|whisper|yells)
msc += $warning:you roar
msc += $warning:imitates the bagpipes
msc += $warning:looks more energetic
msc += $warning:suddenly curses
msc += $warning:Dowan breathes
msc += $warning:Dowan shakes his head
msc += $warning:You hear strange voices
msc += $warning:You hear
msc += $warning:You drop
msc += $warning:You hear an irritating high-pitched whine
msc += $warning:You hear snatches of song
msc += $warning:seems more stable
msc += $warning:opens the (door|gate|large door)
msc += $warning:dissolves into sparkling lights
msc += $warning:[^un]wields
msc += $warning:There is a portal leading out of here
msc += $warning:Natasha's spirit plunges in to the ground
msc += $warning:Natasha's spirit rises from its lifeless body
msc += $warning:wears
msc += $warning:You are.*contaminated
msc += $warning:blinks
msc += $warning:You are starting to lose your buoyancy
msc += $warning:You float gracefully downwards
msc += $warning:Your surroundings suddenly seem different
msc += $warning:It (begins to drip with poison|bursts into flame|glows with a cold blue light|softly glows with a divine radiance|stops glowing)
msc += $warning:Your.*drips with poison
msc += $warning:You sense an unholy aura
msc += $warning:It is covered in frost
msc += $warning:The shock serpent begins to gather electrical charge
msc += $warning:moves out of view
msc += $warning:basks in the mutagenic energy
msc += $warning:Several doors burst open
msc += $warning:Flickering shadows surround you
msc += $warning:You.*one of the.*heads off
msc += $warning:slime creatures merge
msc += $warning:roars a battle-cry
msc += $warning:The.*is healed
msc += $warning:You stumble backwards
msc += $warning:Are you sure you want to stumble around while confused
msc += $warning:it creaks loudly
msc += $warning:The.*explodes
msc += $warning:You are caught in (a fiery explosion|an explosion of ice and frost)
msc += $warning:stops burning
msc += $warning:(The |.*)is healed
msc += $warning:You feel less studious
msc += $warning:(corpses?|macabre mass) merges with
msc += $warning:You start to feel a little uncertain
msc += $warning:corpses? begins to drag
msc += $warning:corpses meld into an agglomeration of writhing flesh
msc += $warning:beckons forth a restless soul
msc += $warning:Something reaches out for you
msc += $warning:Something tries to feed on your intellect
msc += $warning:You feel a brief urge to hack something to bits
msc += $warning:Pain shudders through your
msc += $warning:The.*passes through your shield
msc += $warning:draws strength from your injuries
msc += $warning:The.*pierces through
msc += $warning:The forest fire spreads
msc += $warning:The tree burns like a torch
msc += $warning:magical defenses are stripped away
msc += $warning:You blink
msc += $warning:You teleport
msc += $warning:You step into.*shadow
msc += $warning:Grasping roots rise from the ground around the
msc += $warning:The winds start to flow at the.*will
msc += $warning:The .*(are|is) blown away
msc += $warning:goes into a frenzy at the smell of blood
msc += $warning:Something picks up
msc += $warning:You smell burning wood
msc += $warning:stumbles backwards
msc += $warning:looks slightly unstable
msc += $warning:slips into darkness
msc += $warning:The air around.*erupts in flames
msc += $warning:hops backward while attacking
msc += $warning:violent explosion of flames
msc += $warning:turns its malign attention towards you
msc += $warning:Splash!
msc += $warning:Harold gasps with his last breath
msc += $warning:You see a puff of smoke
msc += $warning:pour from your
msc += $warning:Tentacles burst out of the water
msc += $warning:calls forth a grand avatar
msc += $warning:focuses on the pain
msc += $warning:suddenly seems more agile
msc += $warning:regenerates before your eyes
msc += $warning:You feel corrupt for a moment
msc += $warning:Send 'em back where they came from
msc += $warning:The net rips apart
msc += $warning:Your surroundings seem slightly different
msc += $warning:You are under the weather
msc += $warning:You are standing in the rain
msc += $warning:The rain has left you waist-deep in water
msc += $warning:We do not forgive those who trespass against us
msc += $warning:A.*appears from out of thin air
msc += $warning:looks more healthy
msc += $warning:A mysterious force pulls you upwards
msc += $warning:punctures the fabric of the universe
msc += $warning:degenerates into a cloud
msc += $warning:wounds heal themselves
msc += $warning:is no longer moving slowly
msc += $warning:is completely healed
msc += $warning:You heal
msc += $warning:It is briefly surrounded by a scintillating aura of random colours
msc += $warning:Partly explored
msc += $warning:There is a shaft here
msc += $warning:You feel that this wand is rather unreliable
msc += $warning:You feel less protected
msc += $warning:You hear a crashing sound
msc += $warning:shatters
msc += $warning:apparitions take form around you
msc += $warning:You feel your magic capacity is already quite full
msc += $warning:pulls away from the web
msc += $warning:withdraws into its
msc += $warning:is no longer petrified
msc += $warning:You remove
msc += $warning:Your.*dissolves into shadows
msc += $warning:Your.*stops moving altogether
msc += $warning:hides itself under the floor
msc += $warning:puts on a burst of speed
msc += $warning:decay slows
msc += $warning:Your.*is caught in
msc += $warning:Thorny briars emerge from the ground!
msc += $warning:You flicker for a moment
msc += $warning:There is a.*altar.*here
msc += $warning:You kneel at the altar
msc += $warning:You feel a strong urge to attack something
msc += $warning:You cannot move away from
msc += $warning:The pull of.*song draws you forwards
msc += $warning:Shadowy forms rise from the deep
msc += $warning:You feel as though you will be slow longer
msc += $warning:disappears!
msc += $warning:Your.*is no longer moving quickly
msc += $warning:You feel your magic capacity decrease
msc += $warning:drains the heat from the surrounding environment
msc += $warning:pounces on you
msc += $warning:A tentacle rises from the water
msc += $warning:comes (down|up) the stairs
msc += $warning:You catch a bit of a chill
msc += $warning:A ballistomycete grows in the wake of the spore
msc += $warning:A fungus suddenly grows
msc += $warning:A toadstool grows
msc += $warning:then quickly surges around you
msc += $warning:There is a sudden explosion of frost
msc += $warning:That was not very filling
msc += $warning:You failed to disarm the trap
msc += $warning:is covered with a thin layer of ice
msc += $warning:draws out.*weapon's spirit
msc += $warning:You are pushed out
msc ^= $warning:Your.*seems to slow down
msc += $warning:thirsts for the lives of mortals
msc += $warning:emits a brilliant flash of light
msc += $warning:is firebranded into
msc += $warning:is no longer bleeding
msc += $warning:The dungeon rumbles around Jorgrun!
msc += $warning:evaporates and reforms as
msc += $warning:You turn into a venomous arachnid creature
msc += $warning:infuriates you
msc += $warning:Your extra speed is starting to run out
msc += $warning:Your skin is crawling a little less now
msc += $warning:You stumble into the trap
msc += $warning:Your transformation is almost over
msc += $warning:You feel magic leave you
msc += $warning:You feel magic returning to you
msc += $warning:Your (horns|talons) disappear
msc += $warning:Tentacles burst from the starspawn
msc += $warning:you must find a gate leading back
msc += $warning:You fall off the wall
msc += $warning:Blech - you need (greens|meat)
msc += $warning:A starcursed mass splits
msc += $warning:You draw the Sage
msc += $warning:You feel a wave of frost pass over you
msc += $warning:The creatures around you are filled with an inner flame
msc += $warning:is filled with an inner flame
msc += $warning:You feel less healthy
msc += $warning:summons a great blast of wind
msc += $warning:Your attack snaps.*out of its fear
msc += $warning:You feel blessed for a moment
msc += $warning:You draw a card
msc += $warning:Walls emerge from the floor
msc += $warning:You feel like more of a target
msc += $warning:is knocked back by the flood of elemental water
msc += $warning:blown away by the wind
msc += $warning:is surrounded by Orcish apparitions
msc += $warning:The.*reappears nearby
msc += $warning:The deck of cards disappears
msc += $warning:The.*looks more experienced
msc += $warning:There is a rocky tunnel leading out of this place here
msc += $warning:Your icy (armour|shield) starts to melt
msc += $warning:Your legs become a tail
msc += $warning:You feel the effects of Trog's Hand fading
msc += $warning:You slam the door shut with a bang
msc += $warning:magical effects unravel
msc += $warning:You awkwardly throw
msc += $warning:You erupt
msc += $warning:The flames covering.*go out
msc += $warning:bleats in terror
msc += $warning:seems to regain.*courage
msc += $warning:You have a feeling of ineptitude
msc += $warning:falls through a shaft
msc += $warning:You cannot throw anything while held in a net
msc += $warning:furiously retaliates
msc += $warning:The blast of chaos engulfs your?
msc += $warning:You are engulfed in seething chaos
msc += $warning:Your song is almost over
msc += $warning:is in the way
msc += $warning:You are too berserk
msc += $warning:The tentacle pulls you backwards
msc += $warning:starcursed mass shudders and
msc += $warning:The kraken squirts a massive cloud of ink
msc += $warning:Wisps of shadow whirl around
msc += $warning:You are too injured to fight recklessly
msc += $warning:shakes off its lethargy
msc += $warning:I don't know how to get there
msc += $warning:Your.*warbles
msc += $warning:chimes melodiously
msc += $warning:erupts into laughter
msc += $warning:makes a deep moaning sound
msc += $warning:raves incoherently
msc += $warning:speaks gibberish
msc += $warning:belts out
msc += $warning:yelps
msc += $warning:goes tick-tock
msc += $warning:gives off a wolf whistle
msc ^= $warning:[e] your.* of resist
msc += $warning:phases out as you
msc += $warning:momentarily phases out
msc += $warning:cracks jokes
msc += $warning:Your orb of destruction dissipates
msc += $warning:regales you with its life story
msc += $warning:parrots the noises around you
msc += $warning:lets out a mournful sigh
msc += $warning:tootles away
msc += $warning:makes a horrible noise
msc += $warning:burps loudly
msc += $warning:You are caught in a violent explosion
msc += $warning:pulses with an eldritch light
msc += $warning:the glow from your magical contamination prevents you from becoming completely invisible
msc += $warning:appears from out of your range of vision
msc += $warning:You stop putting on your armour
msc += $warning:We have you now
msc += $warning:You do not belong in this place
msc += $warning:There is a sudden explosion of magical energy
msc += $warning:Something forms from out of thin air
msc += $warning:You sense a hostile presence
msc += $warning:Trespassers are not welcome here
msc += $warning:You feel a terrible foreboding
msc += $warning:You will not leave this place
msc += $warning:wrenching scream
msc += $warning:before it is too late
msc += $warning:picks up
msc += $warning:Nothing appears to happen
msc += $warning:The dead are
msc += $warning:The boulder beetle hits a closed door
msc += $warning:begin to drag.*along the ground
msc += $warning:merge to form a (large abomination|macabre mass|small abomination)
msc += $warning:Two macabre masses merge
msc += $warning:falls through the shaft
msc += $warning:There is a crawl-hole back to the Lair here
msc += $warning:There is a hole to the Spider Nest here
msc += $warning:You create a pond
msc += $warning:Mennas becomes audible again
msc += $warning:That was extremely unsatisfying
msc += $warning:The wind howls around you
msc += $warning:You are feeling less magically infused
msc += $warning:Something invisible bursts forth from the water
msc += $warning:Something.*misses
msc += $warning:There is a cloud of mutagenic fog here
msc += $warning:howls
msc += $warning:You part the fleshy orifice with a squelch
msc += $warning:The orb of energy explodes
msc += $warning:The air shimmers briefly around you
msc += $warning:You are much too full right now
msc += $warning:turns to fight
msc += $warning:You feel transcendent for a moment
msc += $warning:You're too terrified to move while being watched
msc += $warning:The weapon returns to the
msc += $warning:The queen bee calls on the killer bee to defend her
msc += $warning:You turn into a bat
msc += $warning:Your.*looks incredibly listless
msc += $warning:The mass is resisting your pull
msc += $warning:escapes
msc += $warning:The silence causes your song to end
msc += $warning:You feel (slightly|somewhat) less full
msc += $warning:The light of Elyvilon fails to reach
msc += $warning:The light of Elyvilon almost touches upon
msc += $warning:[^r]pulls free of the water
msc += $warning:Your piety has decreased
msc += $warning:struggles to resist
msc += $warning:You are outlined in light
msc += $warning:Your.*is outlined in light
msc += $warning:You feel momentarily disoriented
msc += $warning:You are now empty
msc += $warning:(prevent|prevents) you from hitting
msc += $warning:The water nymph flows with the water
msc += $warning:summons a
msc += $warning:cannot make way for you
msc += $warning:The horns on your head shrink away
msc += $warning:Your shroud begins to fray at the edges
msc += $warning:You'd need three hands to do that
msc += $warning:Your.*disappears
msc += $warning:That's too.*for you
msc += $warning:The dungeon trembles and rubble falls from the walls
msc += $warning:Finesse? Hah! Time to rip out guts
msc += $warning:You fail to extend your transformation any further
msc += $warning:This spell does not affect your current form
msc += $warning:You can't wield anything in your present form
msc += $warning:Your.*revert to their normal proportions
msc += $warning:Suddenly Natasha's spirit rises from her lifeless body
msc += $warning:Your.*shudders
# Demonspawn gaining a mutation they already have
msc += $warning:Your mutations feel more permanent
msc += $warning:Roots rise up from beneath.*and drag it to the ground
msc ^= $warning:You feel a sudden chill
msc += $warning:You feel hot for a moment
msc += $warning:stop glowing
msc += $warning:The water foams
msc += $warning:The satyr's allies are stirred to greatness
msc += $warning:Mushrooms sprout up around you
msc += $warning:seems less confused
msc += $warning:You could not reach far enough
msc ^= $warning:The golden flame engulfs you
msc += $warning:You shudder
msc += $warning:The giant firefly flashes a warning beacon
msc += $warning:vibrate crazily for a second
msc += $warning:Harold falls down. and clutches his wounds
msc += $warning:You finish recalling your allies
msc += $warning:Your.*wears
msc += $warning:Something (bites|hits) your?
msc += $warning:You feel more confident with your borrowed prowess
msc += $warning:Your hands get new energy
msc += $warning:You squeal for attention
msc ^= $warning:changes into
msc += $warning:The crackle of the magical portal is almost imperceptible now
msc += $warning:blocks (the|you)
msc += $warning:You start to feel a little faster
msc += $warning:You meow for attention
msc += $warning:The lightning arc arcs out of your line of sight
msc += $warning:The lightning arc suddenly appears
msc += $warning:The bush is engulfed in roaring flames
msc += $warning:A yell rips itself from your throat
msc += $warning:Purgy wonders. \"What am I doing in here\?\"
msc += $warning:You create some ball lightning
msc += $warning:dances into the air
msc += $warning:appears
msc += $warning:Your divine protection wanes
msc += $warning:The sheep \"Baaaas\" balefully
msc += $warning:is blown backwards by the freezing wind


msc += $boring:Your tentacles glow momentarily
msc += $boring:You feel a little dazed
msc += $boring:You feel mildly nauseous
msc += $boring:looks momentarily confused
msc += $boring:Motes of dust swirl before your eyes
msc ^= $boring:You squeeze the fleshy orifice shut
msc += $boring:Gastronok glows a brilliant shade of cerise
msc += $boring:fingertips start to glow
msc += $boring:eyes start to glow
msc += $boring:You smell tea
msc += $boring:Your ghoul eats
msc += $boring:seems to dim momentarily
msc += $boring:The net is caught on your fulminant prism
msc += $boring:The shadows disperse without effect
msc += $boring:You feel woody for a moment
msc += $boring:Your vision is briefly tinged with green
msc ^= $boring:Sigmund is suddenly surrounded by pale red light
msc += $boring:has a weird expression for a moment
msc += $boring:You feel roots moving beneath the ground
msc += $boring:This spell is already in effect
msc ^= $boring:You displace your
msc ^= $boring:whispers something so quietly that you cannot hear
msc ^= $boring:for a moment.*blends into the shadows
msc ^= $boring:picks up a beetle and eats it
msc += $boring:Everything looks hazy for a moment
msc += $boring:There is a strange surge of energy around
msc += $boring:orc priest shimmers for a moment
msc += $boring:orc priest's eyes start to glow
msc += $boring:The weapon returns to your
msc += $boring:Your bandages flutter
msc += $boring:The water in the fountain briefly bubbles
msc += $boring:The bush looks momentarily different
msc += $boring:Dowan's feet meld with the ground. briefly
msc += $boring:briefly looks nauseous
msc += $boring:twitches
msc += $boring:Jessica looks very angry
msc += $boring:You fall off the door
msc += $boring:as though insubstantial
msc += $boring:The Killer Klown sprays water
msc += $boring:The Killer Klown honks
msc += $boring:wriggles its tentacles
msc += $boring:You reach down and part the fleshy orifice
msc += $boring:orb spider pulsates with a strange energy
msc += $boring:orb spider begins to weave its threads into a brightly glowing ball
msc += $boring:Your eyebrows briefly feel incredibly bushy
msc += $boring:briefly appears rusty
msc += $boring:Your.*stops glowing
msc += $boring:Your.*briefly vibrates
msc += $boring:You feel gritty
msc += $boring:You briefly become tangled in your
msc += $boring:Your eyebrows wriggle
msc += $boring:You detect nothing
msc += $boring:Your.*shimmers for a moment
msc += $boring:Your.*eyes start to glow
msc += $boring:Your.*spins!
msc += $boring:grins madly
msc += $boring:You lose your grip on
msc += $boring:The water engulfing you falls away
msc += $boring:The disc glows for a moment
msc += $boring:Your.*briefly glows
msc += $boring:You feel numb
msc += $boring:The chaos spawn grows dozens of eye stalks in order to get a better look at you
msc += $boring:Jory stares carefully at you
msc += $boring:seems to be having trouble coordinating.*its legs
msc += $boring:Your.*flashes
msc += $boring:You create a blast of thin mist
msc ^= $boring:then vanish
msc += $boring:avoids triggering.*trap
msc += $boring:Terence looks scornfully at you
msc += $boring:Sigmund looks at you with fury
msc += $boring:holds.*ground
msc += $boring:The door collapses
msc += $boring:You smell baking bread
msc += $boring:The lightning arc grounds out
msc += $boring:Fannar glares icily
msc ^= $boring:A poisoned needle shoots out and hits your shield
msc += $boring:ghost twirls its
msc += $boring:You attack empty space
msc += $boring:Eustachio twirls his moustache
msc += $boring:is briefly tinged with black
msc += $boring:The dust glows
msc += $boring:Crazy Yiuf scratches his head thoughtfully
msc += $boring:Crazy Yiuf counts something out on his finger
msc += $boring:The crystal guardian glitters
msc += $boring:The wizard's fingertips start to glow
msc += $boring:You are already empty-
msc ^= $boring:the.*shaped block of ice
msc ^= $boring:briefly gains? a (green|red|yellow) sheen
msc += $boring:The great wave of water passes through the water elemental
msc += $boring:shimmers and vanishes
msc += $boring:You do an impromptu tapdance
msc += $boring:You feel uncomfortable
msc ^= $boring:The shadow imp breathes mist at you
msc += $boring:That snozzcumber tasted truly putrid
msc += $boring:The reaper draws a finger across its throat
msc += $boring:Your.*seems to dim momentarily
msc += $boring:Your.*is briefly tinged with black
msc += $boring:Your.*shivers with cold
msc += $boring:A malignant aura surrounds your
msc += $boring:Your.*twitches violently
msc += $boring:The world appears momentarily distorted
msc += $boring:The iron imp grinds its teeth
msc += $boring:unwise to walk into this
msc += $boring:The tree breaks and falls down
msc += $boring:Nessos tries to tell you a complicated story about hydras
msc += $boring:You feel blessed for a moment
msc += $boring:The boulder beetle hits.*wall
msc += $boring:A root reaches out and grasps at passing movement
msc += $boring:Tangled roots snake along the ground
msc += $boring:You smell coffee
msc += $boring:The white imp grinds its teeth
msc += $boring:Your.*imp grins impishly at you
msc += $boring:Your hooves feel warm
msc += $boring:Your.*jumps up and down with excitement
msc += $boring:Strange appendages sprout from
msc += $boring:Suppurating sores blossom under
msc += $boring:That beef jerky was jerk
msc += $boring:A dozen eyes blink open in the
msc += $boring:You part the fleshy orifice
msc += $boring:There is an open fleshy orifice here
msc += $boring:Your hair momentarily turns into snakes
msc += $boring:The crimson imp grinds its teeth
msc ^= $boring:The crimson imp spits at you
msc += $boring:then rights herself and shakes her weapon
msc += $boring:You smell burning hair
msc += $boring:Your nose twitches suddenly
msc += $boring:You are wearing that object
msc += $boring:You can't wield jewellery
msc += $boring:There is an abandoned shop here
msc += $boring:You don't have any such object
msc += $boring:Mennas is caught in a moment of prayer
msc += $boring:You spin around
msc += $boring:Aizul coils and then uncoils
msc += $boring:The tide is released from Ilsuiw's call
msc += $boring:Polyphemus seems to be sizing you up for his next meal
msc += $boring:You can't read that
msc += $boring:You can't drink that
msc += $boring:Your.*falls into the water
msc += $boring:A large abomination twists grotesquely
msc += $boring:collapse into pulpy
msc ^= $boring:You reach to attack
msc += $boring:avoids the shaft
msc += $boring:Your bones ache
msc += $boring:Thank you for shopping
msc += $boring:Your ears itch
msc += $boring:Prince Ribbit hops awkwardly around
msc += $boring:You pass into a different region of Pandemonium
msc += $boring:You smell brimstone
msc += $boring:Something frightening happens
msc += $boring:Multicoloured lights dance before your eyes
msc += $boring:Some snowflakes condense on Fannar
msc += $boring:shape twists and changes as it dies
msc += $boring:No such ability
msc += $boring:The plume of ash settles
msc += $boring:You feel uncomfortably hot
msc += $boring:You can't wield that with a shield
msc ^= $boring:The blast of magma explodes
msc += $boring:Crazy Yiuf glowers
msc += $boring:Crazy Yiuf flaps his cloak
msc += $boring:Crazy Yiuf waves his quarterstaff at you
msc += $boring:You feel lost and a long
msc += $boring:The world around you seems to dim momentarily
msc += $boring:tears through a web
msc += $boring:Pikel waves his whip at you
msc += $boring:Wisps of condensation drift from your
msc += $boring:A chill runs through your body
msc += $boring:Frost covers your body
msc += $boring:numb with cold
msc += $boring:That.*was very bland
msc += $boring:That lemon was rather sour
msc += $boring:You call on the dead to rise
msc += $boring:You can't wear that
msc += $boring:vibrates crazily for a second
msc ^= $boring:The crimson imp breathes (mist|steam) at you
msc += $boring:showing sharp teeth
msc += $boring:Branches wave dangerously above you
msc += $boring:A root lunges up near you
msc += $boring:Maurice looks sneaky
msc += $boring:Suddenly you are surrounded with a pale green light
msc += $boring:really hit the spot
msc += $boring:Mmmm .. . Yummy
msc += $boring:Grum bares his teeth
msc += $boring:Grum sniffs the air and quickly glances around
msc += $boring:The shadow imp grinds its teeth
msc += $boring:looks to the heavens
msc += $boring:beckons to you
msc += $boring:Your.*struggles to escape
msc += $boring:Your.*struggles against
msc += $boring:Your.*struggles to get unstuck from
msc += $boring:fades away
msc += $boring:You feel electric
msc += $boring:sharp shower of sparks
msc += $boring:pulsates ominously
msc += $boring:You feel earthy
msc += $boring:Sparks of electricity dance between your
msc += $boring:Edmund gestures with his flail
msc += $boring:You feel very uncomfortable
msc += $boring:Xtahua glares at you
msc += $boring:You pass through the gate
msc += $boring:The starspawn's tentacles wither and die
msc += $boring:Trunks creak and shift
msc += $boring:unmelds from your body
msc += $boring:The air around.*crackles with energy
msc += $boring:Something.*the (bush|plant)
msc += $boring:There's nothing there!
msc += $boring:You briefly turn translucent
msc += $boring:unborn seems to be listening
msc += $boring:You can only put on jewellery
msc += $boring:Ouch!
msc += $boring:There isn't anything here
msc += $boring:The air around you briefly surges with heat
msc += $boring:Your skin glows momentarily
msc += $boring:You draw two cards from the deck
msc += $boring:You shuffle the cards back into the deck
msc += $boring:The drowned soul returns to the deep
msc += $boring:Your.*stays? behind
msc += $boring:You prostrate yourself
msc += $boring:You shiver with cold
msc += $boring:glows? .* for a moment
msc += $boring:Waves of light ripple over
msc += $boring:Your skin tingles
msc += $boring:looks braver
msc += $boring:You enjoyed that
msc += $boring:Your brain hurts
msc += $boring:becomes somewhat translucent
msc += $boring:generates a fountain of clear water
msc += $boring:You cannot attack while caught
msc += $boring:You cannot throw anything while caught
msc += $boring:grinds (her|his) teeth
msc += $boring:bristles in rage as it notices you
msc += $boring:You feel forgetful for a moment
msc += $boring:The briar patch crumbles away
msc += $boring:You feel momentarily lethargic
msc += $boring: .. .but nothing happens
msc += $boring:Wisps of smoke drift from your
msc += $boring:You smell salt
msc += $boring:tries to hide in the shadows
msc += $boring:stops crackling
msc ^= $boring:Your.*is no longer covered in acid
msc += $boring:You momentarily stiffen
msc += $boring:waves its rhizomes
msc += $boring:The flesh is too rotten for a proper zombie
msc += $boring:You smell (smoke|something weird)
msc += $boring:The floor shifts beneath you alarmingly
msc += $boring:The reaper smiles without lips
msc += $boring:great wave of water passes through
msc += $boring:crushes a nearby insect and laughs
msc += $boring:Welcome back to the Dungeon
msc += $boring:You are blasted with air
msc ^= $boring:There is a collapsed entrance here
msc += $boring:You can't see any susceptible monsters within range! (Use Z to cast anyway.)
msc += $boring:You can't go (down|up) here
msc += $boring:Your hair stands on end
msc += $boring:Wisps of vapour drift from your
msc += $boring:The Killer Klown smiles at you
msc += $boring:the (bush|fungus|plant)
msc += $boring:You are momentarily dazzled by a (brilliant|flash of) light
msc ^= $boring:(flickers out of sight|flickers and vanishes|slips into darkness) for a moment
msc += $boring:The golden flame engulfs your?
msc += $boring:The shaft crumbles and collapses
msc += $boring:An air elemental (forms|merges) itself (from|into) the air
msc += $boring:A corpse collapses into a pulpy mess
msc += $boring:You start (resting|waiting)
msc += $boring:Unknown command
msc += $boring:but (do no|doesn't do any|does no) damage
msc += $boring:miss
msc += $boring:Wisps of poison gas drift from your
msc += $boring:You walk carefully through
msc += $boring:grow from
msc += $boring:withers and dies
msc += $boring:There is nothing on the other side of the stone arch
msc += $boring:misses you
msc += $boring:You block
msc += $boring:You are waved at by a branch
msc += $boring:The trees move their gnarly branches around
msc += $boring:Heat runs through your body
msc += $boring:Lukewarm flames ripple over your body
msc += $boring:stops (dripping with poison|flaming)
msc += $boring:Press.*to see all runes
msc += $boring:There is a.*(door|gate)
msc += $boring:(antennae|eye-stalks|whiskers)
msc += $boring:You feel troubled
msc += $boring:You feel a wave of unholy energy pass over you
msc += $boring:grins evilly
msc += $boring:A huge blade swings just past you
msc += $boring:(The|Something).*disappears
msc += $boring:The.*glitters chillingly
msc += $boring:You feel a strange surge of energy
msc += $boring:There are no unholy or evil weapons here to destroy
msc += $boring:close doors on yourself
msc += $boring:Your.*falls off the wall
msc += $boring:stops rolling
msc += $boring:(gazes forward|pauses|quivers|skips|sputters|stops to sniff|summons a swarm of flies)
msc += $boring:turns its.*gaze
msc += $boring:Your summoned ally is left behind
msc += $boring:That felt strangely unrewarding
msc += $boring:The air around you crackles with energy
msc += $boring:(drops|unwields)
msc += $boring:The battlesphere dissipates
msc += $boring:(The|Your?).*(passes|pick your way) through a web
msc += $boring:passes through a web
msc += $boring:You feel extremely cold
msc += $boring:You feel terrible
msc += $boring:You sense a malignant aura
msc += $boring:You (hold|stand) your ground
msc += $boring:Your.*(holds|stands) its ground
msc += $boring:The.*eats the
msc += $boring:The winds cease moving at the.*will
msc += $boring:The ground creaks as gnarled roots bulge its surface
msc += $boring:rages
msc += $boring:Your acid blob dissolves into a puddle of slime
msc += $boring:You feel a wrenching sensation
msc += $boring:The.*falls off the wall
msc += $boring:The.*jiggles
msc += $boring:The.*looks excited
msc += $boring:Pikel cracks his whip
msc += $boring:slime creature splits
msc += $boring:stops glowing
msc += $boring:splashes around in the water
msc += $boring:tentacles slide back into the water
msc += $boring:(You|reach down and) (close|open) the.*(door|gate)
msc += $boring:You (climb|fly) (down|up)wards
msc += $boring:You go (down|up)
msc += $boring:You fly (down|up) through the gate
msc += $boring:You must enter the number of times for the command to repeat
msc += $boring:Use Z to cast anyway
msc += $boring:There are no items here
msc += $boring:it crumbles to dust
msc += $boring:The hatch slams shut behind you
msc += $boring:There is an empty arch of ancient stone here
msc += $boring:The world spins around you as you enter the gateway
msc += $boring:This spell is.*dangerous to cast
msc += $boring:There is a web.*here
msc += $boring:You pick your way through the web
msc += $boring:You hold your ground
msc += $boring:The floor vibrates
msc += $boring:Sand pours from your
msc += $boring:Strange energies run through your body
msc += $boring:evades a web
msc += $boring:The.*goes (down|up) the
msc += $boring:jumps into the shaft
msc += $boring:Why would you want to do that
msc += $boring:you're not good enough to have a special ability
msc += $boring:holds its.*at the ready
msc += $boring:There is a.*fountain.*here
msc += $boring:Little bolts of electricity crackle over the disc
msc += $boring:tries to grin evilly
msc += $boring:The corpses? collapses? into a pulpy mess
msc += $boring:There is an empty arch of ancient stone
msc += $boring:The runic seals? fades? away
msc += $boring:looks hungrier
msc += $boring:Something drops
msc += $boring:tears the web
msc += $boring:lashes its tail
msc += $boring:smirks and points a slender finger
msc += $boring:The orb of destruction dissipates
msc += $boring:Your (claws|elbows|hands|wings) glow momentarily
msc += $boring:Weird images run through your mind
msc += $boring:safely over a trap
msc += $boring:avoid triggering a
msc += $boring:A net swings high above you
msc += $boring:Natasha extends her claws
msc += $boring:The shadow imp breathes steam at you
msc += $boring:You can't see any susceptible monsters within range
msc += $boring:You are momentarily dazzled by a brilliant light
msc += $boring:You feel momentarily weightless
msc += $boring:You feel uncomfortably cold
msc += $boring:Your fire elemental sizzles in the rain
msc += $boring:Nessos pounds the earth with his hooves
msc += $boring:Frost spreads across the the floor
msc += $boring:You sense an ancient evil watching you
msc += $boring:Your.*(looks|smiles) at you
msc += $boring:You experience a momentary feeling of inescapable doom
msc += $boring:assumes a wrestling stance
msc += $boring:feints to the
msc += $boring:Purgy looks around nervously
msc += $boring:You smell pepper
msc += $boring:You feel faint for a moment
msc += $boring:takes off
msc += $boring:There is a rock-blocked tunnel here
msc += $boring:falls off the
msc += $boring:The bat flutters around in erratic circles
msc += $boring:You swing at nothing
msc += $boring:electric golem crackles and sizzles
msc += $boring:ghost ripples
msc += $boring:Maud (frowns|looks upset)
msc += $boring:There is an ice choked empty arch of ancient stone here
msc += $boring:Sparks fly from your
msc += $boring:crimson imp breathes smoke at you
msc += $boring:Distant voices call out to you
msc += $boring:You are showered with tiny particles of grit
msc += $boring:The scroll reassembles itself in your
msc += $boring:You feel uncomfortably hot
msc += $boring:Nergalle blows her nose
msc += $boring:You release your grip on
msc += $boring:Nergalle looks more energetic
msc += $boring:stampedes away
msc += $boring:fails to trigger a.*trap
msc += $boring:You feel a numb sensation
msc += $boring:You smell sulphur
msc += $boring:There's nothing to (close|open) nearby
msc += $boring:Your.*stumbles backwards
msc += $boring:ghost takes a fighting stance
msc += $boring:You shiver with fear
msc += $boring:Your.*falls like a stone
msc += $boring:You feel a surge of energy from the ground
msc += $boring:You release your grip on
msc += $boring:Your head hurts
msc += $boring:The lightning grounds out
msc += $boring:Your.*feel warm
msc += $boring:This isn't a weapon
msc += $boring:You feel as though nothing has changed
msc += $boring:Blork the orc's eyes start to glow
msc += $boring:Blork the orc shakes
msc += $boring:You smell wet wool
msc += $boring:You create a blast of rain
msc += $boring:There is a rose-covered archway here
msc += $boring:becomes larger for a moment
msc += $boring:falls out of your pack
msc += $boring:leaps into the air
msc += $boring:body glows momentarily
msc += $boring:shimmers violently
msc += $boring:makes a popping sound
msc += $boring:your.*spectral.*

# Enemies taking damage
msc += $good:You (beat|bite|bludgeon|burn|carve|chop|claw|constrict|crush|cut|devastate|dice|drain|electrocute|eviscerate)
msc += $good:You (flatten|fracture|freeze|grab|hammer|headbutt|hit|impale|kick|mangle|maul|open|peck|perforate|pierce|pound)
msc += $good:You (pulverise|pummel|punch|puncture|punish|scratch|sears|shatter|shave|shred|skewer|slash|slice|smack|sock)
msc += $good:You (spit|squash|squeeze|stick|strike|tail-slap|tentacle-slap|thrash|thump|touch|trample|whack|knocked back)
msc += $good:(attacks|bites|burns|carves|chops|claws|constricts|crushes|cuts|drains|draws|electrocutes|engulfs) [^y]
msc += $good:(eviscerates|freezes|gores|grabs|headbutts|hits|hits|kicks|mauls|melts|opens|pecks|perforates) [^y]
msc += $good:(poisons|pulverises|pummels|punches|punctures|sears|shocks|shreds|skewers|slashes|slices|smacks) [^y]
msc += $good:(spits|squashes|sticks|stings|strikes|tail-slaps|tentacle-slaps|touches|tramples|trunk-slaps) [^y]
msc += $good:You smite
msc ^= $good:Your fire elemental burns
msc += $good:is flooded with distortional energies
msc += $good:You draw life from
msc += $good:is struck by the twisting air
msc += $good:burns!
msc += $good:Asterion shares his spectral weapon's damage
msc += $good:is struck by lightning
msc += $good:A guardian golem appears
msc += $good:is covered in liquid flames
msc += $good:is engulfed in
msc += $good:Your.*tramples the
msc += $good:The orb of electricity engulfs the
msc += $good:The (.*hellfire|blast of flame|blast of lightning|blast of magma|explosion) engulfs [^y]
msc += $good:The (explosion of.*fragments|explosion of spores|fiery explosion|fireball|ghostly fireball) engulfs [^y]
msc += $good:The (great blast of fire|plume of ash|stinking cloud) engulfs [^y]
msc += $good:is smitten
msc += $good:struck by your spines
msc += $good:There is a sudden explosion of sparks
msc += $good:is drained
msc += $good:You drain (her|his|its) (magic|power)
msc += $good:You drain the
msc += $good:Something (bites|hits)
msc += $good:is blasted
msc += $good:is burned by your radiant heat
msc += $good:The boulder beetle smashes into the
msc += $good:The golden flame engulfs
msc += $good:The eldritch tentacle writhes
msc ^= $good:The.*pierces through the
msc += $good:Space (bends|warps horribly) around
msc += $good:(convulses|writhes in agony)
msc += $good:is splashed with acid
msc += $good:You feel life coursing into your body
msc += $good:is struck by lightning
msc += $good:is burned by acid
msc += $good:seems to burn from within
msc += $good:Space warps around
msc ^= $good:statue shatters

# Non-damage combat messages
msc += $positive:You pounce on
msc += $positive:but is stunned by your will
msc += $positive:by your wave of power
msc += $positive:is stunned by your will and fails to attack
msc += $positive:The sticky flame splashes onto
msc ^= $positive:Your orcs go into a battle-frenzy
msc += $positive:falters in the face of your power
msc += $positive:in retribution by your aura
msc += $positive:Your slowness suddenly goes away
msc += $positive:is no longer regenerating
msc += $positive:You repair your equipment
msc += $positive:You extend your infusion
msc += $positive:You draw (the Helm|Dowsing)
msc += $positive:You shrug off the repeated paralysis
msc ^= $positive:You begin infusing your attacks with magical energy
msc += $positive:It gets dark
msc += $positive:is outlined in light
msc += $positive:moth of wrath (goads|infuriates) your
msc += $positive:Some water evaporates in the bright sunlight
msc += $positive:You become one with your weapon
msc += $positive:Your bond becomes stronger
msc += $positive:A magical shield forms in front of you
msc += $positive:Your attacks no longer feel as feeble
msc += $positive:You feel odd
msc += $positive:The shadowy forms in the deep grow still as others approach
msc += $positive:You renew your portal
msc += $positive:You begin teleporting projectiles to their destination
msc += $positive:is no longer invulnerable
msc += $positive:blocks its attack
msc += $positive:sizzles in the rain
msc += $positive:gets badly buffeted
msc += $positive:Your legs become a tail as you enter the water
msc += $positive:You feel a sudden desire to slay dragons
msc += $positive:You feel weakened for a moment
msc += $positive:Your stone body feels more resilient
msc += $positive:You swoop lightly up into the air
msc += $positive:You feel very comfortable in the air
msc += $positive:The air around you leaps into flame
msc += $positive:is knocked back by the great wave of water
msc += $positive:Your.*wounds heal themselves
msc += $positive:is recalled
msc += $positive:You renew your shroud
msc += $positive:One of your tentacles grows a vicious spike
msc += $positive:A mana viper appears with a sibilant hiss
msc += $positive:melts!
msc += $positive:You extend your mandibles
msc ^= $positive:Your?.*appears? unharmed
msc += $positive:You finish merging with the rock
msc += $positive:You gain the combat prowess of a mighty hero
msc += $positive:shroud falls apart
msc += $positive:Your.*glows blue
msc += $positive:your mind becomes perfectly clear
msc += $positive:You create a blast of noxious fumes!
msc += $positive:Roots rise up to grasp you
msc += $positive:is no longer moving quickly
msc += $positive:You create a snake
msc += $positive:apparition takes form in the air
msc += $positive:The rubble rises up and takes form
msc += $positive:You begin to abjure the creatures around you
msc += $positive:You extend your aura of abjuration
msc += $positive:A divine shield forms around you
msc += $positive:Your attacks no longer feel as feeble
msc += $positive:Your shroud bends.*attack away
msc += $positive:illusion disappears in a puff of smoke
msc += $positive:A beastly little devil appears in a puff
msc += $positive:Your.*is no longer encased in ice
msc += $positive:You deflect
msc += $positive:The lightning arcs
msc += $positive:is knocked back by the lance of force
msc += $positive:is dazzled
msc += $positive:is doused terribly
msc += $positive:You summon a servant imbued with your destructive magic
msc += $positive:You are suffused with power
msc += $positive:The sheep.*panic
msc += $positive:The sheep turns to a blind rush
msc += $positive:Smoke pours from your nose
msc += $positive:The trap is out of ammunition
msc += $positive:You dart out from under the net
msc += $positive:The manticore spikes snap loose
msc += $positive:Your jumping spider.*pounces on the
msc += $positive:You are unaffected
msc += $positive:no longer looks unusually strong
msc += $positive:The area is filled with flickering shadows
msc += $positive:flinches away
msc += $positive:The.*is (deflected|repelled)
msc += $positive:Your.*is no longer paralysed.
msc += $positive:Your.*seems less confused
msc += $positive:You feel less contaminated with magical energies
msc += $positive:Your.*breaks free
msc += $positive:You feel momentarily confused
msc += $positive:That potion was really gluggy
msc += $positive:You( easily| partially)? resist
msc += $positive:Your skin crawls
msc += $positive:You draw out your weapon's spirit
msc += $positive:You catch the
msc += $positive:fails to defend (herself|himself|itself)
msc += $positive:falters for a moment
msc += $positive:You feel invigorated
msc += $positive:flops around on dry land
msc += $positive:You escape
msc += $positive:glows a violent red
msc += $positive:You emit a cloud
msc += $positive:icy envelope dissipates
msc ^= $positive:appears confused
msc += $positive:looks drowsy
msc += $positive:is caught in a (net|web)
msc += $positive:struggles to get unstuck from the (net|web)
msc += $positive:loses its grip on you
msc += $positive:looks rather.*confused
msc ^= $positive:The sentinel's mark upon you fades away
msc += $positive:The lost soul (fades away|flickers out)
msc += $positive:You turn into a creature of crystalline ice
msc ^= $positive:The.*dark mirror aura disappears
msc += $positive:is no longer berserk
msc += $positive:You wake up
msc += $positive:The grasping roots settle back into the ground
msc += $positive:The forest abruptly stops moving
msc += $positive:You feel more buoyant
msc += $positive:You fly up into the air
msc += $positive:You gasp with relief as air once again reaches your lungs
msc += $positive:A film of ice covers your body
msc += $positive:Your.*has recharged
msc += $positive:you pull free of the water engulfing you
msc += $positive:You feel a surge of unholy energy
msc += $positive:your?.*stops? burning
msc += $positive:begins to rapidly decay
msc += $positive:Your possessions no longer seem quite so burdensome
msc += $positive:You feel in control
msc += $positive:You feel odd for a moment
msc += $positive:suddenly stops moving
msc += $positive:is poisoned
msc += $positive:looks even sicker
msc += $positive:A film of ice covers your body
msc += $positive:is stunned!
msc += $positive:is flash-frozen
msc += $positive:seems to slow down
msc += $positive:is moving more slowly
msc += $positive:stops moving altogether
msc += $positive:Your skin hardens
msc += $positive:Your new body merges with your .* armour
msc += $positive:gives you a mild electric shock
msc += $positive:Eating
msc += $positive:the sound returns
msc += $positive:Your icy armour thickens
msc += $positive:The naga ritualist's toxic aura wanes
msc += $positive:Your.*pulls away from the web
msc += $positive:You become transparent for a moment
msc += $positive:is charmed
msc += $positive:Your skin feels harder
msc += $positive:Shadowy shapes form in the air around you
msc += $positive:is burned terribly
msc += $positive:[^y].*is frozen
msc += $positive:You furiously retaliate
msc += $positive:The scroll dissolves into smoke
msc ^= $positive:Your.*reflects
msc ^= $positive:You reflect
msc += $positive:is no longer unusually agile
msc += $positive:struggles to blink free from constriction
msc += $positive:You pull the items towards yourself
msc += $positive:the former slaves? thanks? you
msc += $positive:Something gets caught in the net
msc += $positive:the hog turns into a human
msc += $positive:the hogs revert to their human forms
msc += $positive:You feel the strange sensation of being on two planes at once
msc += $positive:A flood of magical energy pours into your mind
msc += $positive:You feel the material plane grow further away
msc += $positive:You momentarily phase out as.*passes through you
msc += $positive:You feel less exhausted
msc ^= $positive:Your.*(resist[^a]|resists|unaffected)
msc += $positive:The flame cauterises the wound
msc += $positive:the.*last head off
msc += $positive:You carefully extract the manticore spikes from your body
msc += $positive:You melt the
msc += $positive:has finally been put to rest
msc += $positive:begins to bleed from.*wounds
msc += $positive:Your.*draws strength from
msc += $positive:You feel yourself moving faster
msc += $positive:looks sick
msc += $positive:Your feet morph into talons
msc += $positive:You grow a pair of large bovine horns
msc += $positive:You extend your transformation
msc += $positive:Your.*turns? into razor-sharp scythe blades?
msc += $positive:You conjure a globe of magical energy
msc += $positive:You imbue your battlesphere with additional charge
msc += $positive:You feel resistant
msc += $positive:You are no longer poisoned
msc += $positive:looks frightened
msc += $positive:The.*is outlined in light
msc += $positive:You feel quick
msc += $positive:You no longer feel sluggish
msc += $positive:You feel odd for a moment
msc += $positive:returns to your pack
msc += $positive:Space distorts slightly along a thin shroud covering your body
msc += $positive:You are covered in a thin layer of ice
msc += $positive:You feel (clumsy|dopey|weak) for a moment
msc += $positive:stops singing
msc += $positive:and things crawl out
msc += $positive:You feel more catlike
msc += $positive:A crackling disc of dense vapour forms in the air
msc += $positive:icy armour evaporates
msc += $positive:Your.*looks invigorated
msc += $positive:repels the curse
msc += $positive:Yoink! You pull the item towards yourself
msc += $positive:The disc of vapour around you crackles
msc += $positive:turns into a zombie
msc += $positive:You summon
msc += $positive:hydra's last head off
msc += $positive:You feel a.*surge of power
msc += $positive:magic leaks into the air
msc += $positive:You focus on the pain
msc += $positive:Your.*darts out from under the net
msc += $positive:struggles to escape constriction
msc += $positive:submits to your will
msc += $positive:You channel some magical energy
msc += $positive:is caught in the net
msc += $positive:struggles (against|to escape) the net
msc += $positive:Your magic seems less tainted
msc += $positive:You shudder from the blast and a jelly pops out
msc += $positive:looks weaker
msc += $positive:falls into the water
msc += $positive:You fade into the shadows
msc += $positive:life force is offered up
msc += $positive:is calmed by your holy aura
msc ^= $positive:You fade into invisibility
msc ^= $positive:grand avatar fades into the ether
msc ^= $positive:Your attacks are magically infused
msc ^= $positive:You feel protected from missiles
msc ^= $positive:Your.*is no longer moving slowly
msc ^= $positive:You are no longer (entranced|glowing)
msc ^= $positive:You feel as if something is helping you
msc += $positive:appears in a shower of sparks
msc += $positive:Malign forces permeate your being
msc += $positive:A glowing mist starts to gather
msc ^= $positive:begin to glow red
msc ^= $positive:begin to glow brighter

#msc += $verypositive:
msc ^= $verypositive:The.*zombie.*rots away
msc += $verypositive:You feel buoyant
msc ^= $verypositive:You feel very safe from missiles
msc ^= $verypositive:You are no longer firmly anchored in space
msc += $verypositive:Magical energy flows into your mind!
msc ^= $verypositive:The terrible wounds on your body vanish
msc += $verypositive:Your.*rumbles
msc += $verypositive:You feel life flooding into your body
msc += $verypositive:You feel purified
msc += $verypositive:You feel more resilient
msc += $verypositive:You get a glimpse of the first card
msc += $verypositive:You turn into a swirling mass of dark shadows
msc += $verypositive:You feel nimbler
msc += $verypositive:the tentacle is hauled back through the portal
msc += $verypositive:You feel more in control of your magic
msc += $verypositive:releases its grip on you
msc += $verypositive:You feel magically charged
msc += $verypositive:You turn to flesh and can move again
msc += $verypositive:Your magma supply has returned
msc += $verypositive:You (blow up|destroy|kill)
msc += $verypositive:is blown up
msc += $verypositive:dies
msc += $verypositive:is destroyed
msc += $verypositive:is killed
msc += $verypositive:is incinerated
msc += $verypositive:is devoured by a tear in reality
msc += $verypositive:turns neutral
msc += $verypositive:The spatial vortex dissipates
msc += $verypositive:Your magical contamination has.*faded
msc += $verypositive:drowns
msc += $verypositive:The.*falls from the air
msc += $verypositive:The.*simulacrum vapourises
msc += $verypositive:more experienced
msc ^= $verypositive:rots away and dies
msc ^= $verypositive:You.*and break free
msc += $verypositive:The web tears apart
msc += $verypositive:You disentangle yourself
msc += $verypositive:Saving game .. . please wait
msc += $verypositive:You finish memorising
msc += $verypositive:You may choose your destination
msc += $verypositive:You feel yourself speed up
msc += $verypositive:You feel stealthy
msc += $verypositive:Your skill with magical items lets you calculate the power of this device
msc += $verypositive:You can move again
msc += $verypositive:The fungal colony is destroyed
msc ^= $verypositive:The starcursed mass shudders and is absorbed by its neighbour
msc ^= $verypositive:The starcursed mass shudders and withdraws
msc += $verypositive:You are no longer firmly anchored in space
msc += $verypositive:Magic courses through your body
msc += $verypositive:You have disarmed the trap
msc += $verypositive:You are healed
msc += $verypositive:Pain shudders through your arm
msc += $verypositive:You slip out of the net
msc += $verypositive:You break free from the net
msc += $verypositive:Your life force is being protected
msc += $verypositive:It is a scroll of recharging
msc += $verypositive:is converted
msc += $verypositive:It is a scroll of enchant
msc += $verypositive:That put a bit of spring back into your step
msc += $verypositive:You feel vaguely more buoyant than before
msc += $verypositive:You feel (better|faster|mighty|much better|protected|refreshed)
msc += $verypositive:You feel.* mighty all of a sudden
msc += $verypositive:You feel.*agile all of a sudden
msc += $verypositive:You feel aware of your surroundings
msc += $verypositive:You detect (creatures|items)
msc += $verypositive:You feel the corruption within you wane
msc += $verypositive:You feel perceptive
msc ^= $verypositive:You feel less confused
msc += $verypositive:You feel a little better
msc += $verypositive:You feel studious about
msc += $verypositive:You feel telepathic
msc += $verypositive:You feel your magic capacity increase
msc += $verypositive:You feel the abyssal rune guiding you out of this place
msc += $verypositive:You feel fantastic
msc += $verypositive:Found.*altar
msc += $verypositive:Found a one-way gate to the infinite horrors of the Abyss
msc += $verypositive:Found a glowing drain
msc += $verypositive:Found a gate leading back out of here
msc += $verypositive:Found a hole to the Spider Nest
msc += $verypositive:Found a frozen archway
msc += $verypositive:Found an ice covered gate leading
msc += $verypositive:Found a dark tunnel
msc += $verypositive:Found a labyrinth entrance
msc += $verypositive:Found a flagged portal
msc += $verypositive:Found an exit through the horrors of the Abyss
msc += $verypositive:Found a gateway leading out of the Abyss
msc += $verypositive:Found a gateway leading deeper into the Abyss
msc += $verypositive:Found a gate leading out of Pandemonium
msc += $verypositive:Found a gate leading to another region
msc += $verypositive:Found a gate to the Vaults
msc += $verypositive:Found a gateway
msc += $verypositive:Found a rocky tunnel leading out of this place
msc += $verypositive:Found a portal to a secret trove of treasure
msc += $verypositive:Found a magical portal
msc += $verypositive:Found a flickering gateway to a bazaar
msc += $verypositive:Found a one-way gate leading to the halls of Pandemonium
msc += $verypositive:Found a portal leading out of here
msc += $verypositive:Found.*staircase
msc += $verypositive:Found.*(Accessories|Antiques|Boutique|Distillery|Elixirs|Emporium|shop|Smithy|store)
msc += $verypositive:You feel your magical essence form a protective shroud around your flesh
msc += $verypositive:You feel your.*returning
msc += $verypositive:It is a scroll of brand weapon
msc ^= $verypositive:Your.*seems to speed up
msc += $verypositive:An interdimensional caravan has stopped on this level and set up a bazaar
msc += $verypositive:Your demonic ancestry asserts itself
msc += $verypositive:You feel (agile|clever|stronger)
msc += $verypositive:You feel more protected from negative energy

# Positive mutation - or losing bad ones
msc += $awesome:You feel more resistant
msc += $awesome:Your fur grows into a thick mane
msc += $awesome:Your magic regains its normal vibrancy
msc += $awesome:Your thick fur grows shaggy and warm
msc += $awesome:You feel more sure on your
msc += $awesome:You feel breathless
msc += $awesome:Your genes go into a fast flux
msc += $awesome:A poisonous barb forms on the end of your tail
msc += $awesome:Your wings grow larger and stronger
msc += $awesome:You feel more spiritual
msc ^= $awesome:You feel immune to rotting
msc += $awesome:Your system.*accepts artificial healing
msc += $awesome:You feel completely energised by your suffering
msc += $awesome:An ominous black mark forms on your body
msc += $awesome:You feel a strange anaesthesia
msc += $awesome:You feel saturated with power
msc += $awesome:You feel power rushing into your body
msc += $awesome:Your blood runs red-hot
msc += $awesome:Your feet have mutated into hooves
msc += $awesome:You feel power flowing into your body
msc ^= $awesome:You feel more in touch with the powers of death
msc += $awesome:Your urge to yell lessens
msc += $awesome:One of your lower tentacles grows a sharp spike
msc += $awesome:You regain control of your magic
msc += $awesome:The horns on your head grow some more
msc += $awesome:You feel less concerned about heat
msc += $awesome:You smell fire and brimstone
msc += $awesome:You begin to radiate miasma
msc += $awesome:You feel genetically stable
msc ^= $awesome:You feel a.*healthier
msc += $awesome:You feel your life force and your magical essence meld
msc ^= $awesome:You feel your magical essence form a protective shroud around your flesh
msc += $awesome:You feel your magic shroud grow more resilient
msc += $awesome:Your body becomes stretchy
msc += $awesome:Your skin becomes partially translucent
msc += $awesome:You feel less concerned
msc += $awesome:You are surrounded by darkness
msc += $awesome:Your skin functions as natural camouflage
msc += $awesome:You begin to emit a foul stench of rot and decay
msc ^= $awesome:You feel energised by your suffering
msc ^= $awesome:You feel even more energised by your suffering
msc += $awesome:Your teeth lengthen and sharpen
msc += $awesome:Your natural healing is strengthened
msc += $awesome:You begin to regenerate
msc += $awesome:You begin to radiate repulsive energy
msc += $awesome:Your repulsive radiation grows stronger
msc += $awesome:Your body's shape seems more normal
msc += $awesome:You feel the presence of a demonic guardian
msc += $awesome:Your guardian grows in power
msc += $awesome:Your scales feel tougher
msc += $awesome:Your teeth are very long and razor-sharp
msc += $awesome:You feel negative
msc += $awesome:You begin to heal more quickly
msc += $awesome:You feel healthy
msc += $awesome:You feel a little more calm
msc += $awesome:You feel nature experimenting on you
msc += $awesome:You feel a strange attunement to the structure of the dungeons
msc += $awesome:Your mouth lengthens and hardens into a beak
msc += $awesome:Fur sprouts all over your body
msc += $awesome:Your attunement to dungeon structure grows
msc += $awesome:You slip into the darkness of the dungeon
msc += $awesome:You slip further into the darkness
msc += $awesome:Your thoughts seem clearer
msc += $awesome:A wave of death washes over you
msc += $awesome:The wave of death grows in power
msc += $awesome:Sharp spines emerge from
msc += $awesome:Your vision sharpens
msc += $awesome:Your urge to shout disappears
msc ^= $awesome:scales grow over part of your
msc ^= $awesome:scales spread over more of your
msc += $awesome:scales cover you.*completely
msc += $awesome:You are partially covered in thin metallic scales
msc ^= $awesome:Something appears at your feet
msc ^= $awesome:Something appears before you
msc ^= $awesome:Your urge to shout disappears
msc += $awesome:Your metabolism slows
msc += $awesome:Your bones become.*less dense
msc += $awesome:You feel (more robust|robust|very robust)
msc += $awesome:You feel more energetic
msc += $awesome:You feel (health|insulated|stable|clean)
msc += $awesome:Your (fingernails|toenails) (lengthen|sharpen)
msc += $awesome:Your hands twist into claws
msc += $awesome:Your feet stretch into talons
msc += $awesome:Your feet thicken and deform
msc ^= $awesome:A pair of antennae grows on your head
msc ^= $awesome:The antennae on your head grow some more
msc ^= $awesome:There is a nasty taste in your mouth for a moment
msc += $awesome:Large bone plates (cover|grow|spread)
msc += $awesome:Your throat feels
msc += $awesome:Your teeth grow very long and razor-sharp
msc ^= $awesome:You feel less vulnerable
msc ^= $awesome:You no longer feel vulnerable
msc ^= $awesome:You feel a little less angry

# Other rare and awesome stuff
msc += $awesome:word of recall is interrupted
msc ^= $awesome:is protecting you
msc ^= $awesome:You are shrouded in an aura of darkness
msc += $awesome:You are surrounded by a storm
msc += $awesome:You sense an aura of extreme power
msc += $awesome:Your.*shines brightly
msc ^= $awesome:The Shining One will now bless your weapon at an altar
msc ^= $awesome:You and your allies can gain power from killing the unholy and evil
msc ^= $awesome:A divine halo surrounds you
msc += $awesome:There is a labyrinth entrance here
msc += $awesome:You adapt resistances upon receiving elemental damage
msc += $awesome:The storm surrounding you grows powerful enough to repel missiles
msc += $awesome:There is a magical portal here
msc ^= $awesome:There is a gateway to a ziggurat here
msc ^= $awesome:Fruit sprouts up around you
msc ^= $awesome:A sheep catches fire
msc += $awesome:plants?.*grows? in the rain
msc += $awesome:You are restored by drawing out deep reserves of power within
msc ^= $awesome:There is a gate to the Realm of Zot here
msc += $awesome:A monocle briefly appears
msc += $awesome:You feel an empty sense of dread
msc += $awesome:That felt like a moral victory
msc += $awesome:A shaft materialises beneath you
msc += $awesome:You draw Experience
msc += $awesome:You draw the Mercenary
msc += $awesome:Your body is suffused with negative energy
msc ^= $awesome:Qazlal will now grant you protection from an element of your choosing
msc ^= $awesome:Kikubaaqudgha will now enhance your necromancy at an altar
msc += $awesome:You rejoin the land of the living
msc += $awesome:The sixfirhy explodes in a shower of sparks
msc += $awesome:With a swish of your cloak
msc += $awesome:Some fountains start gushing blood
msc += $awesome:A genie takes form and thunders\: \"Choose your reward
msc += $awesome:You turn into a fearsome dragon
msc += $awesome:You turn into a living statue of rough stone
msc += $awesome:You manage to scramble free
msc += $awesome:Your.*(rod|wand).*glows for a moment
msc += $awesome:You sense traps nearby
msc += $awesome:You now sometimes bleed smoke when heavily injured by enemies
msc += $awesome:Your shadow now sometimes tangibly mimics your actions
msc += $awesome:You sense items nearby
msc += $awesome:Suddenly you stand beside yourself
msc += $awesome:You feel somewhat nimbler
msc += $awesome:A mystic portal forms
msc += $awesome:You may select the general direction of your translocation
msc += $awesome:It is briefly surrounded by shifting shadows
msc += $awesome:The deck has exactly five cards
msc += $awesome:You are no longer firmly anchored in space
msc += $awesome:There is a gate to the Realm of Zot here
msc += $awesome:A terribly searing pain shoots up your
msc += $awesome:Your strength has recovered
msc += $awesome:A flood of memories washes over you
msc ^= $awesome:Vehumet offers you knowledge of
msc ^= $awesome:With a loud hiss the gate opens wide
msc += $awesome:You have collected all the runes
msc += $awesome:a hidden mimic gets squished
msc += $awesome:Now go and win
msc += $awesome:You feel knowledgeable
msc += $awesome:The arc blade crackles to life
msc ^= $awesome:There is a gate leading out of Pandemonium here
msc += $awesome:You feel powerful
msc ^= $awesome:You can now
msc += $awesome:joins your ranks
msc += $awesome:Your magic begins regenerating once more
msc += $awesome:Your.*is now the
msc += $awesome:There is a glowing drain
msc ^= $awesome:There is a gateway leading out of the Abyss here
msc += $awesome:There is a sand-covered staircase here
msc += $awesome:Your.*crackles with electricity
msc ^= $awesome:This is a scroll of acquirement
msc += $awesome:You pick up the.*rune
msc += $awesome:You now have.*rune
msc += $awesome:Your.*skill increases
msc += $awesome:You have reached level
msc += $awesome:Your experience leads to an increase in your attributes
msc ^= $awesome:There is a frozen archway here
msc ^= $awesome:There is a dark tunnel here
msc ^= $awesome:There is a flagged portal here
msc ^= $awesome:There is a portal to a secret trove of treasure here
msc ^= $awesome:There is a flickering gateway to a bazaar here
msc ^= $awesome:There is an entrance to.*on this level
msc += $awesome:3 runes! That's enough to enter the realm of Zot
msc += $awesome:The lock glows eerily
msc += $awesome:Heavy smoke blows from the lock
msc += $awesome:You have escaped!
msc += $awesome:rune into the lock
msc += $awesome:With a loud hiss the gate opens wide
msc += $awesome:You sensed
msc += $awesome:You are wearing\:
msc += $awesome:With a loud hiss the gate opens wide
msc += $awesome:The shadows inhabiting this place fade forever
msc += $awesome:You have identified the last
msc += $awesome:You feel a craving for the dungeon's cuisine
msc ^= $awesome:Lugonu will now corrupt your weapon
msc ^= $awesome:You now have enough gold to petition Gozag for potion effects
msc ^= $awesome:You now have enough gold to fund merchants seeking to open stores in the dungeon

# Weapon brands/enchantment
msc ^= $awesome:A searing pain shoots up your
msc += $awesome:You hear the crackle of electricity
msc += $awesome:You see sparks fly
msc += $awesome:Your hands tingle
msc += $awesome:Your claws tingle
msc += $awesome:You feel a dreadful hunger
msc ^= $awesome:Your.*glows (green|purple|red|.*yellow)
msc += $awesome:briefly pass through it before

# You or an ally takes damage
#msc += $negative:
msc += $negative:you trip and fall down the stairs
msc += $negative:You are engulfed in blessed fire
msc += $negative:The fountain mimic splashes you
msc += $negative:Your body is twisted very painfully
msc += $negative:crushes you
msc ^= $negative:drains your
msc += $negative:Your body is distorted in a weirdly horrible way
msc += $negative:starcursed mass engulfs you
msc ^= $negative:Your.*is struck by the twisting air
msc += $negative:You are constricted
msc ^= $negative:Your.*is blasted
msc += $negative:Electricity courses through your body
msc ^= $negative:Your.*is struck by lightning
msc += $negative:You are struck by lightning
msc += $negative:silver sears your?
msc += $negative:You draw magical energy from your own body
msc += $negative:Rocks fall onto you out of nowhere
msc += $negative:You are engulfed in raging winds
msc ^= $negative:Your.*convulses
msc += $negative:You are struck by the briar patch's thorns
msc += $negative:You feel like your blood is boiling
msc += $negative:The magical storm engulfs you
msc += $negative:Your body is flooded with distortional energies
msc += $negative:You are caught in a strong localised spatial distortion
msc ^= $negative:The Shining One blasts you with cleansing flame
msc += $negative:You are struck by lightning
msc += $negative:You are caught in an extremely strong localised spatial distortion
msc += $negative:You are blasted with searing flames
msc += $negative:Your.*suffers a backlash
msc ^= $negative:Your.*is smitten
msc += $negative:You are blasted with fire
msc ^= $negative:Your.*is engulfed in
msc ^= $negative:A huge blade swings out and slices into your?
msc += $negative:Flames sear your flesh
msc += $negative:A wave of violent energy washes through your body
msc += $negative:You are caught in a localised spatial distortion
msc += $negative:The acid blast engulfs you
msc ^= $negative:Heat is drained from your body
msc += $negative:Energy rips through your body
msc += $negative:You feel you are being watched by something
msc += $negative:Unholy energy fills the air
msc += $negative:You are caught in a localised field of spatial distortion
msc += $negative:The ghost moth stares at you
msc += $negative:Your ice beast melts
msc ^= $negative:burns you
msc += $negative:Your.*burn
msc += $negative:draws from the surrounding life force
msc += $negative:The boulder beetle smashes into you
msc += $negative:You feel very cold
msc ^= $negative:The.*pierces through (you|your)
msc ^= $negative:The walls? burns? you
msc ^= $negative:Your.*is blown up
msc += $negative:The throwing net hits your
msc += $negative:Your body is suffused with distortional energy
msc += $negative:constricts your?
msc += $negative:(bites|burns|claws|freezes|gores|gores|headbutts|hits|kicks|pecks|pecks|poisons|punches) your?
msc += $negative:(shocks|skewers|slaps|smites|stings|tail-slaps|tentacle-slaps|touches|tramples|trunk-slaps) your?
# Thanks killer klowns
msc += $negative:(defenestrates|elbows|flogs|headlocks|pinches|pokes|pounds|prods|squeezes|strangle-hugs|teases|tickles|trip-wires|wrestles) your?
msc += $negative:Your.*burned by acid
msc += $negative:Your?.*is struck by the.*spines
msc += $negative:Your.*spectral.* shares its damage
msc += $negative:The.*begins to radiate
msc += $negative:The.*toxic radiance grows
msc += $negative:Your.*loses its grip
msc += $negative:The water swirls and strikes you
msc += $negative:Your.*is knocked back
msc += $negative:The shock serpent's electric aura discharges violently
msc += $negative:The lightning shocks
msc += $negative:The tentacled starspawn engulfs you
msc += $negative:The.*ugly thing engulfs you
msc ^= $negative:Your life force is offered up
msc ^= $negative:The (.*hellfire|blast of flame|blast of lightning|blast of magma|explosion) engulfs your?
msc ^= $negative:The (explosion of.*fragments|explosion of spores|fiery explosion|fireball|ghostly fireball) engulfs your?
msc ^= $negative:The (great blast of fire|plume of ash|stinking cloud) engulfs your?
msc += $negative:Pain shoots through your body
msc += $negative:Your.*is flash-frozen
msc += $negative:You writhe in agony
msc += $negative:you feel sick
msc += $negative:Something smites you
msc += $negative:The air twists around and.*strikes you
msc += $negative:You are hit by a branch
msc += $negative:You are caught in an explosion of flying shrapnel
msc += $negative:You are hit by flying rocks
msc ^= $negative:strikes at you from the darkness
msc += $negative:Your?.*burned terribly
msc += $negative:covered in liquid flames
msc += $negative:You are blasted with ice
msc += $negative:Your.*seems to slow down
msc += $negative:You are electrocuted
msc += $negative:and unravels at your touch
msc += $negative:You are struck by the.*spines
msc += $negative:The water rises up and strikes you
msc += $negative:The torrent of lightning arcs to you
msc += $negative:A root smacks your
msc += $negative:The eye of draining stares at you
msc += $negative:The orb of electricity engulfs you
msc += $negative:The barbed spikes dig painfully into your body as you move
msc += $negative:You are engulfed in (a cloud of scalding steam|flames|freezing|freezing vapours)
msc += $negative:You are engulfed in (ghostly flame|negative energy|noxious fumes|poison gas|roaring flames)
msc += $negative:A root smacks you from below
msc += $negative:Ka-crash
msc += $negative:You are frozen
msc ^= $negative:draws life force from you
msc += $negative:You have a terrible headache
msc += $negative:Your damage is reflected back at you
msc += $negative:Your body is twisted painfully
msc += $negative:Your scythe-like blades burn
msc += $negative:Your.*is splashed with acid
msc += $negative:Your.*is constricted
msc += $negative:The freed slave is burned by acid
msc += $negative:Something.*your
msc += $negative:snaps closed at you
msc += $negative:headbutts you!
msc += $negative:engulfs your
msc += $negative:You are blasted with magical energy
msc += $negative:The large rock crashes through you
msc += $negative:You are blasted!
msc += $negative:The great icy blast engulfs you
msc += $negative:is hit by a branch
msc += $negative:The wandering mushroom releases spores at your?

#monster resists
msc += $danger:completely resists
msc += $warning:resists

# For the text that describes ranged attacks and spells
msc += $takesaction:chants a haunting song
msc += $takesaction:You release an incredible blast of power in all directions
msc += $takesaction:calls upon its god to speed up
msc += $takesaction:You create a blast
msc += $takesaction:The ophan calls forth blessed flames
msc += $takesaction:You exhale
msc += $takesaction:You enter the passage of Golubria
msc += $takesaction:You conjure a prism of explosive energy
msc += $takesaction:A raging storm of fire appears
msc += $takesaction:Sojobo summons a great blast of wind
msc += $takesaction:A fierce wind blows from the fan
msc ^= $takesaction:Rupert roars wildly at you
msc += $takesaction:A fierce wind blows
msc += $takesaction:The wizard shimmers violently
msc += $takesaction:releases spores
msc += $takesaction:The giant eyeball stares at you
msc += $takesaction:You begin recalling your allies
msc += $takesaction:You begin to radiate toxic energy
msc += $takesaction:The wretched star glows turbulently
msc += $takesaction:You begin to meditate on the wall
msc += $takesaction:You dig through the rock wall
msc += $takesaction:You ignite the poison in your surroundings
msc += $takesaction:You attempt to give life to the dead
msc ^= $takesaction:hurls a stone arrow
msc += $takesaction:weaves a glowing orb of energy
msc += $takesaction:spins a strand of pure energy
msc += $takesaction:Aizul coils himself and waves his upper body at you
msc ^= $takesaction:The royal jelly spits out
msc ^= $takesaction:calls upon Beogh to heal
msc ^= $takesaction:prays to Beogh
msc ^= $takesaction:calls down the wrath of
msc ^= $takesaction:invokes the aid of Beogh
msc += $takesaction:utters an invocation to Beogh
msc += $takesaction:shining eye gazes
msc += $takesaction:orb of fire glows
msc += $takesaction:orb of fire emits
msc += $takesaction:utters an invocation to its god
msc += $takesaction:offers its life energy for powerful magic
msc += $takesaction:utters a dark prayer and points at you
msc += $takesaction:waves its arms in wide circles
msc += $takesaction:is infused with unholy energy
msc += $takesaction:shambling mangrove reaches out with a gnarled limb
msc += $takesaction:You jump-attack
msc += $takesaction:The injured rakshasa weaves a defensive illusion
msc += $takesaction:Mara seems to draw the.*out of itself
msc += $takesaction:Mara shimmers
msc += $takesaction:Your battlesphere fires
msc += $takesaction:curse skull calls on the powers of darkness
msc += $takesaction:curse skull rattles its jaw
msc += $takesaction:Your shadow mimicks your spell
msc += $takesaction:calls down the wrath of its god upon you
msc += $takesaction:invokes the aid of its god against you
msc += $takesaction:rakshasa weaves an illusion
msc += $takesaction:coils itself and waves its upper body at you
msc += $takesaction:casts a spell
msc += $takesaction:You breathe a
msc ^= $takesaction:You draw life from your surroundings
msc += $takesaction:You step out of the flow of time
msc += $takesaction:You can feel time thicken for a moment
msc += $takesaction:The flow of time bends around you
msc += $takesaction:You start singing a song of slaying
msc += $takesaction:The disc erupts in an explosion of electricity!
msc += $takesaction:and something leaps out
msc += $takesaction:You assume a fearsome visage
msc ^= $takesaction:Asterion utters an invocation to Makhleb
msc ^= $takesaction:Asterion conjures a destructive force in the name of Makhleb
msc ^= $takesaction:wizard howls an incantation
msc ^= $takesaction:draws from the surrounding life force
msc ^= $takesaction:Gastronok chants a spell
msc ^= $takesaction:(breathes|spits).*at
msc += $takesaction:You conjure a mighty blast of ice
msc += $takesaction:conjures a mighty blast of ice
msc ^= $takesaction:Your spellforged servitor (casts|conjures|launches)
msc += $takesaction:You reach into the bag
msc += $takesaction:You gaze into the crystal ball
msc += $takesaction:Your jumping spider leaps
msc ^= $takesaction:ice dragon breathes frost
msc ^= $takesaction:points at you and mumbles some strange words
msc += $takesaction:(fires|shoots|throws) [^n]
msc += $takesaction:You (fire|shoot|throw)
msc += $takesaction:(conjures|fires|gestures|plays a|radiates)
msc ^= $takesaction:mumbles some strange (prayers|words)
msc ^= $takesaction:spriggan berserker (invokes|prays to|utters an invocation to) Trog
msc ^= $takesaction:calls down the wrath of the Shining One
msc += $takesaction:casts a spell.*floats close
msc += $takesaction:offers itself to Yredelemnul
msc ^= $takesaction:launches metal splinters at you
msc += $takesaction:(Angry insects surge|Agitated ravens fly) out from beneath the
msc ^= $takesaction:begins absorbing vital energies
msc ^= $takesaction:calls forth a grand avatar
msc ^= $takesaction:exhales a fierce blast of wind
msc ^= $takesaction:curls into a ball and starts rolling
msc ^= $takesaction:You open the lid .. .
msc ^= $takesaction:jumps down from its now dead mount
msc ^= $takesaction:swoops through the air toward you
msc ^= $takesaction:jumping spider pounces on
msc ^= $takesaction:jumping spider leaps
msc += $takesaction:manticore flicks its tail
msc += $takesaction:You begin to abjure the creatures around you
msc ^= $takesaction:The golden eye blinks at you
msc ^= $takesaction:activates a sealing rune
msc ^= $takesaction:offers up its power
msc += $takesaction:You warp the flow of time around you
msc += $takesaction:summons
msc += $takesaction:great orb of eyes gazes at
msc += $takesaction:You radiate an aura of cold

msc ^= $godaction:Dithmenos does not appreciate your starting fires
msc += $godaction:Beogh throws an implement of electrocution at you
msc += $godaction:Beogh throws implements of electrocution at you
msc += $godaction:Beogh sends forth an army of orcs
msc += $godaction:you feel ready to understand
msc += $godaction:You feel a surge of divine interest
msc += $godaction:(Ashenzari|Beogh|Cheibriados|Dithmenos|Elyvilon|Fedhas|Gozag|Igni Ipthes|Jiyva|Kikubaaqudgha|Lugonu)
msc += $godaction:(Makhleb|Nemelex Xobeh|Okawaru|Qazlal|Sif Muna|The Shining One|Trog|Vehumet|Xom|Yredelemnul|Zin[^g])
msc ^= $godaction:(Ashenzari|Beogh|Cheibriados|Dithmenos|Elyvilon|Fedhas|Gozag|Igni Ipthes|Jiyva|Kikubaaqudgha|Lugonu) says
msc ^= $godaction:(Makhleb|Nemelex Xobeh|Okawaru|Qazlal|Sif Muna|The Shining One|Trog|Vehumet|Xom|Yredelemnul|Zin[^g]) says
msc ^= $godaction:Your divine halo returns
msc += $godaction:is distracted by the nearby gold
msc += $godaction:soul is now ripe for the taking
msc += $godaction:sets up shop in the Dungeon
msc ^= $godaction:You redirect
msc ^= $godaction:You feel protected from physical attacks
msc ^= $godaction:You feel protected from cold
msc ^= $godaction:You feel protected from fire
msc ^= $godaction:You feel protected from electricity
msc += $godaction:resistances upon receiving elemental damage
msc += $godaction:A storm cloud blasts the area with cutting wind
msc += $godaction:A blizzard blasts the area with ice
msc += $godaction:Magma suddenly erupts from the ground
msc ^= $godaction:Xom calls
msc += $godaction:The storm around you weakens
msc += $godaction:The ground shakes violently
msc += $godaction:The storm around you strengthens
msc += $godaction:due to Igni's heat
msc += $godaction:A mighty gale blasts forth
msc += $godaction:A fiery fortress appears around you!
msc += $godaction:is consumed in a column of flame
msc += $godaction:The toadstool can now pick up its mycelia and move
msc += $godaction:Slime for the Slime God
msc ^= $godaction:Cheibriados rebukes [^y]
msc ^= $godaction:You hear Xom
msc ^= $godaction:Go forth and redecorate
msc += $godaction:This is a.*sacrifice
msc ^= $godaction:Xom.*touches
msc ^= $godaction:You need some minor
msc ^= $godaction:Let me alter your
msc ^= $godaction:Xom complains about the scenery
msc ^= $godaction:Xom howls with laughter
msc ^= $godaction:This place needs a little more atmosphere
msc ^= $godaction:The area is suffused with divine lightning
msc ^= $godaction:Let's go for a ride
msc ^= $godaction:Xom momentarily opens a gate
msc ^= $godaction:Where it stops
msc ^= $godaction:\"First here. now there\.\"
msc ^= $godaction:\"Over there now!\"
msc ^= $godaction:Serve the toy. my child
msc ^= $godaction:Fight to survive. mortal
msc ^= $godaction:Xom opens a gate
msc ^= $godaction:Xom slaps you with
msc ^= $godaction:You hear crickets chirping
msc ^= $godaction:Get over here
msc ^= $godaction:Go forth and destroy
msc ^= $godaction:Xom laughs nastily
msc ^= $godaction:Everything around seems to assume a strange transparency
msc ^= $godaction:You feel watched
msc ^= $godaction:The walls suddenly lose part of their structure
msc ^= $godaction:You are now a BORING thing
msc ^= $godaction:Xom makes a sudden noise
msc ^= $godaction:Xom roars with laughter
msc ^= $godaction:You feel someone pinching you\. As you turn. you see no one
msc ^= $godaction:\"Try this\.\"
msc ^= $godaction:\"Whee!\"
msc ^= $godaction:\"Catch!\"
msc ^= $godaction:\"Here.\"
msc ^= $godaction:\"Boo!\"
msc ^= $godaction:\"Tag. you\'re it!\"
msc ^= $godaction:\"Boring in life. Boring in death\"
msc ^= $godaction:\"This might be better!\"
msc ^= $godaction:\"I like them better like this\.\"
msc ^= $godaction:\"Heh heh heh\.\.\.\"
msc ^= $godaction:\"Burn. baby. burn!\"
msc ^= $godaction:\"Time to have some fun!\"
msc ^= $godaction:\"Have a taste of chaos. mortal\.\"
msc ^= $godaction:\"See what I see. my child!\"
msc ^= $godaction:\"Just a minor improvement\.\.\.\"
msc ^= $godaction:\"Hum-dee-hum-dee-hum\.\.\.\"
msc ^= $godaction:\"There. this looks better\.\"
msc ^= $godaction:\"You have grown too confident for your meagre worth\.\"
msc ^= $godaction:\"Take this token of my esteem\.\"
msc ^= $godaction:\"Take this instrument of something!\"
msc ^= $godaction:\"See what I see. my child!\"
msc ^= $godaction:\"What!\? Thats's it\?!\"c
msc ^= $godaction:\"Serve the (mortal|toy). my (child|children)!\"
msc ^= $godaction:Let\'s see if it\'s strong enough to survive yet
--These don't seem to work, maybe a bug?
msc ^= $boring:disappears without a glow
msc ^= $boring:disappears without a sign
msc ^= $boring:glow with a rainbow of weird colours and disappear
msc ^= $boring:glows slightly and disappears
msc ^= $boring:is slowly consumed by flames
msc ^= $boring:slowly burns to ash
msc ^= $boring:slowly crumbles into the ground
msc ^= $boring:shimmers? and breaks? into pieces
msc ^= $boring:disappears into the void
msc ^= $boring:stares at you suspiciously for a moment
msc += $boring:trembles before you
msc += $boring:You feel mildly nauseous
msc += $boring:Multicoloured lights dance around

# Interface Messages - These shouldn't take any turns
msc += $interface:You cannot read scrolls
msc += $interface:You cannot drink potions
msc += $interface:too exhausted to
msc += $interface:There are no objects that can be picked up here
msc += $interface:Calm down first
msc += $interface:You enter a permanent teleport trap
msc += $interface:too cloudy to do that here
msc += $interface:A powerful magic interferes with the creation of the passage
msc += $interface:You cannot apport that
msc += $interface:The film of ice won't work on stone
msc += $interface:You see nothing there to enslave the soul of
msc += $interface:There isn't anything that you can close there
msc += $interface:Choose some type of armour to enchant
msc += $interface:You can't place the prism on a creature
msc += $interface:You are too depleted to cast spells recklessly
msc += $interface:It's stuck to you
msc += $interface:You're in a travel-excluded area
msc += $interface:You are unable to make a sound
msc += $interface:Choose an unidentified item
msc += $interface:There is nothing here that can be animated
msc += $interface:No.*are visible
msc += $interface:No evolvable flora in sight
msc += $interface:You must target a plant or fungus
msc += $interface:No target in range
msc += $interface:This is a.*deck
msc += $interface:No exploration algorithm can help you here
msc += $interface:You cannot walk through the dense trees
msc += $interface:This wall is too hard to dig through
msc += $interface:You can't dig through that
msc += $interface:You are already wielding that
msc ^= $interface:Something interferes with your magic
msc += $interface:You can only heal others!
msc += $interface:You are already wielding that
msc += $interface:You don't know.*spells?
msc += $interface:That is presently inert
msc += $interface:That isn't a deck
msc += $interface:Reset throwing quiver to default
msc += $interface:You can't memorise that many levels of magic yet
msc += $interface:You aren't wielding a weapon
msc += $interface:You'd need your.*free
msc += $interface:I'll put part of them outside for you
msc += $interface:You're in a travel-excluded area. stopping explore
msc += $interface:There is a passage of Golubria here
msc += $interface:you can't auto-travel out of here
msc += $interface:waypoint
msc += $interface:You aren't in the Abyss
msc += $interface:You haven't found any runes yet
msc += $interface:This weapon is holy and will not allow you to wield it
msc += $interface:Huh\?
msc += $interface:You can't drink
msc += $interface:You cannot cast that spell in your current form
msc ^= $interface:is stuck to you
msc += $interface:is melded into your body
msc ^= $interface:Your.*feels? slithery
msc += $interface:You can't wear anything in your present form
msc += $interface:You're too inexperienced to learn that spell
msc += $interface:You're already wearing two cursed rings
msc += $interface:You need a rune to enter this place
msc ^= $interface:There is an ice covered gate leading back out of here here
msc += $interface:The bosom of this dungeon contains the most powerful artefact
msc += $interface:Clearing travel trail
msc += $interface:Your pack is full
msc += $interface:You can't pick everything up
msc += $interface:Could not pick up an item
msc += $interface:You can't carry that many items
msc += $interface:You enter the Abyss
msc += $interface:You enter the halls of Pandemonium
msc += $interface:This wand has
msc += $interface:That is beyond the maximum range
msc += $interface:You can't (drink|read) that
msc += $interface:You cannot shoot.*while held in a net
msc += $interface:You're already here
msc += $interface:You can't do that
msc += $interface:Cleared annotation
msc += $interface:You have no means to grasp a wand firmly enough
msc += $interface:Choose a valid weapon
msc += $interface:No previous command
msc += $interface:You sense a monster
msc += $interface:Welcome
msc += $interface:There is a.*trap here
msc += $interface:There is a.*(entrance).*here
msc += $interface:That item cannot be evoked
msc += $interface:Please enjoy your stay
msc += $interface:You now have enough gold to buy
msc += $interface:Showing terrain only
msc += $interface:Returning to normal view
msc += $interface:Done exploring
msc += $interface:You pace your travel speed to your slowest ally
msc += $interface:The water rises up and takes form
msc += $interface:The winds coalesce and take form
msc += $interface:The.*answers the.*call
msc += $interface:You're too full
msc += $interface:Your memorisation is interrupted
msc += $interface:surroundings become eerily quiet
msc += $interface:You fall into the shallow water
msc += $interface:an escape hatch
msc += $interface:You stop dropping stuff
msc += $interface:melds into your body
msc += $interface:Clearing level map
msc += $interface:There's nothing close enough
msc += $interface:Autopickup is now
msc += $interface:Hurry and find it before the portal
msc += $interface:You slide downwards
msc += $interface:Can't find anything matching that
msc += $interface:No item to drop
msc += $interface:you feel a great hunger. Being not satiated
msc += $interface:You finish taking off
msc += $interface:appears from thin air
msc += $interface:You feel more attuned to
msc += $interface:(Attack!|Fall back!|Follow me!|Stop fighting!|Wait here!)
msc += $interface:You have finished your manual
msc += $interface:You have no appropriate body parts free
msc ^= $interface:You finish putting on
msc += $interface:isn't holding a weapon that can be rebranded
msc += $interface:You feel the dreadful sensation subside
msc += $interface:You feel an oppressive heat about you
msc += $interface:You travel at normal speed
msc += $interface:Your reserves of magic are already full
msc += $interface:There are no corpses nearby
msc += $interface:No target in view
msc += $interface:It (is|was) a (potion|scroll)
msc += $interface:Aborting
msc += $interface:Created macro
msc += $interface:Saving macro


# 3-k Message Channels
# --------------------

#Channels
#channel.plain =
channel.prompt = $interface
channel.god = $godaction
channel.duration = $warning
channel.danger = $danger
channel.warning = $danger
channel.recovery = $verypositive
channel.talk = mute
channel.talk_visual = $boring
channel.timed_portal = $warning
channel.intrinsic_gain = $awesome
#channel.mutation = --either danger/warning/awesome
channel.monster_spell = $takesaction
#channel.monster_enchant = --either danger/warning/boring/takesaction
channel.friend_spell = $takesaction
#channel.friend_enchant = --either danger/warning/boring/takesaction
channel.friend_action = $takesaction
channel.monster_damage = mute
#channel.banishment = --either positive or danger
channel.equipment = $interface
#channel.floor =
channel.multiturn = $boring
#channel.examine =
#channel.examine_filter =
#channel.diagnostics =
#channel.error =
#channel.tutorial =
channel.orb = $awesome
#channel.hell_effect = -either danger/warning/boring


#### MUTES Be careful with these! Last, so they override the rest
msc ^= mute:plain:No target in view!
msc ^= mute:There is a.*door here

# Unnecessary
msc ^= mute:HP restored
msc ^= mute:Magic restored
msc ^= mute:A chill wind blows around you
msc ^= mute:The.*dissolves into shadows
msc ^= mute:The (bush|fungus|plant) is (engulfed|struck)
#msc ^= mute:Cast which spell
msc ^= mute:Use which ability
msc ^= mute:Evoke which item
#msc ^= mute:Confirm with
msc ^= mute:You can\'t see any susceptible monsters within range
msc ^= mute:for a list of commands and other information
msc ^= mute:You swap places
msc ^= mute:Your.*spectral.*disappears
msc ^= mute:There is an open.*door here


msc ^= mute:Moving in this stuff is going to be slow
msc ^= mute:You enter the shallow water
msc ^= mute:There is a.*(staircase).*here

msc ^= mute:is lightly (damaged|wounded)
msc ^= mute:is moderately (damaged|wounded)
msc ^= mute:is heavily (damaged|wounded)
msc ^= mute:is severely (damaged|wounded)
msc ^= mute:is almost (dead|destroyed)

msc ^= mute:Was it this warm in here before
msc ^= mute:The flames dance
msc ^= mute:Your shadow attacks
msc ^= mute:Marking area around
msc ^= mute:Placed new exclusion
msc ^= mute:Reduced exclusion size to a single square
msc ^= mute:Removed exclusion
msc ^= mute:You can access your shopping list by pressing
msc ^= mute:As you enter the labyrinth
msc ^= mute:previously moving walls settle noisily into place
msc ^= mute:The plant looks sick
msc ^= mute:Shift\-Dir \- straight line
msc ^= mute:Your foxfire dissipates
msc ^= mute:evades? a web
msc ^= mute:An electric hum fills the air
msc ^= mute:You pick up a book of
msc ^= mute:accepts your kill
msc ^= mute:Okawaru is honoured by your kill
msc ^= mute:you see here a.*corpse

############################### End rc/display.rc ###############################
##########################################################################################

################################### Begin rc/fm-messages.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
more := force_more_message
flash := flash_screen_message

# Remove annoying defaults
more -= You have reached level
more -= The lock glows eerily
more -= Heavy smoke blows from the lock
more -= The gate opens wide
more -= With a soft hiss the gate opens wide
more -= You pick up the .* gem and feel its .* weight
more -= You pick up the .* rune and feel its power
more -= welcomes you( back)?!

# Significant spells/effects ending
more += is no longer charmed
more += You.*re starting to lose your buoyancy
# Death's Door
more += time is.*running out
more += life is in your own
# Death channel
more += unholy channel is weakening

# Monsters doing things
more += monster_warning:wielding.*of (distortion|chaos)
more += monster_warning:carrying a wand of
more += monster_warning:curare
more += begins to recite a word of recall
more += There is.*feeling in your soul
more += wretched star pulses
more += Strange energies course through your body

flash += doors? slams? shut
flash += blows.*on a signal horn
flash += Deactivating autopickup
flash += Its appearance distorts for a moment
flash += The.*offers itself to Yredelemnul
flash += The forest starts to sway and rumble
flash += Your?.*suddenly stops? moving

# Crowd control
more += You.*(?<!( too|less)) confused
more += You .*(slow.*down|lose consciousness)
more += infuriates you
more += hits you .* distortion
more += Space .* around you
more += surroundings become eerily quiet
more += Your limbs are stiffening

flash += You .* (blown|knocked back|mesmerised|trampled|stumble backwards|encased)
flash += Your magical (effects|defenses) are (unraveling|stripped away)
flash += You stop (a|de)scending the stairs
flash += A sentinel's mark forms upon you
flash += The pull of.*song draws you forward
flash += engulfs you in water

# Clouds
more += danger:(calcify|mutagenic)
more += You.*re engulfed in.*miasma
flash += Miasma billows from the

# You Screwed Up
more += is no longer ready
more += You really shouldn't be using
more += You don't have enough magic to cast this spell
flash += Your body shudders with the violent release
flash += power of Zot

# Found something important
more += Found.*the Ecumenical Temple
more += Found.*(treasure|bazaar|ziggurat)
more += .*resides here
more += You have a vision of.*gates?
more += Press the corresponding letter to learn more about a god
flash += timed_portal:.*

# Translocations
more += danger:sense of stasis
more += Your surroundings.*(different|flicker)
more += You.*re suddenly pulled into a different region
flash += You blink
flash += danger:You feel strangely .*stable
flash += delayed

# Big damage
more += your body is wracked
more += Ouch! That really hurt!
more += The poison in your body grows stronger
more += You.*re lethally poisoned
more += danger:You convulse
more += You feel a (horrible|terrible) chill
more += Your.*terribly
more += You are.*terribly

# Hit by something
more += Terrible wounds open
more += The air around.*erupts in flames
more += The air twists around and violently strikes you in flight
more += You shudder from the earth-shattering force
more += You feel.*(?<!less)( haunted| rot| vulnerable)
flash += danger:corrodes you
flash += Your damage is reflected back at you
flash += ^(?!Your? ).*reflects

# FYI
more += seems mollified
more += You have finished your manual

# Unexpected monsters
more += appears in a (shower|flash)
more += appears out of thin air
more += You sense the presence of something unfriendly
more += Wisps of shadow swirl around

# Misc
more += hell effect:.*
more += god:wrath finds you
more += The walls disappear

# Ashenzari
more += god:Ashenzari invites you to partake
# Dithmenos
more += god:You are shrouded in an aura of darkness
more += god:You.*bleed smoke
more += god:Your shadow.*tangibly mimics your actions
# Fedhas
more += god:Fedhas invokes the elements against you
# Jivya
more += god:will now unseal the treasures of the Slime Pits
more += god:Jiyva alters your body
# Kikubaaqudgha
more += god:Kikubaaqudgha will grant you
# Lugonu
more += god:Lugonu will now corrupt your weapon
more += god:Lugonu sends minions to punish you
# Okawaru
more += god:Okawaru sends forces against you
# Qazlal
flash += god:resistances upon receiving elemental damage
flash += god:You are surrounded by a storm which can block enemy attacks
# The Shining One
more += god:Your divine shield starts to fade
more += god:Your divine shield fades away
# Trog
more += god:You feel the effects of Trog's Hand fading
more += god:You feel less resistant to hostile enchantments
# Xom
more += staircase.*moves
more += Some monsters swap places
# Yredelemnul
more += god:soul is no.* ripe for the taking
more += god:dark mirror aura disappears
# Zin
more += god:will now cure all your mutations

############################### End rc/fm-messages.rc ###############################
##########################################################################################

################################### Begin rc/macros.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
bindkey = [~] CMD_LUA_CONSOLE

# Numpad keymaps
macros += K \{-1019} f
macros += K \{-1018} 3
macros += K \{-1016} \{9}
macros += K \{-1015} 2
macros += K \{-1012} 1
macros += K \{-1010} o
macros += K \{-1000} .
macros += K \{-247} 5
macros += K2 \{-1019} .

# Spellcasting macros
macros += M 1 za
macros += M 2 zb
macros += M 3 zc
macros += M 4 zd
macros += M 6 zf
macros += M 7 zg
macros += M 8 zh
macros += M 9 zi
macros += M 0 zj

# Confirm targeting with same keys as spellcasting
macros += K2 \{-1018} \{13}
macros += K2 \{-1015} \{13}
macros += K2 \{-1012} \{13}
macros += K2 1 \{13}
macros += K2 2 \{13}
macros += K2 4 \{13}
macros += K2 6 \{13}
macros += K2 7 \{13}
macros += K2 8 \{13}
macros += K2 9 \{13}
macros += K2 0 \{13}

############################### End rc/macros.rc ###############################
##########################################################################################

################################### Begin rc/runrest.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
# Aliases
stop := runrest_stop_message
ignore := runrest_ignore_message

# Ignore these stops
interrupt_travel -= sense_monster
interrupt_travel -= mimic
ignore ^= "sense a monster nearby"

# Monsters to ignore at a distance
runrest_ignore_monster += fire vortex:1

# Stop for consumables you want to use immediately
stop += potions? of experience
stop += scrolls? of acquirement

# Don't stop for noisy doors unless someone shouts back
stop -= it creaks loudly
stop -= flies open with a bang
stop += You hear

# Re-enable stops for all ally actions then ignore some
ignore -= friend_action:
ignore -= friend_spell:
ignore -= friend_enchant:
ignore ^= butterfly disappears
ignore ^= friend_action:(a|the) web
ignore ^= friend_action:(seems|blinks)
stop += friend_action:
stop += friend_spell:
stop += friend_enchant:
stop += appears from out of your range of vision
stop += hits your
stop += our.*is destroyed

# Expiring effects; Turn on transmutation|flight|swiftness ending and ignore the rest
ignore -= transformation is almost over\.
ignore -= transformation has ended\.
ignore -= revert to a slightly less stony form\.
ignore -= revert to your normal fleshy form\.
ignore -= You feel yourself come back to life
ignore ^= unholy channel is weakening
ignore ^= magical contamination.*faded
ignore ^= our foxfire dissipates
stop ^= unholy channel expires
stop ^= are starting to lose your buoyancy
stop ^= feel.*sluggish
# Expiring effects for friends too
stop ^= no longer petrified
ignore ^= no longer.*(covered in acid|unusually strong)
ignore ^= looks more healthy

# Misc
stop -= You now have enough gold to
stop ^= timed_portal:.*
ignore ^= nearby plant withers and dies
ignore ^= disentangle yourself
ignore ^= You swap places.

# Summonings
ignore ^= our.*crimson imp blinks
ignore ^= our.*simulacrum vaporises
ignore ^= our.*returns to the shadows of the Dungeon
ignore ^= our.*skeleton crumbles into dust
ignore ^= our.*fades into mist
ignore ^= our.*looks more healthy
ignore ^= our.*is no longer (corroded|moving slowly)
ignore ^= our.*dissolves into a puddle of slime

# Ru
stop += god:Ru believes you are ready to make a new sacrifice
# Hepliaklqana
ignore ^= emerges from the mists of memory
# Wu Jian Council
ignore += heavenly storm settles
# Yredelemnul
ignore += offer up the Black Torch's flame
ignore += mindless puppets stay behind to rot

############################### End rc/runrest.rc ###############################
##########################################################################################

################################### Begin rc/slot-defaults.rc ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
####### Item Slots #########
# Rings to P/p for easy swapping
item_slot += ring of:Pp

# ignored: degeneration, noise, torment
# unassigned slots: d, e, k, F
item_slot ^= scroll of acquirement:q
item_slot ^= scroll of amnesia:E
item_slot ^= scroll of blinking:B
item_slot ^= scroll of brand weapon:D
item_slot ^= scroll of butterflies:s
item_slot ^= scroll of enchant armour:u
item_slot ^= scroll of enchant weapon:W
item_slot ^= scroll of fear:f
item_slot ^= scroll of fog:F
item_slot ^= scroll of identify:i
item_slot ^= scroll of immolation:o
item_slot ^= scroll of revelation:j
item_slot ^= scroll of poison:y
item_slot ^= scroll of silence:S
item_slot ^= scroll of summoning:s
item_slot ^= scroll of teleportation:t
item_slot ^= scroll of vulnerability:v

item_slot ^= potion of ambrosia:A
item_slot ^= potion of attraction:n
item_slot ^= potion of berserk rage:z
item_slot ^= potion of brilliance:R
item_slot ^= potion of cancellation:C
item_slot ^= potion of curing:c
item_slot ^= potion of experience:x
item_slot ^= potion of enlightenment:g
item_slot ^= potion of haste:H
item_slot ^= potion of heal wounds:h
item_slot ^= potion of invisibility:I
item_slot ^= potion of lignification:l
item_slot ^= potion of magic:M
item_slot ^= potion of might:m
item_slot ^= potion of resistance:r
item_slot ^= potion of mutation:U

item_slot ^= condenser vane:V
item_slot ^= phial of floods:O
item_slot ^= phantom mirror:N
item_slot ^= box of beasts:X
item_slot ^= tin of tremorstones:T
item_slot ^= lightning rod:L

item_slot ^= wand of digging:K
item_slot ^= wand of flame:Q
item_slot ^= wand of mindburst:Y
item_slot ^= wand of acid:G
item_slot ^= wand of light:G
item_slot ^= wand of quicksilver:G
item_slot ^= wand of iceblast:Z
item_slot ^= wand of roots:Z
item_slot ^= wand of charming:J
item_slot ^= wand of paralysis:J



######## Spell Slots #########
spell_slot ^= Alistair's Intoxication:AITX
spell_slot ^= Alistair’s Walking Alembic:AWKLMBSTEI
spell_slot ^= Anguish:ANGUISH
spell_slot ^= Animate Armour:ANMT
spell_slot ^= Animate Dead:ADNMT
spell_slot ^= Arcjolt:AJCOLT
spell_slot ^= Blink:BLNK
spell_slot ^= Borgnjor's Revivification:BRVF
spell_slot ^= Call Canine Familiar:CFN
spell_slot ^= Call Imp:ICMP
spell_slot ^= Cause Fear:CFSUR
spell_slot ^= Chain Lightning:LCHGNT
spell_slot ^= Cigotuvi's Dreadful Rot:CDRVT
spell_slot ^= Confusing Touch:CTF
spell_slot ^= Conjure Ball Lightning:BLCTN
spell_slot ^= Construct Spike Launcher:CSLPKNRAUE
spell_slot ^= Corpse Rot:CRPS
spell_slot ^= Dazzling Flash:DZFLSHNG
spell_slot ^= Death Channel:DCNL
spell_slot ^= Death's Door:DROTHEA
spell_slot ^= Detonation Catalyst:DCTNYTSAEO
spell_slot ^= Diamond Sawblades:DSWBLNIAO
spell_slot ^= Discord:DISCORD
spell_slot ^= Disjunction:DJNIS
spell_slot ^= Dispersal:DPLIS
spell_slot ^= Dragon's Call:DCRGN
spell_slot ^= Forge Monarch Bomb:FMBONRCHGEA
spell_slot ^= Forge Phalanx Beetle:FPBENXORG
spell_slot ^= Fortress Blast:FBRTSLA
spell_slot ^= Foxfire:FXOIRE
spell_slot ^= Fugue of the Fallen:FUGALNE
spell_slot ^= Fulsome Fusillade:FLSOMADE
spell_slot ^= Hoarfrost Cannonade:HCORFND
spell_slot ^= Ice Form:IFORM
spell_slot ^= Ignite Poison:IPOSN
spell_slot ^= Ignition:IGNTO
spell_slot ^= Infestation:INFESTAON
spell_slot ^= Irradiate:IRADTE
spell_slot ^= Iskenderun's Battlespehere:BSI
spell_slot ^= Iskenderun's Mystic Blast:IMB
spell_slot ^= Jinxbite:JNXBITE
spell_slot ^= Leda's Liquefaction:LQFND
spell_slot ^= Malign Gateway:MGWTN
spell_slot ^= Manifold Assault:MANFT
spell_slot ^= Martyr's Knell:MKNARTYEL
spell_slot ^= Maxwell's Capacitive Coupling:MCXW
spell_slot ^= Metabolic Englaciation:MENC
spell_slot ^= Monstrous Menagerie:MNGR
spell_slot ^= Nazja’s Percussive Tempering:NPTZJACUE
spell_slot ^= Olgreb's Toxic Radiance:TOR
spell_slot ^= Ozocubu's Armour:OAMR
spell_slot ^= Ozocubu's Refrigeration:ROZFG
spell_slot ^= Permafrost Eruption:PERUTFMAOSTIN
spell_slot ^= Platinum Paragon:PLTGNMAO
spell_slot ^= Polar Vortex:PVXT
spell_slot ^= Rending Blade:RBENDALG
spell_slot ^= Scorch:SCORH
spell_slot ^= Shatter:SHTR
spell_slot ^= Sigil of Binding:SBGILDNG
spell_slot ^= Silence:SICL
spell_slot ^= Spellforged Servitor:SVFR
spell_slot ^= Sphinx Sisters:SPHINXR
spell_slot ^= Starburst:SBUT
spell_slot ^= Static Discharge:DSCGT
spell_slot ^= Sublimation of Blood:SBLM
spell_slot ^= Summon Blazeheart Golem:SBGLZOM
spell_slot ^= Summon Cactus Giant:CGS
spell_slot ^= Summon Forest:FSRTM
spell_slot ^= Summon Horrible Things:HST
spell_slot ^= Summon Hydra:HYDRA
spell_slot ^= Summon Ice Beast:ISB
spell_slot ^= Summon Lightning Spire:SMLIRNG
spell_slot ^= Summon Mana Viper:MSV
spell_slot ^= Summon Seismosaurus Egg:EGSMIEOAU
spell_slot ^= Summon Small Mammal:SMLAUON
spell_slot ^= Swiftness:SWIFT
spell_slot ^= Volatile Blastmotes:VBOLMASTE
:if you.class() == "Summoner" then
  spell_slot ^= (summon|call):abcdefgh
:end

############################### End rc/slot-defaults.rc ###############################
##########################################################################################

## (Resuming init.txt) ##

### buehler.rc core files ###

################################### Begin lua/core/cache.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Cache of commonly pulled values, for better performance
CACHE = {}

function dump_cache()
  local tokens = { "\n---CACHE---" }
  for k,v in pairs(CACHE) do
    if type(v) == "table" then
      tokens[#tokens+1] = string.format("  %s:", k)
      for k2,v2 in pairs(v) do
        tokens[#tokens+1] = string.format("    %s: %s", k2, v2)
      end
    else
      if v == true then v = "true" elseif v == false then v = "false" end
      tokens[#tokens+1] = string.format("  %s: %s", k, v)
    end
  end

  tokens[#tokens+1] = "\n"
  return table.concat(tokens, "\n")
end

function init_cache()
  if CONFIG.debug_init then crawl.mpr("Initializing cache") end

  CACHE = {}

  CACHE.class = you.class()
  CACHE.race = you.race()
  if util.contains(ALL_LITTLE_RACES, CACHE.race) then CACHE.size_penalty = SIZE_PENALTY.LITTLE
  elseif util.contains(ALL_SMALL_RACES, CACHE.race) then CACHE.size_penalty = SIZE_PENALTY.SMALL
  elseif util.contains(ALL_LARGE_RACES, CACHE.race) then CACHE.size_penalty = SIZE_PENALTY.LARGE
  else CACHE.size_penalty = SIZE_PENALTY.NORMAL
  end
  CACHE.undead =  util.contains(ALL_UNDEAD_RACES, CACHE.race)
  CACHE.poison_immune = you.res_poison() >= 3

  ready_cache()
end


------------------- Hooks -------------------
function ready_cache()
  CACHE.hp, CACHE.mhp = you.hp()
  CACHE.mp, CACHE.mmp = you.mp()
  CACHE.turn = you.turns()
  CACHE.str = you.strength()
  CACHE.dex = you.dexterity()
  CACHE.int = you.intelligence()
  CACHE.will = you.willpower()
  CACHE.xl = you.xl()
  CACHE.god = you.god()
  CACHE.have_orb = you.have_orb()
  CACHE.branch = you.branch()
  CACHE.depth = you.depth()

  CACHE.rMut = you.res_mutation()
  CACHE.rPois = you.res_poison()
  CACHE.rElec = you.res_shock()
  CACHE.rCorr = you.res_corr()
  CACHE.rF = you.res_fire()
  CACHE.rC = you.res_cold()
  CACHE.rN = you.res_draining()

  CACHE.s_armour = you.skill("Armour")
  CACHE.s_shields = you.skill("Shields")
  CACHE.s_dodging = you.skill("Dodging")
  CACHE.s_fighting = you.skill("Fighting")
  CACHE.s_spellcasting = you.skill("Spellcasting")
  CACHE.s_ranged = you.skill("Ranged Weapons")
  CACHE.s_polearms = you.skill("Polearms")

  CACHE.top_weap_skill = "Unarmed Combat"
  local max_weap_skill = get_skill(CACHE.top_weap_skill)
  for _,v in ipairs(ALL_WEAP_SCHOOLS) do
    if get_skill(v) > max_weap_skill then
      max_weap_skill = get_skill(v)
      CACHE.top_weap_skill = v
    end
  end
end

}
############################### End lua/core/cache.lua ###############################
##########################################################################################

################################### Begin lua/core/constants.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Lists of things that may need to be updated with future changes
BUEHLER_RC_VERSION = "1.0"

---- Items ----
ALL_MISC_ITEMS = {
  "box of beasts", "condenser vane", "figurine of a ziggurat",
  "Gell's gravitambourine", "horn of Geryon", "lightning rod",
  "phantom mirror", "phial of floods", "sack of spiders", "tin of tremorstones",
} -- ALL_MISC_ITEMS (do not remove this comment)

-- This is checked against the full text of the pickup message, so use patterns to match
ALL_MISSILES = {
  "poisoned dart", "atropa-tipped dart", "curare-tipped dart", "datura-tipped dart", "darts? of dispersal",
  " stone", "boomerang", "silver javelin", "javelin", "large rock", "throwing net",
} -- ALL_MISSILES (do not remove this comment)

-- Could be removed after https://github.com/crawl/crawl/issues/4606 is addressed
ALL_SPELLBOOKS = {
  "book of", "Necronomicon", "Grand Grimoire", "tome of obsoleteness", "Everburning Encyclopedia",
  "Ozocubu's Autobiography", "Maxwell's Memoranda", "Young Poisoner's Handbook", "Fen Folio",
  "Inescapable Atlas", "There-And-Back Book", "Great Wizards, Vol. II", "Great Wizards, Vol. VII",
  "Trismegistus Codex", "the Unrestrained Analects", "Compendium of Siegecraft", "Codex of Conductivity",
  "Handbook of Applied Construction", "Treatise on Traps", "My Sojourn through Swampland", "Akashic Record",
  -- Include prefixes for randart books
  "Almanac", "Anthology", "Atlas", "Book", "Catalogue", "Codex", "Compendium", "Compilation", "Cyclopedia",
  "Directory", "Elucidation", "Encyclopedia", "Folio", "Grimoire", "Handbook", "Incunable", "Incunabulum",
  "Octavo", "Omnibus", "Papyrus", "Parchment", "Precepts", "Quarto", "Secrets", "Spellbook", "Tome", "Vellum",
  "Volume",
} -- ALL_SPELLBOOKS (do not remove this comment)


---- Races ----
ALL_UNDEAD_RACES = {
  "Demonspawn", "Mummy", "Poltergeist", "Revenant",
} -- ALL_UNDEAD_RACES (do not remove this comment)

ALL_LITTLE_RACES = {
  "Spriggan",
} -- ALL_LITTLE_RACES (do not remove this comment)

ALL_SMALL_RACES = {
  "Kobold",
} -- ALL_SMALL_RACES (do not remove this comment)

ALL_LARGE_RACES = {
  "Armataur", "Naga", "Oni", "Troll",
} -- ALL_LARGE_RACES (do not remove this comment)


---- Skills ----
ALL_STAFF_SCHOOLS = {
  fire = "Fire Magic", cold = "Ice Magic", earth = "Earth Magic", air = "Air Magic",
  poison = "Poison Magic", death = "Necromancy", conjuration = "Conjurations",
} -- ALL_STAFF_SCHOOLS (do not remove this comment)

ALL_TRAINING_SKILLS = {
  "Air Magic", "Alchemy", "Armour", "Axes", "Conjurations", "Dodging",
  "Earth Magic", "Evocations", "Fighting", "Fire Magic", "Forgecraft", "Hexes",
  "Ice Magic", "Invocations", "Long Blades", "Maces & Flails", "Necromancy",
  "Polearms", "Ranged Weapons", "Shapeshifting", "Shields", "Short Blades", "Spellcasting",
  "Staves", "Stealth", "Summonings", "Translocations", "Unarmed Combat", "Throwing",
} -- ALL_TRAINING_SKILLS (do not remove this comment)

ALL_WEAP_SCHOOLS = {
  "axes", "maces & flails", "polearms", "long blades",
  "short blades", "staves", "unarmed combat", "ranged weapons",
} -- ALL_WEAP_SCHOOLS (do not remove this comment)


---- Other ----
ALL_PORTAL_NAMES = {
  "Bailey", "Bazaar", "Desolation", "Gauntlet", "Ice Cave", "Necropolis",
  "Ossuary", "Sewer", "Trove", "Volcano", "Wizlab", "Ziggurat",
} -- ALL_PORTAL_NAMES (do not remove this comment)

-- Would prefer to use integer values, but they don't work in all menus
COLORS = {
  blue = "blue", green = "green", cyan = "cyan", red = "red", magenta = "magenta",
  brown = "brown", lightgrey = "lightgrey", darkgrey = "darkgrey", lightblue = "lightblue",
  lightgreen = "lightgreen", lightcyan = "lightcyan", lightred = "lightred",
  lightmagenta = "lightmagenta", yellow = "yellow", white = "w",
  black = 0,
} -- COLORS (do not remove this comment)

RISKY_EGOS = {
  "chaos", "distortion", "harm", "infusion"
} -- RISKY_EGOS (do not remove this comment)

KEYS = {
  LF = string.char(10), CR = string.char(13)
} -- KEYS (do not remove this comment)

MUTS = {
  antennae = "antennae", augmentation = "augmentation", beak = "beak", claws = "claws",
  deformed = "deformed body", demonic_touch = "demonic touch", hooves = "hooves",
  horns = "horns", missing_hand = "missing a hand", pseudopods = "pseudopods",
  sharp_scales = "sharp scales", sturdy_frame = "sturdy frame", talons = "talons"
} -- MUTS (do not remove this comment)

SIZE_PENALTY = {
  LITTLE = -2, SMALL = -1, NORMAL = 0, LARGE = 1, GIANT = 2
} -- SIZE_PENALTY (do not remove this comment)

}
############################### End lua/core/constants.lua ###############################
##########################################################################################

################################### Begin lua/core/emojis.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
EMOJI = {}

function init_emojis()
  if CONFIG.debug_init then crawl.mpr("Initializing emojis") end

  if CONFIG.emojis then
    EMOJI.RARE_ITEM = "💎"
    EMOJI.ORB = "🔮"
    EMOJI.TALISMAN = "🧬"

    EMOJI.WEAPON = "⚔️"
    EMOJI.RANGED = "🏹"
    EMOJI.POLEARM = "🔱"
    EMOJI.TWO_HANDED = "✋🤚"
    EMOJI.CAUTION = "⚠️"

    EMOJI.STAFF_RESISTANCE = "🔥"

    EMOJI.ACCURACY = "🎯"
    EMOJI.STRONGER = "💪"
    EMOJI.STRONGEST = "💪💪"
    EMOJI.EGO = "✨"
    EMOJI.LIGHTER = "⏬"
    EMOJI.HEAVIER = "⏫"
    EMOJI.ARTEFACT = "💠"

    EMOJI.REMIND_IDENTIFY = "🎁"
    EMOJI.EXCLAMATION = "❗"
    EMOJI.EXCLAMATION_2 = "‼️"

    EMOJI.HP_FULL_PIP = "❤️"
    EMOJI.HP_PART_PIP = "❤️‍🩹"
    EMOJI.HP_EMPTY_PIP = "🤍"

    EMOJI.MP_FULL_PIP = "🟦"
    EMOJI.MP_PART_PIP = "🔹"
    EMOJI.MP_EMPTY_PIP = "➖"

    EMOJI.SUCCESS = "✅"

  else
    EMOJI.REMIND_IDENTIFY = with_color(COLORS.magenta, "?")
    EMOJI.EXCLAMATION = with_color(COLORS.lightmagenta, "!")
    EMOJI.EXCLAMATION_2 = with_color(COLORS.lightmagenta, "!!")

    EMOJI.HP_BORDER = with_color(COLORS.white, "|")
    EMOJI.HP_FULL_PIP = with_color(COLORS.green, "+")
    EMOJI.HP_PART_PIP = with_color(COLORS.lightgrey, "+")
    EMOJI.HP_EMPTY_PIP = with_color(COLORS.darkgrey, "-")

    EMOJI.MP_BORDER = with_color(COLORS.white, "|")
    EMOJI.MP_FULL_PIP = with_color(COLORS.lightblue, "+")
    EMOJI.MP_PART_PIP = with_color(COLORS.lightgrey, "+")
    EMOJI.MP_EMPTY_PIP = with_color(COLORS.darkgrey, "-")
  end
end

}
############################### End lua/core/emojis.lua ###############################
##########################################################################################

################################### Begin lua/core/persistent-data.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Manages persistent data across games and saves --

local persistent_var_names
local persistent_table_names
local GET_VAL_STRING = {}
GET_VAL_STRING = {
  str = function(value)
      return "\"" .. value .. "\""
  end,
  int = function(value)
      return value
  end,
  bool = function(value)
      return value and "true" or "false"
  end,
  list = function(value)
      local tokens = {}
      for _,v in ipairs(value) do
          tokens[#tokens+1] = GET_VAL_STRING[get_var_type(v)](v)
      end
      return "{" .. table.concat(tokens, ", ") .. "}"
  end,
  dict = function(value)
      local tokens = {}
      for k,v in pairs(value) do
        tokens[#tokens+1] = string.format("[\"%s\"]=%s", k, GET_VAL_STRING[get_var_type(v)](v))
      end
      return "{" .. table.concat(tokens, ", ") .. "}"
  end
}

-- Creates a persistent global variable or table, initialized to the default value
-- Once initialized, the variable is persisted across saves without re-init
function create_persistent_data(name, default_value)
  if _G[name] == nil then
      _G[name] = default_value
  end

  table.insert(chk_lua_save,
      function()
          local type = get_var_type(_G[name])
          if not GET_VAL_STRING[type] then
              crawl.mpr("Unknown persistence type: " .. type)
              return
          end
          return name .. " = " ..GET_VAL_STRING[type](_G[name]) .. KEYS.LF
      end)

  local var_type = get_var_type(_G[name])
  if var_type == "list" or var_type == "dict" then
    persistent_table_names[#persistent_table_names+1] = name
  else
    persistent_var_names[#persistent_var_names+1] = name
  end
end

-- For debugging: dump all persistent data
function dump_persistent_data()
  local tokens = { "\n---PERSISTENT TABLES---\n" }
  for _,name in ipairs(persistent_table_names) do
    tokens[#tokens+1] = name
    tokens[#tokens+1] = ":\n"
    if get_var_type(_G[name]) == "list" then
      for _,item in ipairs(_G[name]) do
        tokens[#tokens+1] = "  "
        tokens[#tokens+1] = item
        tokens[#tokens+1] = "\n"
      end
    else
      for k,v in pairs(_G[name]) do
        tokens[#tokens+1] = "  "
        tokens[#tokens+1] = k
        tokens[#tokens+1] = " = "
        tokens[#tokens+1] = tostring(v)
        tokens[#tokens+1] = "\n"
      end
    end
  end

  tokens[#tokens+1] = "\n---PERSISTENT VARIABLES---\n"
  for _,name in ipairs(persistent_var_names) do
    tokens[#tokens+1] = name
    tokens[#tokens+1] = " = "
    tokens[#tokens+1] = tostring(_G[name])
    tokens[#tokens+1] = "\n"
  end

  return table.concat(tokens)
end

function get_var_type(value)
  local t = type(value)
  if t == "string" then return "str"
  elseif t == "number" then return "int"
  elseif t == "boolean" then return "bool"
  elseif t == "table" then
      if #value > 0 then return "list"
      else return "dict"
      end
  end
  crawl.mpr("Unsupported type for value: " .. tostring(value) .. " (" .. t .. ")")
end

function init_persistent_data(full_reset)
  if CONFIG.debug_init then crawl.mpr("Initializing persistent-data") end

  -- Clear persistent data (data is created via create_persistent_data)
  if full_reset then
    if persistent_var_names then
      for _,name in ipairs(persistent_var_names) do
        _G[name] = nil
      end
    end
  
    if persistent_table_names then
      for _,name in ipairs(persistent_table_names) do
        _G[name] = nil
      end
    end
  end

  persistent_var_names = {}
  persistent_table_names = {}
end

-- Verify 1. data is from same game, 2. all persistent data was reloaded
-- This should be called after all features have run init(), to declare their data
function verify_data_reinit()
  local failed_reinit = false
  local GAME_CHANGE_MONITORS = {
    buehler_rc_version = BUEHLER_RC_VERSION,
    name = you.name(),
    race = CACHE.race,
    class = CACHE.class,
    turn = CACHE.turn
  } -- GAME_CHANGE_MONITORS (do not remove this comment)

  if CACHE.turn > 0 then
    for k, v in pairs(GAME_CHANGE_MONITORS) do
      local prev_var_name = "prev_" .. k
      create_persistent_data(prev_var_name, v)
      local prev = _G[prev_var_name]
      if prev ~= v then
        failed_reinit = true
        local msg = string.format("Unexpected change to %s: %s -> %s", k, prev, v)
        crawl.mpr(with_color(COLORS.lightred, msg))
      end
    end

    -- Errors reloading some persistent data prevent further data from being reloaded
    -- Set the final persistent var to detect full data reload
    -- If var was successfully reloaded via chk_lua_save, this will stay as true
    create_persistent_data("successful_data_reload", false)
    if not successful_data_reload then
      failed_reinit = true
      local fail_message = string.format("Failed to load persistent data for buehler.rc v%s!", prev_buehler_rc_version)
      crawl.mpr(with_color(COLORS.lightred, "\n" .. fail_message))
      crawl.mpr(with_color(COLORS.darkgrey, "Try restarting, or enable CONFIG.debug_init for more info."))
    end

    if failed_reinit and mpr_yesno(with_color(COLORS.yellow, "Deactivate buehler.rc?")) then return false end
  end

  for k, v in pairs(GAME_CHANGE_MONITORS) do
    _G["prev_" .. k] = v
  end
  successful_data_reload = true
  return true
end

}
############################### End lua/core/persistent-data.lua ###############################
##########################################################################################

################################### Begin lua/core/util.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
local delayed_mpr_queue

function init_util()
  if CONFIG.debug_init then crawl.mpr("Initializing util") end

  delayed_mpr_queue = {}
end


---- Text Formatting ----
-- Removes tags from text, and optionally escapes special characters --
function cleanup_text(text, escape_chars)
  local SPECIAL_CHARS = "([%^%$%(%)%%%.%[%]%*%+%-%?])"
  -- Fast path: if no tags, just handle newlines and escaping
  if not text:find("<") then
      if not escape_chars then
          return text:gsub("\n", "")
      end
      return text:gsub("\n", ""):gsub(SPECIAL_CHARS, "%%%1")
  end

  local tokens = {}
  local pos = 1
  local len = #text

  while pos <= len do
      local tag_start = text:find("<", pos)
      if not tag_start then
          -- No more tags, append remaining text
          tokens[#tokens+1] = text:sub(pos)
          break
      end

      -- Append text before tag
      if tag_start > pos then
          tokens[#tokens+1] = text:sub(pos, tag_start - 1)
      end

      -- Find end of tag
      local tag_end = text:find(">", tag_start)
      if not tag_end then
          -- Malformed tag, append remaining text
          tokens[#tokens+1] = text:sub(pos)
          break
      end

      pos = tag_end + 1
  end

  -- Join all parts and remove newlines
  local cleaned = table.concat(tokens):gsub("\n", "")

  -- Handle escaping if needed
  if escape_chars then
      return cleaned:gsub("([%^%$%(%)%%%.%[%]%*%+%-%?])", "%%%1")
  end

  return cleaned
end

function with_color(color, text)
  return string.format("<%s>%s</%s>", color, text, color)
end


--- Key modifiers ---
function control_key(c)
  return string.char(string.byte(c) - string.byte('a') + 1)
end


--- crawl.mpr enhancements ---
function mpr_yesno(text, capital_only)
  local suffix = capital_only and " (Y/n)" or " (y/n)"
  crawl.formatted_mpr(text .. suffix, "prompt")
  local res = crawl.getch()
  if string.char(res) == "Y" or string.char(res) == "y" and not capital_only then
    return true
  end
  crawl.mpr("Okay, then.")
  return false
end

-- Sends a message that is displayed at end of turn
function enqueue_mpr(text, channel)
  for _, msg in ipairs(delayed_mpr_queue) do
    if msg.text == text and msg.channel == channel then
      return
    end
  end
  delayed_mpr_queue[#delayed_mpr_queue+1] = { text = text, channel = channel, show_more = false }
end

function enqueue_mpr_opt_more(show_more, text, channel)
  for _, msg in ipairs(delayed_mpr_queue) do
    if msg.text == text and msg.channel == channel and msg.show_more == show_more then
      return
    end
  end
  delayed_mpr_queue[#delayed_mpr_queue+1] = { text = text, channel = channel, show_more = show_more }
end

function mpr_consume_queue()
  do_more = false
  for _, msg in ipairs(delayed_mpr_queue) do
    crawl.mpr(msg.text, msg.channel)
    if msg.show_more then do_more = true end
  end

  if do_more then
    you.stop_activity()
    crawl.more()
    crawl.redraw_screen()
  end

  delayed_mpr_queue = {}
end

function mpr_opt_more(show_more, text, channel)
  if show_more then
    mpr_with_more(text, channel)
  else
    crawl.mpr(text, channel)
  end
end

function mpr_with_more(text, channel)
  crawl.mpr(text, channel)
  you.stop_activity()
  crawl.more()
  crawl.redraw_screen()
end

function mpr_with_stop(text, channel)
  crawl.mpr(text, channel)
  you.stop_activity()
end


--- Utility ---
function get_mut(mutation, include_all)
  return you.get_base_mutation_level(mutation, true, include_all, include_all)
end

function have_shield()
  return is_shield(items.equipped_at("offhand"))
end

function have_weapon()
  return items.equipped_at("weapon") ~= nil
end

function is_amulet(it)
  return it and it.name("base") == "amulet"
end

function is_armour(it)
  return it and it.class(true) == "armour"
end

function is_body_armour(it)
  return it and it.subtype() == "body"
end

function has_risky_ego(it)
  local text = it.artefact and it.name() or it.ego()
  if not text then return false end
  for _, v in ipairs(RISKY_EGOS) do
    if text:find(v) then return true end
  end
  return false
end

function is_jewellery(it)
  return it and it.class(true) == "jewellery"
end

function is_ring(it)
  return it and it.name("base") == "ring"
end

function is_scarf(it)
  return it and it.class(true) == "armour" and it.subtype() == "scarf"
end

function is_shield(it)
  return it and it.class(true) == "armour" and it.subtype() == "offhand" and not is_orb(it)
end

function is_magic_staff(it)
  return it and it.class(true) == "magical staff"
end

function is_talisman(it)
  return it and it.name("qual"):find("talisman")
end

function is_orb(it)
  return it and it.name("qual") == "orb"
end

function is_polearm(it)
  return it and it.weap_skill == "Polearms"
end

function is_weapon(it)
  return it and (it.delay ~= nil)
end

function offhand_is_free()
  if get_mut(MUTS.missing_hand, true) > 0 then return true end
  return not items.equipped_at("offhand")
end


--- Debugging ---
function dump_inventory(item_info)
  local tokens = { "\n\n---INVENTORY---"}
  for inv in iter.invent_iterator:new(items.inventory()) do
    tokens[#tokens+1] = string.format("  %s: (%s) Qual: %s", inv.slot, inv.quantity, inv.name("qual"))
    if item_info then
      tokens[#tokens+1] = string.format("    Base: %s Class: %s, Subtype: %s", inv.name("base"), inv.class(true), inv.subtype())
    end
  end
  return table.concat(tokens, "\n")
end

function dump_chk_lua_save()
  local tokens = { "\n\n---CHK_LUA_SAVE---" }
  for _, func in ipairs(chk_lua_save) do
    tokens[#tokens+1] = util.trim(func())
  end
  return table.concat(tokens, "\n")
end

function debug_dump(verbose, skip_char_dump)
  local msg = ""
  if dump_persistent_data then msg = msg .. dump_persistent_data() end
  if dump_cache then msg = msg .. dump_cache() end
  if verbose then
    msg = msg .. dump_inventory()
    msg = msg .. dump_chk_lua_save()
  end

  crawl.mpr(with_color("white", msg))

  if not skip_char_dump then
    crawl.take_note(msg)
    crawl.dump_char()
  end
end

}
############################### End lua/core/util.lua ###############################
##########################################################################################

## (Resuming init.txt) ##

### Lua feature files ###

################################### Begin lua/features/after-shaft.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
function init_after_shaft()
  if CONFIG.debug_init then crawl.mpr("Initializing after-shaft") end

  create_persistent_data("as_shaft_depth", 0)
  create_persistent_data("as_shaft_branch", "NA")

  if CACHE.turn == 0 and CACHE.class == "Delver" then
    as_shaft_depth = 1
    as_shaft_branch = CACHE.branch
  end

  if as_shaft_depth ~= 0 then
    crawl.setopt("explore_stop += stairs")
  else
    crawl.setopt("explore_stop -= stairs")
  end
end

------------------- Hooks -------------------
function c_message_after_shaft(text, channel)
  if as_shaft_depth ~= 0 or channel ~= "plain" then return end
  if text:find("You fall into a shaft") or text:find("You are sucked into a shaft") then
    as_shaft_depth = CACHE.depth
    as_shaft_branch = CACHE.branch
    crawl.setopt("explore_stop += stairs")
  end
end

function ready_after_shaft()
  if CACHE.depth == as_shaft_depth and CACHE.branch == as_shaft_branch then
    crawl.setopt("explore_stop -= stairs")
    as_shaft_depth = 0
    as_shaft_branch = "NA"
  end
end

}
############################### End lua/features/after-shaft.lua ###############################
##########################################################################################

################################### Begin lua/features/announce-damage.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
----- Announce changes in HP/MP; modified from https://github.com/magus/dcss -----
local prev

local function create_meter(perc, full, part, empty, border)
  local decade = math.floor(perc / 10)
  local full_count = math.floor(decade / 2)
  local part_count = decade % 2
  local empty_count = 5 - full_count - part_count

  local tokens = {}
  if border then tokens[1] = border end
  for i = 1, full_count do tokens[#tokens + 1] = full end
  for i = 1, part_count do tokens[#tokens + 1] = part end
  for i = 1, empty_count do tokens[#tokens + 1] = empty end
  if border then tokens[#tokens + 1] = border end
  return table.concat(tokens)
end

local function format_delta(delta)
  if delta > 0 then
    return with_color(COLORS.green, "+"..delta)
  elseif delta < 0 then
    return with_color(COLORS.red, delta)
  else
    return with_color(COLORS.darkgrey, delta)
  end
end

local function format_ratio(cur, max)
  local color
  if cur <= (max * 0.25) then
    color = COLORS.lightred
  elseif cur <= (max * 0.50) then
    color = COLORS.red
  elseif cur <= (max *  0.75) then
    color = COLORS.yellow
  elseif cur < max then
    color = COLORS.white
  else
    color = COLORS.green
  end
  return with_color(color, string.format(" -> %s/%s", cur, max))
end



function init_announce_damage()
  if CONFIG.debug_init then crawl.mpr("Initializing announce-damage") end
  prev = {}
  prev.hp = 0
  prev.mhp = 0
  prev.mp = 0
  prev.mmp = 0
end


------------------- Hooks -------------------
function ready_announce_damage()
  -- Skip message on initializing game
  if prev.hp > 0 then
    local hp_delta = CACHE.hp - prev.hp
    local mhp_delta = CACHE.mhp - prev.mhp
    local damage_taken = mhp_delta -hp_delta
    local mp_delta = CACHE.mp - prev.mp
    local mmp_delta = CACHE.mmp - prev.mmp

    local msg_tokens = {}

    -- MP message
    if math.abs(mp_delta) > CONFIG.announce_mp_threshold then
      msg_tokens[#msg_tokens + 1] = create_meter(
        CACHE.mp / CACHE.mmp * 100, EMOJI.MP_FULL_PIP, EMOJI.MP_PART_PIP, EMOJI.MP_EMPTY_PIP, EMOJI.MP_BORDER
      )
      msg_tokens[#msg_tokens + 1] = with_color(COLORS.lightcyan, string.format(" MP[%s]", format_delta(mp_delta)))
      msg_tokens[#msg_tokens + 1] = format_ratio(CACHE.mp, CACHE.mmp)
      if mmp_delta ~= 0 then
        msg_tokens[#msg_tokens + 1] = with_color(COLORS.cyan, string.format(" (%s max MP)", format_delta(mmp_delta)))
      end
      if CACHE.mp == CACHE.mmp then
        msg_tokens[#msg_tokens + 1] = with_color(COLORS.lightcyan, " (Full MP)")
      end
    end

    -- HP message
    if math.abs(hp_delta) > CONFIG.announce_hp_threshold then
      msg_tokens[#msg_tokens + 1] = "\n"

      msg_tokens[#msg_tokens + 1] = create_meter(
        CACHE.hp / CACHE.mhp * 100, EMOJI.HP_FULL_PIP, EMOJI.HP_PART_PIP, EMOJI.HP_EMPTY_PIP, EMOJI.HP_BORDER
      )
      msg_tokens[#msg_tokens + 1] = with_color(COLORS.white, string.format(" HP[%s]", format_delta(hp_delta)))
      msg_tokens[#msg_tokens + 1] = format_ratio(CACHE.hp, CACHE.mhp)
      if mhp_delta ~= 0 then
        msg_tokens[#msg_tokens + 1] = with_color(COLORS.lightgrey, string.format(" (%s max HP)", format_delta(mhp_delta)))
      end
      if CACHE.hp == CACHE.mhp then
        msg_tokens[#msg_tokens + 1] = with_color(COLORS.white, " (Full HP)")
      end
    end

    if #msg_tokens > 0 then enqueue_mpr(table.concat(msg_tokens)) end
    
    -- Damage-related warnings
    if (damage_taken >= CACHE.mhp * CONFIG.dmg_flash_threshold) then
      local summary_tokens = {}
      local is_force_more_msg = damage_taken >= (CACHE.mhp * CONFIG.dmg_fm_threshold)
      if is_force_more_msg then
        summary_tokens[#summary_tokens + 1] = EMOJI.EXCLAMATION_2
        summary_tokens[#summary_tokens + 1] = with_color(COLORS.lightmagenta, " MASSIVE DAMAGE ")
        summary_tokens[#summary_tokens + 1] = EMOJI.EXCLAMATION_2
      else
        summary_tokens[#summary_tokens + 1] = EMOJI.EXCLAMATION
        summary_tokens[#summary_tokens + 1] = with_color(COLORS.magenta, " BIG DAMAGE ")
        summary_tokens[#summary_tokens + 1] = EMOJI.EXCLAMATION
      end
      enqueue_mpr_opt_more(is_force_more_msg, table.concat(summary_tokens))
    end
  end

  prev.hp = CACHE.hp
  prev.mhp = CACHE.mhp
  prev.mp = CACHE.mp
  prev.mmp = CACHE.mmp
end

}
############################### End lua/features/announce-damage.lua ###############################
##########################################################################################

################################### Begin lua/features/color-inscribe.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Colorize inscriptions --
-- Long inscriptions can break certain menus. In-game inscriptions seem limited to 78 chars.
-- If INSCRIPTION_MAX_LENGTH is exceeded, ending tags are removed. A final tag is added to resume writing in lightgrey.

local INSCRIPTION_MAX_LENGTH = 70
local MULTI_PLUS = "%++"
local MULTI_MINUS = "%-+"
local NEG_NUM = "%-%d+%.?%d*"
local POS_NUM = "%+%d+%.?%d*"
local COLORIZE_TAGS = {
  { "rF" .. MULTI_PLUS, COLORS.lightred },
  { "rC" .. MULTI_PLUS, COLORS.lightblue },
  { "rN" .. MULTI_PLUS, COLORS.lightmagenta },
  { "rF" .. MULTI_MINUS, COLORS.red },
  { "rC" .. MULTI_MINUS, COLORS.blue },
  { "rN" .. MULTI_MINUS, COLORS.magenta },
  { "rPois", COLORS.green },
  { "rElec", COLORS.lightcyan },
  { "rCorr", COLORS.yellow },
  { "rMut", COLORS.brown },
  { "Slay" .. POS_NUM, COLORS.white},
  {  "Str" .. POS_NUM, COLORS.white },
  {  "Dex" .. POS_NUM, COLORS.white },
  {  "Int" .. POS_NUM, COLORS.white },
  {   "AC" .. POS_NUM, COLORS.white },
  {   "EV" .. POS_NUM, COLORS.white },
  {   "SH" .. POS_NUM, COLORS.white },
  {   "HP" .. POS_NUM, COLORS.white },
  {   "MP" .. POS_NUM, COLORS.white },
  { "Slay" .. NEG_NUM, COLORS.darkgrey },
  {  "Str" .. NEG_NUM, COLORS.darkgrey },
  {  "Dex" .. NEG_NUM, COLORS.darkgrey },
  {  "Int" .. NEG_NUM, COLORS.darkgrey },
  {   "AC" .. NEG_NUM, COLORS.darkgrey },
  {   "EV" .. NEG_NUM, COLORS.darkgrey },
  {   "SH" .. NEG_NUM, COLORS.darkgrey },
  {   "HP" .. NEG_NUM, COLORS.darkgrey },
  {   "MP" .. NEG_NUM, COLORS.darkgrey },
} --COLORIZE_TAGS (do not remove this comment)


local function colorize_subtext(text, s, tag)
  local idx = text:find(s)
  if not idx then return text end
  if idx > 1 then
    -- Avoid '!r' or an existing color tag
    local prev = text:sub(idx-1, idx-1)
    if prev == "!" or prev == ">" then return text end
  end

  local retval = text:gsub("(" .. s .. ")", "<" .. tag .. ">%1</" .. tag .. ">")
  return retval
end


------------------- Hooks -------------------
function c_assign_invletter_color_inscribe(it)
  -- If enabled, call out to inscribe stats before coloring
  if ready_inscribe_stats then ready_inscribe_stats() end

  local text = it.inscription
  for _, tag in ipairs(COLORIZE_TAGS) do
    text = colorize_subtext(text, tag[1], tag[2])
  end

  if text:len() > INSCRIPTION_MAX_LENGTH then
    text = text:gsub("<.*>", "") .. "<7>"
  end
  it.inscribe(text, false)
end

-- To colorize more, need a way to:
  -- intercept messages before they're displayed (or delete and re-insert)
  -- insert tags that affect menus
  -- colorize artefact text
-- function c_message_color_inscribe(text, _)
--   local orig_text = text
--   text = colorize_subtext(text)
--   if text == orig_text then return end

--   local cleaned = cleanup_text(text)
--   if cleaned:sub(2, 4) == " - " then
--     text = " " .. text
--   end

--   crawl.mpr(text)
-- end

}
############################### End lua/features/color-inscribe.lua ###############################
##########################################################################################

################################### Begin lua/features/drop-inferior.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
------- Auto-tag inferior items and add to drop list -----
local DROP_KEY = "~~DROP_ME"

local function inscribe_drop(it)
  local new_inscr = it.inscription:gsub(DROP_KEY, "") .. DROP_KEY
  it.inscribe(new_inscr, false)
end


function init_drop_inferior()
  if CONFIG.debug_init then crawl.mpr("Initializing drop-inferior") end

  crawl.setopt("drop_filter += " .. DROP_KEY)
end


------------------ Hooks ------------------
function c_assign_invletter_drop_inferior(it)
  -- Remove any previous DROP_KEY inscriptions
  it.inscribe(it.inscription:gsub(DROP_KEY, ""), false)

  if not (is_weapon(it) or is_armour(it)) then return end
  if has_risky_ego(it) then return end

  for inv in iter.invent_iterator:new(items.inventory()) do
    if not inv.artefact and inv.subtype() == it.subtype() and
      (not has_ego(inv) or get_ego(inv) == get_ego(it)) then
        if is_weapon(it) then
          if inv.plus <= it.plus then inscribe_drop(inv) end
        else
          if get_armour_ac(inv) <= get_armour_ac(it) then inscribe_drop(inv) end
        end
    end
  end
end

}
############################### End lua/features/drop-inferior.lua ###############################
##########################################################################################

################################### Begin lua/features/dynamic-options.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
----- Set any options based on game state -----
local EARLY_XL = 5
local MID_XL = 10
local LATE_XL = 15

local EARLY_XL_FMs = {
} -- EARLY_XL_FMs (do not remove this comment)

local MID_XL_FMs = {
  "wielding.*of electrocution",
  "You.*re more poisoned"
} -- MID_XL_FMs (do not remove this comment)

local LATE_XL_FMs = {
  "^(?!.*Your?).*speeds? up",
  "danger:goes berserk"
} -- LATE_XL_FMs (do not remove this comment)

local IGNORE_SPELLBOOKS_STRING = table.concat(ALL_SPELLBOOKS, ", ")
local SPELLCASTING_ITEMS_STRING = "scrolls? of amnesia, potions? of brilliance, ring of wizardry"

local dynopt_cur_god
local ignoring_spellcasting
local ignoring_spellbooks
local early_xl_alerts_on
local mid_xl_alerts_on
local late_xl_alerts_on

local function set_dyn_fm(warnings, create)
  for _, v in ipairs(warnings) do
    if create then
      crawl.setopt("force_more_message += " .. v)
    else
      crawl.setopt("force_more_message -= " .. v)
    end
  end
end

local function set_class_options()
  if CACHE.class == "Hunter" then
    crawl.setopt("view_delay = 30")
  end
end

-- Some god-specific force_mores also in fm-message.rc
local function set_god_options()
  local new_god = CACHE.god
  if new_god ~= dynopt_cur_god then
    if dynopt_cur_god == "No God" then
      crawl.setopt("force_more_message -= Found.*the Ecumenical Temple")
      crawl.setopt("flash_screen_message += Found.*the Ecumenical Temple")
      crawl.setopt("runrest_stop_message += Found.*the Ecumenical Temple")
    elseif new_god == "Beogh" then
      crawl.setopt("runrest_ignore_message += no longer looks.*")
      crawl.setopt("force_more_message += Your orc.*dies")
    elseif new_god == "Jiyva" then
      crawl.setopt("force_more_message += god:splits in two")
      crawl.setopt("force_more_message += god:Your prayer is over.")
      crawl.setopt("message_colour ^= mute:You hear a.*(slurping|squelching) noise")
    elseif new_god == "Qazlal" then
      crawl.setopt("force_more_message -= god:You feel.*protected")
    elseif new_god == "Xom" then
      crawl.setopt("force_more_message += god:")
    end

    dynopt_cur_god = new_god
  end
end

local function set_race_options()
  if CACHE.undead then
    crawl.setopt("force_more_message += monster_warning:wielding.*of holy wrath")
  end

  if CACHE.poison_immune then
    crawl.setopt("force_more_message -= monster_warning:curare")
  end

  if CACHE.race == "Gnoll" then
    crawl.setopt("message_colour ^= mute:intrinsic_gain:skill increases to level")
  end
end

local function set_xl_options()
  if not early_xl_alerts_on and CACHE.xl <= EARLY_XL then
    early_xl_alerts_on = true
    set_dyn_fm(EARLY_XL_FMs, true)
  elseif early_xl_alerts_on and CACHE.xl > EARLY_XL then
    early_xl_alerts_on = false
    set_dyn_fm(EARLY_XL_FMs, false)
  end

  if not mid_xl_alerts_on and CACHE.xl <= MID_XL then
    mid_xl_alerts_on = true
    set_dyn_fm(MID_XL_FMs, true)
  elseif mid_xl_alerts_on and CACHE.xl > MID_XL then
    mid_xl_alerts_on = false
    set_dyn_fm(MID_XL_FMs, false)
  end

  if not late_xl_alerts_on and CACHE.xl <= LATE_XL then
    late_xl_alerts_on = true
    set_dyn_fm(LATE_XL_FMs, true)
  elseif not late_xl_alerts_on and CACHE.xl > LATE_XL then
    late_xl_alerts_on = false
    set_dyn_fm(LATE_XL_FMs, false)
  end
end

local function set_skill_options()
  -- If zero spellcasting, don't stop on spellbook pickup
  local zero_spellcasting = CACHE.s_spellcasting == 0
  if not ignoring_spellbooks and zero_spellcasting then
    ignoring_spellbooks = true
    crawl.setopt("explore_stop_pickup_ignore += " .. IGNORE_SPELLBOOKS_STRING)
  elseif ignoring_spellbooks and not zero_spellcasting then
    ignoring_spellbooks = false
    crawl.setopt("explore_stop_pickup_ignore -= " .. IGNORE_SPELLBOOKS_STRING)
  end

  -- If heavy armour and low armour skill, ignore spellcasting items
  if CACHE.race ~= "Mountain Dwarf" then
    local worn = items.equipped_at("armour")
    local heavy_arm = worn ~= nil and worn.encumbrance > 4 + CACHE.s_armour/2
    local skip_items = zero_spellcasting and heavy_arm
    if not ignoring_spellcasting and skip_items then
      ignoring_spellcasting = true
      crawl.setopt("autopickup_exceptions += " .. SPELLCASTING_ITEMS_STRING)
    elseif ignoring_spellcasting and not skip_items then
      ignoring_spellcasting = false
      crawl.setopt("autopickup_exceptions -= " .. SPELLCASTING_ITEMS_STRING)
    end
  end
end


function init_dynamic_options()
  if CONFIG.debug_init then crawl.mpr("Initializing dynamic-options") end

  dynopt_cur_god = "No God"
  ignoring_spellcasting = false
  ignoring_spellbooks = false
  early_xl_alerts_on = false
  mid_xl_alerts_on = false
  late_xl_alerts_on = false

  set_race_options()
  set_class_options()
  set_god_options()
end


------------------ Hooks ------------------
function ready_dynamic_options()
  set_god_options()
  set_xl_options()
  set_skill_options()
end

}
############################### End lua/features/dynamic-options.lua ###############################
##########################################################################################

################################### Begin lua/features/exclude-dropped.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Add autopickup exclusion for any jewellery/missile/evocable/consumable that is dropped
-- Exclusion is removed when you pick the item back up
-- Exclude enchant/brand weapon only when no enchantable weapons are in inventory
local function add_exclusion(item_name)
  if not util.contains(dropped_item_exclusions, item_name) then
    dropped_item_exclusions[#dropped_item_exclusions + 1] = item_name
  end
  local command = "autopickup_exceptions ^= " .. item_name
  crawl.setopt(command)
end

local function remove_exclusion(item_name)
  util.remove(dropped_item_exclusions, item_name)
  local command = "autopickup_exceptions -= " .. item_name
  crawl.setopt(command)
end

local function has_enchantable_weap_in_inv()
  for inv in iter.invent_iterator:new(items.inventory()) do
    if is_weapon(inv) and inv.plus < 9 and (not inv.artefact or CACHE.race == "Mountain Dwarf") then
      return true
    end
  end
  return false
end

-- Pulls name from text; returns nil if we should NOT exclude anything
local function get_excludable_name(text, for_exclusion)
  text = cleanup_text(text, false) -- remove tags
  text = text:gsub("{.*}", "")
  text = text:gsub("[.]", "")
  text = text:gsub("%(.*%)", "")
  text = util.trim(text)

  -- jewellery and wands
  local idx = text:find("ring of") or text:find("amulet of") or text:find("wand of")
  if idx then
    return text:sub(idx, #text)
  end

  -- misc items
  for _,item_name in ipairs(ALL_MISC_ITEMS) do
    if text:find(item_name) then return item_name end
  end

  -- Missiles; add regex to hit specific missiles
  for _,item_name in ipairs(ALL_MISSILES) do
    if text:find(item_name) then
      return item_name
    end
  end

  -- Potions
  idx = text:find("potions? of")
  if idx then
    return "potions? of " .. util.trim(text:sub(idx+10,#text))
  end

  -- Scrolls; Enchant scrolls are special; not always excluded
  idx = text:find("scrolls? of")
  if idx then
    -- Enchant/Brand weapon scrolls continue pickup if they're still useful
    if for_exclusion and not CONFIG.exclude_stashed_enchant_scrolls
    and (text:find("enchant weapon") or text:find("brand weapon"))
    and has_enchantable_weap_in_inv() then
      return
    end
    return "scrolls? of " .. util.trim(text:sub(idx+10,#text))
  end
end


function init_exclude_dropped()
  if CONFIG.debug_init then crawl.mpr("Initializing exclude-dropped") end

  create_persistent_data("dropped_item_exclusions", {})

  for _,v in ipairs(dropped_item_exclusions) do
    add_exclusion(v)
  end
end


------------------ Hooks ------------------
function c_message_exclude_dropped(text, channel)
  if channel ~= "plain" then return end
  local exclude
  if text:find("You drop ") then exclude = true
  elseif text:find(" %- ") then exclude = false
  else return end

  local item_name = get_excludable_name(text, exclude)
  if not item_name then return end

  if exclude then
    -- Don't exclude if we dropped partial stack (except for jewellery)
    for inv in iter.invent_iterator:new(items.inventory()) do
      if inv.name("qual"):find(item_name) then
        if is_jewellery(inv) then break end
        local qty_str = "You drop " .. inv.quantity .. " " .. item_name
        if inv.quantity == 1 or text:find(qty_str) then break end
        return
      end
    end

    add_exclusion(item_name)
  else
    remove_exclusion(item_name)
  end
end

}
############################### End lua/features/exclude-dropped.lua ###############################
##########################################################################################

################################### Begin lua/features/fully-recover.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
----- Fully rest off negative statuses -----

local STATUSES_TO_WAIT_OFF = { "berserk", "short of breath", "corroded", "vulnerable",
    "confused", "marked", "tree%-form", "sluggish" } -- "slowed" is a special case below

local recovery_start_turn
local explore_after_recovery

local function abort_fully_recover()
  recovery_start_turn = 0
  crawl.setopt("message_colour -= mute:You start waiting.")
  explore_after_recovery = false
  you.stop_activity()
end

local function finish_fully_recover()
  local turns = you.turns() - recovery_start_turn
  local msg = with_color(COLORS.lightgreen, "Fully recovered") .. string.format(" (%d turns)", turns)
  crawl.mpr(msg)
  
  recovery_start_turn = 0
  crawl.setopt("message_colour -= mute:You start waiting.")
  you.stop_activity()

  if explore_after_recovery then
    explore_after_recovery = false
    crawl.sendkeys("o")
  end
end

local function fully_recovered()
  if CACHE.hp ~= CACHE.mhp then return false end
  if CACHE.mp ~= CACHE.mmp then return false end

  -- Statuses that will always rest off
  local status = you.status()

  for _,s in ipairs(STATUSES_TO_WAIT_OFF) do
    if status:find(s) then return false end
  end

  -- If stat drain, don't wait for slow
  if status:find("slowed") then
    return CACHE.str <= 0 or CACHE.dex <= 0 or CACHE.int <= 0
  end

  return true
end

local function start_fully_recover()
  recovery_start_turn = CACHE.turn
  crawl.setopt("message_colour += mute:You start waiting.")
end


function init_fully_recover()
  if CONFIG.debug_init then crawl.mpr("Initializing fully-recover") end

  recovery_start_turn = 0
  explore_after_recovery = false
  
  crawl.setopt("runrest_ignore_message += recovery:.*")
  crawl.setopt("runrest_ignore_message += duration:.*")
  crawl.setopt("macros += M o ===macro_explore_fully_recover")
end

-- Attach full recovery to auto-explore
function macro_explore_fully_recover()
  if fully_recovered() then
    crawl.do_commands({"CMD_EXPLORE"})
  else
    explore_after_recovery = true
    crawl.do_commands({"CMD_REST"})
  end
end


------------------- Hooks -------------------
function c_message_fully_recover(text, channel)
  if channel == "plain" then
    if text:find("You start waiting") or text:find("You start resting") then
      if not fully_recovered() then start_fully_recover() end
    end
  elseif recovery_start_turn > 0 then
    if channel == "timed_portal" then abort_fully_recover()
    elseif fully_recovered() then finish_fully_recover()
    end
  end
end

function ch_stop_running_fully_recover(kind)
  if kind == "run" and not fully_recovered() then start_fully_recover() end
end

function ready_fully_recover()
  if recovery_start_turn > 0 then
    if fully_recovered() then finish_fully_recover()
    elseif not you.feel_safe() then abort_fully_recover()
    else crawl.do_commands({"CMD_SAFE_WAIT"})
    end
  else
    explore_after_recovery = false
  end
end

}
############################### End lua/features/fully-recover.lua ###############################
##########################################################################################

################################### Begin lua/features/fm-disable.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- Disable built-in force_mores that can't just be -='d
local FM_DISABLES = {
  "You kneel at the altar",
  "need to enable at least one skill for training",
  "Okawaru grants you throwing weapons",
  "Okawaru offers you a choice",
} -- FM_DISABLES (do not remove this comment)

function c_message_fm_disable(text, _)
  for _,v in ipairs(FM_DISABLES) do
    if text:find(v) then
      crawl.enable_more(false)
      return
    end
  end

  crawl.enable_more(true)
end

}
############################### End lua/features/fm-disable.lua ###############################
##########################################################################################

################################### Begin lua/features/fm-monsters.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
------------------- Dynamic force_mores config -------------------
-- hp-specific force_mores() by gammafunk, extended by buehler
-- WARNING: Never put a '}' on a line by itself. This breaks crawl's RC parser.
-- Note: If you want an alert to be silenced by the fm_pack feature,
-- it must be on an alert by itself (not part of a multi-monster pattern)

-- Always screen flash
local ALWAYS_FLASH_SCREEN_MONSTERS = {
  -- Noteworthy abilities
  "vault warden", "vault guardian", "ghost crab"
} -- always_flash_screen_monsters (do not remove this comment)

-- Always more prompt
local ALWAYS_FORCE_MORE_MONSTERS = {
  -- High damage/speed
    "juggernaut", "orbs? of fire", "flayed ghost",
  -- Torment
    "tormentor", "curse (toe|skull)", "Fiend", "tzitzimi", "royal mummy",
    "mummy priest", "(dread|ancient) lich", "lurking horror",
  --Summoning
    "shadow demon", "guardian serpent", "ironbound convoker",
    "draconian stormcaller", "spriggan druid", "dryad", "worldbinder",
    "halazid warlock", "deep elf elementalist", "demonspawn corrupter",
    "elemental wellspring",
  --Dangerous abilities
    "swamp worm", "air elemental", "wendingo", "wyrmhole",
    "torpor snail", "water nymph", "shambling mangrove", "iron giant",
    "starflower", "merfolk aquamancer", "deep elf knight", "wretched star",
  --Dangerous clouds
    "catoblepas", "death drake", "apocalypse crab", "putrid mouth",
} -- always_force_more_monsters (do not remove this comment)

-- Only alert once per pack
local FM_PACK = {
  "dream sheep", "shrike", "boggart", "floating eye"
} -- fm_pack (do not remove this comment)

-- Once per pack, but alerts created through dynamic adds
local FM_PACK_NO_CREATE = {
  "electric eel", "golden eye", "great orb of eyes"
} -- FM_PACK_NO_CREATE (do not remove this comment)


local FM_PATTERNS = {
  -- Early game Dungeon problems for chars with low mhp. (adder defined below)
  {name = "30hp", cond = "hp", cutoff = 30,
      pattern = "hound|gnoll"},

  -- Monsters dangerous until a certain point
  {name = "xl_7", cond = "xl", cutoff = 7,
      pattern = "orc wizard"},
  {name = "xl_12", cond = "xl", cutoff = 12,
      pattern = "hydra|bloated husk"},

  -- Monsters that can hit for ~50% of hp from range with unbranded attacks
  {name = "40hp", cond = "hp", cutoff = 40,
      pattern = "orc priest" },
  {name = "50hp", cond = "hp", cutoff = 50,
      pattern = "orc high priest|manticore" },
  {name = "70hp", cond = "hp", cutoff = 70,
      pattern = "yaktaur(?! captain)|cyclops|centaur(?! warrior)" },
  {name = "70hp_melai", cond = "hp", cutoff = 70,
      pattern = "meliai"},
  {name = "80hp", cond = "hp", cutoff = 80,
      pattern = "gargoyle" },
  {name = "90hp", cond = "hp", cutoff = 90,
      pattern = "deep elf archer|tengu conjurer" },
  {name = "110hp", cond = "hp", cutoff = 110,
      pattern = "centaur warrior|yaktaur captain|hellion|eye of devastation|sun moth" ..
                  "deep elf high priest|deep troll earth mage|stone giant|cacodemon" },
  {name = "120hp", cond = "hp", cutoff = 120,
      pattern = "quicksilver (dragon|elemental)|magenta draconian|thorn hunter" },
  {name = "160hp", cond = "hp", cutoff = 160,
      pattern = "brimstone fiend|deep elf sorcerer" ..
              "hell sentinal|war gargoyle|draconian (knight|scorcher)" },
  {name = "200hp", cond = "hp", cutoff = 200,
      pattern = "(draconian|deep elf) annihilator|iron (dragon|elemental)" },

  -- Monsters that can crowd-control you without sufficient willpower
  -- Cutoff ~10% for most spells; lower for more significant spells like banish
  {name = "willpower2", cond = "will", cutoff = 2,
      pattern = "basilisk|naga ritualist|vampire(?! (bat|mage|mosquito))|sphinx marauder" },
  {name = "willpower3", cond = "will", cutoff = 3,
      pattern = "deep elf (demonologist|sorcerer|archer)|occultist|" ..
              "merfolk siren|fenstrider witch|cacodemon|" ..
              "imperial myrmidon|guardian sphinx|nagaraja|draconian shifter|" ..
              "glowing orange brain|orc sorcerer|" ..
              "ogre mage|satyr|vault sentinel|iron elemental|" ..
              "death knight|vampire knight" },
  {name = "willpower3_great_orb_of_eyes", cond = "will", cutoff = 3,
      pattern = "great orb of eyes" },
  {name = "willpower3_golden_eye", cond = "will", cutoff = 3,
      pattern = "golden eye" },
  {name = "willpower4", cond = "will", cutoff = 4,
      pattern = "merfolk avatar|tainted leviathan|nargun" },

  -- Malmutate without rMut
  {name = "malmutate", cond = "mut", cutoff = 1,
      pattern = "cacodemon|neqoxec|shining eye" },
  -- Brain feed with low int
  {name = "brainfeed", cond = "int", cutoff = 6,
      pattern = "glowing orange brain|neqoxec" },

  -- Alert if no resist and HP below cutoff
  {name = "pois_30", cond = "pois", cutoff = 30,
      pattern = "adder"},
  {name = "pois_80", cond = "pois", cutoff = 80,
      pattern = "golden dragon|green draconian|swamp dragon" },
  {name = "pois_120", cond = "pois", cutoff = 120,
      pattern = "green death|naga mage|nagaraja|fenstrider witch" },
  {name = "pois_140", cond = "pois", cutoff = 140,
      pattern = "tengu reaver" },

  {name = "elec_40", cond = "elec", cutoff = 40,
      pattern = "electric eel" },
  {name = "elec_80", cond = "elec", cutoff = 80,
      pattern = "shock serpent|raiju|spark wasp" },
  {name = "elec_120", cond = "elec", cutoff = 120,
      pattern = "black draconian|blizzard demon|deep elf zephyrmancer|" ..
                "storm dragon|tengu conjurer" },
  {name = "elec_140", cond = "elec", cutoff = 140,
      pattern = "electric golem|titan|servants? of whisper|spriggan air mage|" ..
                "ball lightning|tengu reaver" },

  {name = "corr_60", cond = "corr", cutoff = 60,
      pattern = "acid dragon" },
  {name = "corr_140", cond = "corr", cutoff = 140,
      pattern = "tengu reaver|entropy weaver|demonspawn corrupter|moon troll" },

  {name = "fire_60", cond = "fire", cutoff = 60,
      pattern = "steam dragon|lindwurm|fire crab|lava snake" },
  {name = "fire_100", cond = "fire", cutoff = 100,
      pattern = "efreet|deep elf pyromancer|smoke demon|sun moth" },
  {name = "fire_120", cond = "fire", cutoff = 120,
      pattern = "orc sorcerer|hell hound|demonspawn blood saint|red draconian|" ..
                "ogre mage|molten gargoyle|hell knight" },
  {name = "fire_140", cond = "fire", cutoff = 140,
      pattern = "balrug" },
  {name = "fire_160", cond = "fire", cutoff = 160,
      pattern = "will-o-the-wisp|ophan|fire giant|golden dragon|" ..
                "fire dragon|salamander tyrant|tengu reaver" },
  {name = "fire_240", cond = "fire", cutoff = 240,
      pattern = "hellephant|crystal (guardian|echidna)|draconian scorcher" },

  {name = "cold_80", cond = "cold", cutoff = 80,
      pattern = "rime drake" },
  {name = "cold_120", cond = "cold", cutoff = 120,
      pattern = "blizzard demon|bog body|ironbound frostheart|" ..
                "demonspawn blood saint|white draconian" },
  {name = "cold_160", cond = "cold", cutoff = 160,
      pattern = "golden dragon|draconian knight|frost giant|ice dragon|tengu reaver" },
  {name = "cold_180", cond = "cold", cutoff = 180,
      pattern = "(?<!dread)(?<!ancient) lich" },
  {name = "cold_240", cond = "cold", cutoff = 240,
      pattern = "crystal (guardian|echidna)" },

  {name = "drain_100", cond = "drain", cutoff = 100,
      pattern = "orc sorcerer" },
  {name = "drain_120", cond = "drain", cutoff = 120,
      pattern = "necromancer" },
  {name = "drain_150", cond = "drain", cutoff = 150,
      pattern = "revenant|demonspawn blood saint" },
  {name = "drain_190", cond = "drain", cutoff = 190,
      pattern = "shadow dragon" },
} -- end fm_patterns (do not remove this comment)
------------------- End config section -------------------

local active_fm -- which ones are on
local active_fm_index -- lookup table for speed
local monsters_to_mute -- which packs are muted
local last_fm_turn -- when the mute started

-- Util for checking against resistance and hp
local function get_three_pip_action(active, hp, cutoff, res)
  local div = res+1
  if div == 4 then div = 5 end

  if active then
    if hp >= cutoff/div then return "-" end
  else
    if hp < cutoff/div then return "+" end
  end
end

local function set_monster_option(sign, monster_str, option)
  local fm_str = "monster_warning:(?<!spectral )(" .. monster_str ..
      ")(?! (zombie|skeleton|simulacrum)).*comes? into view"
  crawl.setopt(option .. " " .. sign .. "= " .. fm_str)
end

local function set_all(monster_list, option)
  local mon_str = nil
  for _, v in ipairs(monster_list) do
    if not mon_str then
      mon_str = v
    else
      mon_str = mon_str .. "|" .. v
    end
  end
  set_monster_option("+", mon_str, option)
end

local function set_monster_flash(sign, monster_str)
  set_monster_option(sign, monster_str, "flash_screen_message")
end

local function set_monster_fm(sign, monster_str)
  set_monster_option(sign, monster_str, "force_more_message")
end

local function do_pack_mutes()
  -- Put pending mutes into effect
  for _, v in ipairs(monsters_to_mute) do
    set_monster_fm("-", v)
  end
  monsters_to_mute = {}

  -- Remove mutes that have expired
  for _, v in ipairs(FM_PACK) do
    if CACHE.turn == last_fm_turn[v] + CONFIG.fm_pack_duration then
      set_monster_fm("+", v)
      last_fm_turn[v] = -1
    end
  end

  -- For no-init pack monsters, just deactivate the fm
  for _, v in ipairs(FM_PACK_NO_CREATE) do
    if CACHE.turn == last_fm_turn[v] + CONFIG.fm_pack_duration then
      active_fm[active_fm_index[v]] = false
      last_fm_turn[v] = -1
    end
  end
end


function init_fm_monsters()
  if CONFIG.debug_init then crawl.mpr("Initializing fm-monsters") end

  active_fm = {}
  active_fm_index = {}
  monsters_to_mute = {}
  last_fm_turn = {}


  -- Stop on all Uniques & Pan lords
  crawl.setopt("force_more_message += monster_warning:(?-i:[A-Z]).*comes? into view")


  set_all(ALWAYS_FLASH_SCREEN_MONSTERS, "flash_screen_message")
  set_all(ALWAYS_FORCE_MORE_MONSTERS, "force_more_message")

  -- Init packs
  for _, v in ipairs(FM_PACK) do
    set_monster_fm("+", v)
    last_fm_turn[v] = -1
  end

  for _,v in ipairs(FM_PACK_NO_CREATE) do
    FM_PACK[#FM_PACK+1] = v
    last_fm_turn[v] = -1
  end

  -- Build table of indexes, used for fm_pack logic
  for i,v in ipairs(FM_PATTERNS) do
    if not v.pattern:find("|") then
      active_fm_index[v.pattern] = i
    end
  end

  -- Init all active_fm to false
  for _,_ in ipairs(FM_PATTERNS) do
    active_fm[#active_fm+1] = false
  end
end


------------------- Hooks -------------------
function c_message_fm_pack(text, channel)
  if channel ~= "monster_warning" then return end
  if CONFIG.fm_pack_duration == 0 then return end
  
  -- Identifies when a mute should be turned on
  if not text:find("comes? into view") then return end
  for _, v in ipairs(FM_PACK) do
    if text:find(v) and last_fm_turn[v] == -1 then
      last_fm_turn[v] = CACHE.turn
      monsters_to_mute[#monsters_to_mute+1] = v
    end
  end
end

function ready_fm_monsters()
  local activated = {}
  local deactivated = {}

  local hp = CACHE.hp
  local maxhp = CACHE.mhp
  local willpower = CACHE.will
  local res_mut = CACHE.rMut
  local res_pois = CACHE.rPois
  local res_elec = CACHE.rElec
  local res_corr = CACHE.rCorr
  local res_fire = CACHE.rF
  local res_cold = CACHE.rC
  local res_drain = CACHE.rN
  local int = CACHE.int

  for i,v in ipairs(FM_PATTERNS) do
    local action = nil

    if not v.cond and not active_fm[i] then
      action = "+"
    elseif v.cond == "xl" then
      if active_fm[i] and CACHE.xl >= v.cutoff then action = "-"
      elseif not active_fm[i] and CACHE.xl < v.cutoff then action = "+"
      end
    elseif v.cond == "hp" then
      if active_fm[i] and hp >= v.cutoff then action = "-"
      elseif not active_fm[i] and hp < v.cutoff then action = "+"
      end
    elseif v.cond == "int" then
      if active_fm[i] and int >= v.cutoff then action = "-"
      elseif not active_fm[i] and int < v.cutoff then action = "+"
      end
    elseif v.cond == "will" then
      if active_fm[i] and willpower >= v.cutoff then action = "-"
      elseif not active_fm[i] and willpower < v.cutoff then action = "+"
      end
    elseif v.cond == "mut" then
      if active_fm[i] and res_mut > 0 then action = "-"
      elseif not active_fm[i] and res_mut == 0 then action = "+"
      end
    elseif v.cond == "pois" then
      if active_fm[i] and (res_pois > 0 or hp >= v.cutoff) then action = "-"
      elseif not active_fm[i] and res_pois == 0 and hp < v.cutoff then action = "+"
      end
    elseif v.cond == "elec" then
      if active_fm[i] and (res_elec > 0 or hp >= v.cutoff) then action = "-"
      elseif not active_fm[i] and res_elec == 0 and hp < v.cutoff then action = "+"
      end
    elseif v.cond == "corr" then
      if active_fm[i] and (res_corr or hp >= v.cutoff) then action = "-"
      elseif not active_fm[i] and not res_corr and hp < v.cutoff then action = "+"
      end
    elseif v.cond == "fire" then
      action = get_three_pip_action(active_fm[i], hp, v.cutoff, res_fire)
    elseif v.cond == "cold" then
      action = get_three_pip_action(active_fm[i], hp, v.cutoff, res_cold)
    elseif v.cond == "drain" then
      action = get_three_pip_action(active_fm[i], hp, v.cutoff, res_drain)
    end

    if action then
      fm_mon_str = nil
      local fm_name = v.pattern
      if v.name then fm_name = v.name end

      if type(v.pattern) == "table" then
        for _, p in ipairs(v.pattern) do
          if not fm_mon_str then
            fm_mon_str = p
          else
            fm_mon_str = fm_mon_str .. "|" .. p
          end
        end
      else
        fm_mon_str = v.pattern
      end

      set_monster_fm(action, fm_mon_str)
      active_fm[i] = not active_fm[i]

      if CONFIG.debug_fm_monsters then
        if action == "+" then
          activated[#activated+1] = fm_name
        elseif action == "-" then
          deactivated[#deactivated+1] = fm_name
        end
      end
    end
  end

  if CONFIG.debug_fm_monsters then
    if #activated > 0 then
      crawl.mpr("Activating force_mores: " .. table.concat(activated, ", "))
    end
    if #deactivated > 0 then
      crawl.mpr("Deactivating force_mores: " .. table.concat(deactivated, ", "))
    end
  end

  if CONFIG.fm_pack_duration > 0 then do_pack_mutes() end
end

}
############################### End lua/features/fm-monsters.lua ###############################
##########################################################################################

################################### Begin lua/features/inscribe-stats.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
----- Inscribe stats on items -----

local function inscribe_armour_stats(it)
  -- Will add to the beginning of inscriptions, or replace it's own values
  -- This gsub's stats individually to avoid overwriting <color> tags
  -- NUM_PATTERN searches for numbers w/ decimal, to avoid artefact inscriptions
  local NUM_PATTERN = "[%+%-:]%d+%.%d*"
  local abbr = is_shield(it) and "SH" or "AC"
  local primary, ev = get_armour_info_strings(it)

  local new_insc
  if it.inscription:find(abbr .. NUM_PATTERN) then
    new_insc = it.inscription:gsub(abbr .. NUM_PATTERN, primary)
    if ev and ev ~= "" then
      new_insc = new_insc:gsub("EV" .. NUM_PATTERN, ev)
    end
  else
    new_insc = primary
    if ev and ev ~= "" then
      new_insc = new_insc .. ", " .. ev
    end
    if it.inscription and it.inscription ~= "" then
      new_insc = new_insc .. "; " .. it.inscription
    end
  end

  it.inscribe(new_insc, false)
end

local function inscribe_weapon_stats(it)
  local orig_inscr = it.inscription
  local dps_inscr = get_weapon_info_string(it)
  local prefix, suffix = "", ""

  local idx = orig_inscr:find("DPS:")
  if idx then
    if idx > 1 then prefix = orig_inscr:sub(1, idx-1) .. "; " end
    if idx + #dps_inscr - 1 < #orig_inscr then
      suffix = orig_inscr:sub(idx + #dps_inscr, #orig_inscr)
    end
  elseif #orig_inscr > 0 then
    suffix = "; " .. orig_inscr
  end

  it.inscribe(table.concat({ prefix, dps_inscr, suffix }), false)
end


------------------ Hooks ------------------
function ready_inscribe_stats()
  for inv in iter.invent_iterator:new(items.inventory()) do
    if CONFIG.inscribe_weapons and is_weapon(inv) then
      inscribe_weapon_stats(inv)
    elseif CONFIG.inscribe_armour and is_armour(inv) and not is_scarf(inv) then
      inscribe_armour_stats(inv)
    end
  end
end

}
############################### End lua/features/inscribe-stats.lua ###############################
##########################################################################################

################################### Begin lua/features/misc-alerts.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
local REMOVE_FAITH_MSG = "6 star piety! Maybe ditch that amulet soon."
local below_hp_threshold

local function alert_low_hp()
  if below_hp_threshold then
    below_hp_threshold = CACHE.hp ~= CACHE.mhp
  elseif CACHE.hp <= CONFIG.alert_low_hp_threshold * CACHE.mhp then
    below_hp_threshold = true
    local low_hp_msg = "Dropped below " .. (100*CONFIG.alert_low_hp_threshold) .. "% HP"
    enqueue_mpr_opt_more(true, table.concat({
      EMOJI.EXCLAMATION_2, " ", with_color(COLORS.red, low_hp_msg), " ", EMOJI.EXCLAMATION_2
    }))
  end
end

local function alert_remove_faith()
  if not alerted_max_piety and you.piety_rank() == 6 then
    local am = items.equipped_at("amulet")
    if am and am.subtype() == "amulet of faith" and not am.artefact then
      if CACHE.god == "Uskayaw" then return end
      mpr_with_more(with_color(COLORS.cyan, REMOVE_FAITH_MSG))
      alerted_max_piety = true
    end
  end
end


function init_misc_alerts()
  if CONFIG.debug_init then crawl.mpr("Initializing misc-alerts") end

  below_hp_threshold = false
  create_persistent_data("alerted_max_piety", false)

  if CONFIG.save_with_msg then
    crawl.setopt("macros += M S ===macro_save_with_message")
    if saved_game_msg and saved_game_msg ~= "" then
      crawl.mpr("MESSAGE: " .. saved_game_msg, message_color)
      saved_game_msg = nil
    end
  end
end


----- Save with message -----
-- by gammafunk, edits by buehler
function macro_save_with_message()
  crawl.formatted_mpr("Save game and exit? (y/n)", "prompt")
  local res = crawl.getch()
  if not (string.char(res) == "y" or string.char(res) == "Y") then
    crawl.mpr("Okay, then.")
    return
  end
  crawl.formatted_mpr("Leave a message: ", "prompt")
  saved_game_msg = crawl.c_input_line()
  create_persistent_data("saved_game_msg", saved_game_msg)
  crawl.sendkeys(control_key("s"))
end

------------------ Hooks ------------------
function ready_misc_alerts()
  if CONFIG.alert_remove_faith then alert_remove_faith() end
  if CONFIG.alert_low_hp_threshold > 0 then alert_low_hp() end
end

}
############################### End lua/features/misc-alerts.lua ###############################
##########################################################################################

################################### Begin lua/features/remind-id.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Remind to identify items when you have scroll of ID + unidentified item ----
---- Before finding scroll of ID, stops for potions/scrolls stack size increases ----
local do_remind_id_check

function init_remind_id()
  if CONFIG.debug_init then crawl.mpr("Initializing remind-id") end

  do_remind_id_check = true
  create_persistent_data("found_scroll_of_id", false)
  create_persistent_data("next_stack_size_scrolls", CONFIG.stop_on_scrolls_count)
  create_persistent_data("next_stack_size_pots", CONFIG.stop_on_pots_count)
end


------------------- Hooks -------------------
function c_assign_invletter_remind_identify(it)
  if not it.is_identified or it.name("qual") == "scroll of identify" then
    do_remind_id_check = true
  end
end

function c_message_remind_identify(text, channel)
  if channel ~= "plain" then return end

  if text:find("scrolls? of identify") then
    found_scroll_of_id = true
    if not text:find("ou drop ") then
      do_remind_id_check = true
    end
  elseif not found_scroll_of_id then
    local idx = text:find(" %- ")
    if not idx then return end

    local slot = text:sub(idx - 1, idx - 1)
    local it = items.inslot(items.letter_to_index(slot))

    if it.is_identified then return end
    -- Picking up known items still returns identified == false
    -- Doing some hacky checks below instead

    local it_class = it.class(true)
    if it_class == "scroll" then
      if it.quantity >= next_stack_size_scrolls then
        next_stack_size_scrolls = it.quantity + 1
        you.stop_activity()
      end
    elseif it_class == "potion" then
      if it.quantity >= next_stack_size_pots then
        next_stack_size_pots = it.quantity + 1
        you.stop_activity()
      end
    end
  end
end

function ready_remind_identify()
  if do_remind_id_check then
    do_remind_id_check = false

    local have_unid = false
    local have_scroll = false
    for inv in iter.invent_iterator:new(items.inventory()) do
      if not inv.is_identified then
        have_unid = true
        if have_scroll then break end
      elseif inv.name("qual") == "scroll of identify" then
        have_scroll = true
        if have_unid then break end
      end
    end

    if have_scroll and have_unid then
      crawl.mpr(
        EMOJI.REMIND_IDENTIFY ..
        with_color(COLORS.magenta, " You have something to identify. ") ..
        EMOJI.REMIND_IDENTIFY
      )
      you.stop_activity()
    end
  end
end

}
############################### End lua/features/remind-id.lua ###############################
##########################################################################################

################################### Begin lua/features/runrest-features.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
-- A collection of simple features related to resting and auto-explore stops
local stop_on_altars
local stop_on_portals
local stop_on_pan_gates
local autosearched_temple
local autosearched_gauntlet


---- Gauntlet actions ----
local function ready_gauntlet_macro()
  if CACHE.branch == "Gauntlet" and not autosearched_gauntlet then
    crawl.sendkeys({ 6, "gauntlet && !!leading && !!transporter && !!pieces && !!trap\r" })
    autosearched_gauntlet = true
  end
end

---- Ignore altars ----
local function religion_is_handled()
  if CACHE.race == "Demigod" then return true end
  if CACHE.god == "No God" then return false end
  if you.good_god() then return CACHE.xl > 9 end
  return true
end

local function ready_ignore_altars()
  if stop_on_altars and religion_is_handled() then
    stop_on_altars = false
    crawl.setopt("explore_stop -= altars")
  elseif not stop_on_altars and not religion_is_handled() then
    stop_on_altars = true
    crawl.setopt("explore_stop += altars")
  end
end

---- Ignore exit portals ----
local function ready_ignore_exits()
  if stop_on_portals and util.contains(ALL_PORTAL_NAMES, CACHE.branch) then
    stop_on_portals = false
    crawl.setopt("explore_stop -= portals")
  elseif not stop_on_portals and not util.contains(ALL_PORTAL_NAMES, CACHE.branch) then
    stop_on_portals = true
    crawl.setopt("explore_stop += portals")
  end
end

---- Stop on Pan Gates ----
local function ready_stop_on_pan_gates()
  local branch = CACHE.branch
  if stop_on_pan_gates and branch ~= "Pan" then
    stop_on_pan_gates = false
    crawl.setopt("explore_stop -= stairs")
  elseif not stop_on_pan_gates and branch == "Pan" then
    stop_on_pan_gates = true
    crawl.setopt("explore_stop += stairs")
  end
end

---- Temple actions ----
local function ready_temple_macro()
  if CACHE.branch == "Temple" and not autosearched_temple and CACHE.god == "No God" then
    crawl.sendkeys({ 6, "altar\r" })
    autosearched_temple = true
  end
end

local function c_message_temple_actions(text, _)
  if CACHE.branch == "Temple" then
    -- Hit explore to search all altars
    if text:find("explor") then
      crawl.sendkeys({ 6, "altar\r" })
    elseif text:find("welcomes you!") then
      -- Run to staircase after worship
      crawl.sendkeys("X<\r")
    end
  end
end


function init_runrest_features()
  if CONFIG.debug_init then crawl.mpr("Initializing runrest-features") end

  stop_on_altars = true
  stop_on_portals = true
  stop_on_pan_gates = false
  autosearched_temple = false
  autosearched_gauntlet = false
end


---------------- Hooks ----------------
function c_message_runrest_features(text, _)
  if CONFIG.temple_macros then c_message_temple_actions(text, _) end
end

function ready_runrest_features()
  if CONFIG.ignore_altars then ready_ignore_altars() end
  if CONFIG.ignore_portal_exits then ready_ignore_exits() end
  if CONFIG.stop_on_pan_gates then ready_stop_on_pan_gates() end
  if CONFIG.temple_macros then ready_temple_macro() end
  if CONFIG.gauntlet_macros then ready_gauntlet_macro() end
end

}
############################### End lua/features/runrest-features.lua ###############################
##########################################################################################

################################### Begin lua/features/safe-consumables.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Protective consumable inscriptions on everything w/o a built-in prompt --
-- Updates every turn to:
  -- Inscribe starting items
  -- Update inscriptions after ID

local NO_INSCRIPTION_NEEDED = {
  "acquirement", "amnesia", "blinking", "brand weapon", "enchant armour", "enchant weapon",
  "identify", "immolation", "noise", "vulnerability", "attraction", "lignification", "mutation"
} -- NO_INSCRIPTION_NEEDED (do not remove this comment)

------------------- Hook -------------------
function ready_safe_consumables()
  -- Remove the default "!r" and "!q" inscriptions after identify
  for inv in iter.invent_iterator:new(items.inventory()) do
    local inv_class = inv.class(true)
    local st = inv.subtype()
    if inv_class == "scroll" then
      if (st == "poison" and you.res_poison() > 0)
        or (st == "torment" and you.torment_immune())
        or util.contains(NO_INSCRIPTION_NEEDED, st) then
          if inv.inscription:find("%!r") then
            inv.inscribe(inv.inscription:gsub("%!r", ""), false)
          end
      elseif not inv.inscription:find("%!r") then inv.inscribe("!r")
      end
    elseif inv_class == "potion" then
      if util.contains(NO_INSCRIPTION_NEEDED, st) then
        if inv.inscription:find("%!q") then 
          inv.inscribe(inv.inscription:gsub("%!q", ""), false)
        end
      elseif not inv.inscription:find("%!q") then inv.inscribe("!q")
      end
    end
  end
end

}
############################### End lua/features/safe-consumables.lua ###############################
##########################################################################################

################################### Begin lua/features/safe-stairs.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
----- Prevent accidental stairs use -----
local prev_location
local cur_location
local last_stair_turn
local v5_unwarned

local function check_new_location(key)
  local feature = view.feature_at (0, 0)
  local one_way_stair = feature:find("escape_hatch") or feature:find("shaft")

  local turn_diff = CACHE.turn - last_stair_turn
  if prev_location ~= cur_location and turn_diff > 0 and turn_diff < CONFIG.warn_stairs_threshold then
    if not mpr_yesno("Really go right back?") then
      crawl.mpr("Okay, then.")
      return
    end
  elseif CONFIG.warn_v5 and v5_unwarned and cur_location == "Vaults4" and key == ">" then
    -- V5 warning idea by rypofalem --
    if feature:find("down") or feature:find("shaft") then
      if not mpr_yesno("Really go to Vaults:5?") then
        crawl.mpr("Okay, then.")
        return
      end
      v5_unwarned = false
    end
  end

  crawl.sendkeys(key)
  if not one_way_stair then last_stair_turn = CACHE.turn end
end


function init_safe_stairs()
  if CONFIG.debug_init then crawl.mpr("Initializing safe-stairs") end
  prev_location = CACHE.branch .. CACHE.depth
  cur_location = CACHE.branch .. CACHE.depth
  last_stair_turn = 0
  v5_unwarned = true

  crawl.setopt("macros += M > ===macro_do_safe_downstairs")
  crawl.setopt("macros += M < ===macro_do_safe_upstairs")
end

function macro_do_safe_downstairs()
  check_new_location(">")
end

function macro_do_safe_upstairs()
  check_new_location("<")
end


------------------- Hook -------------------
function ready_safe_stairs()
  prev_location = cur_location
  cur_location = CACHE.branch .. CACHE.depth
end

}
############################### End lua/features/safe-stairs.lua ###############################
##########################################################################################

################################### Begin lua/features/startup.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
function init_startup()
  if CONFIG.debug_init then crawl.mpr("Initializing startup") end

  if you.turns() == 0 then
    ---- Skill menu on startup (by rwbarton, edits by buehler) ----
    if CONFIG.show_skills_on_startup then
      local show_skills_on_startup = (you.race() ~= "Gnoll" or you.class() == "Wanderer")
      if show_skills_on_startup then
        crawl.sendkeys("m")
      end
    end
  
    ---- Auto-set default skill targets ----
    if CONFIG.auto_set_skill_targets then
      for _, skill_target in ipairs(CONFIG.auto_set_skill_targets) do
        local skill, target = unpack(skill_target)
        if you.skill(skill) < target then
          for _, s in ipairs(ALL_TRAINING_SKILLS) do
            you.train_skill (s, 0)
          end
          you.set_training_target (skill, target)
          you.train_skill (skill, 2)
          break
        end
      end
    end
  end
end

}
############################### End lua/features/startup.lua ###############################
##########################################################################################

################################### Begin lua/features/weapon-slots.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Cleanup weapon slots ----
-- Picked up weapons always go to a,b,w
-- Whenever you drop an item:
  -- Assign weapons to slots a and b
      -- Priority: 1:wielded, 2:weapon, not polearm/ranged unless training it
      -- 3:magical staff, 4:polearm, 5:ranged
  -- Assign weapon to w: ranged/polearm/magical staff/any

local do_cleanup_weapon_slots
local priorities_ab
local priorities_w
local slots_changed

local function cleanup_ab(slot)
  if is_weapon(items.inslot(slot)) then return end

  for p=1,#priorities_ab do
    if priorities_ab[p] > slot then
      items.swap_slots(priorities_ab[p], slot)
      slots_changed = true
      priorities_ab[p] = -1
      return
    end
  end
end

local function cleanup_w()
  local slot_w = items.letter_to_index("w")
  local inv = items.inslot(slot_w)
  if is_weapon(inv) then return end

  for p=1,#priorities_w do
    if priorities_w[p] > 1 then
      items.swap_slots(priorities_w[p], slot_w)
      slots_changed = true
      return
    end
  end
end

local function get_priority_ab(it)
  if not is_weapon(it) then return -1 end
  if it.equipped then return 1 end

  if is_magic_staff(it) then return 3 end
  if is_weapon(it) then
    if it.is_ranged then
      if CACHE.s_ranged >= 4 then return 2 end
      return 5
    end

    if is_polearm(it) then
      if CACHE.s_polearms >= 4 then return 2 end
      return 4
    end

    return 2
  end

  return -1
end

local function get_priority_w(it)
  if not is_weapon(it) then return -1 end
  if it.is_ranged then return 1 end
  if is_polearm(it) then return 2 end
  if is_magic_staff(it) then return 3 end
  return 4
end

local function generate_priorities()
  priorities_ab = { -1, -1, -1, -1, -1 }
  priorities_w = { -1, -1, -1, -1 }

  for inv in iter.invent_iterator:new(items.inventory()) do
    local p = get_priority_w(inv)
    if p > 0 then
      if priorities_w[p] == -1 then priorities_w[p] = inv.slot
      else priorities_w[p+1] = inv.slot
      end
    end

    p = get_priority_ab(inv)
    if p > 0 then
      if priorities_ab[p] == -1 then priorities_ab[p] = inv.slot
      else priorities_ab[p+1] = inv.slot
      end
    end
  end
end

local function cleanup_weapon_slots()
  generate_priorities()
  cleanup_ab(0)
  cleanup_ab(1)
  cleanup_w()
end

local function get_first_empty_slot()
  for slot=1,52 do
    if not items.inslot(slot) then return slot end
  end
end


function init_weapon_slots()
  if CONFIG.debug_init then crawl.mpr("Initializing weapon-slots") end

  do_cleanup_weapon_slots = false
  slots_changed = false
  priorities_ab = nil
  priorities_w = nil
end


------------------- Hooks -------------------
function c_assign_invletter_weapon_slots(it)
  if not CONFIG.do_auto_weapon_slots_abw then return end
  if not is_weapon(it) then return end

  for i=0,2 do
    local slot = i==2 and items.letter_to_index("w") or i

    local inv = items.inslot(slot)
    if not inv then return slot end
    if not is_weapon(inv) then
      items.swap_slots(slot, get_first_empty_slot())
      slots_changed = true
      return slot
    end
  end
end

function c_message_weapon_slots(text, channel)
  if not CONFIG.do_auto_weapon_slots_abw then return end
  do_cleanup_weapon_slots = channel == "plain" and text:find("You drop ")
end

function ready_weapon_slots()
  if do_cleanup_weapon_slots then
    cleanup_weapon_slots()
    do_cleanup_weapon_slots = false
    if slots_changed then
      crawl.mpr(with_color(COLORS.darkgrey, "Weapon slots updated (ab+w)."))
      crawl.redraw_screen()
      slots_changed = false
    end
  end
end

}
############################### End lua/features/weapon-slots.lua ###############################
##########################################################################################

## (Resuming init.txt) ##

### Pickup and alert - Core files ###

################################### Begin lua/pickup-alert/pa-main.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
local loaded_pa_armour, loaded_pa_misc, loaded_pa_weapons

function init_pa_main()
  init_pa_data()

  if CONFIG.debug_init then crawl.mpr("Initializing pa-main") end

  loaded_pa_armour = pa_alert_armour and true or false
  loaded_pa_misc = pa_alert_orb and true or false
  if pa_alert_weapon then
    loaded_pa_weapons = true
    init_pa_weapons()
  end
  if CONFIG.debug_init then
    if loaded_pa_armour then crawl.mpr("pa-armour loaded") end
    if loaded_pa_misc then crawl.mpr("pa-misc loaded") end
    if loaded_pa_weapons then crawl.mpr("pa-weapons loaded") end
  end


  ---- Autopickup main ----
  clear_autopickup_funcs()
  add_autopickup_func(function (it, _)
    if CACHE.have_orb then return end
    if has_ego(it) and not it.is_identified then return false end
    if not it.is_useless then
      if already_contains(pa_items_picked, it) then return end

      -- Check for pickup
      local retVal = false
      if loaded_pa_armour and CONFIG.pickup.armour and is_armour(it) then
        if pa_pickup_armour(it) then return true end
      elseif loaded_pa_weapons and CONFIG.pickup.weapons and is_weapon(it) then
        if pa_pickup_weapon(it) then return true end
      elseif loaded_pa_misc and CONFIG.pickup.staves and is_magic_staff(it) then
        if pa_pickup_staff(it) then return true end
      elseif loaded_pa_misc and is_unneeded_ring(it) then
        return false
      end
    end

    -- Not picking up this item. Now check for alerts.
    -- If useless and aux armour, check if unless carrying one of the same subtype (ie useless from non-innate mutations)
    local do_alerts = not it.is_useless
    local unworn_aux_item = nil
    if not do_alerts then
      local st = it.subtype()
      if not is_armour(it) or is_body_armour(it) or is_shield(it) or is_orb(it) then return end
      for inv in iter.invent_iterator:new(items.inventory()) do
        local inv_st = inv.subtype()
        if inv_st and inv_st == st then
          do_alerts = true
          unworn_aux_item = inv
          break
        end
      end
    end

    if do_alerts then
      if not (CONFIG.alert.system_enabled and you.turn_is_over()) then return end
      if already_contains(pa_items_alerted, it) then return end

      if loaded_pa_misc and CONFIG.alert.one_time and #CONFIG.alert.one_time > 0 then
        if pa_alert_OTA(it) then return end
      end

      if loaded_pa_misc and CONFIG.alert.staff_resists and is_magic_staff(it) then
        if pa_alert_staff(it) then return end
      elseif loaded_pa_misc and CONFIG.alert.orbs and is_orb(it) then
        if pa_alert_orb(it) then return end
      elseif loaded_pa_misc and CONFIG.alert.talismans and is_talisman(it) then
        if pa_alert_talisman(it) then return end
      elseif loaded_pa_armour and CONFIG.alert.armour and is_armour(it) then
        if pa_alert_armour(it, unworn_aux_item) then return end
      else
        if loaded_pa_weapons and CONFIG.alert.weapons and is_weapon(it) then
          if pa_alert_weapon(it) then return end
        end
      end
    end
  end)
end

function pa_alert_item(it, alert_type, emoji, force_more)
  local item_desc = get_plussed_name(it, "plain")
  local alert_colors
  if is_weapon(it) then
    alert_colors = ALERT_COLORS.weapon
    update_high_scores(it)
    item_desc = item_desc .. with_color(ALERT_COLORS.weapon.stats, " (" .. get_weapon_info_string(it) .. ")")
  elseif is_body_armour(it) then
    alert_colors = ALERT_COLORS.body_arm
    update_high_scores(it)
    local ac, ev = get_armour_info_strings(it)
    item_desc = item_desc .. with_color(ALERT_COLORS.body_arm.stats, " {" .. ac .. ", " .. ev .. "}")
  elseif is_armour(it) then
    alert_colors = ALERT_COLORS.aux_arm
  elseif is_orb(it) then
    alert_colors = ALERT_COLORS.orb
  elseif is_talisman(it) then
    alert_colors = ALERT_COLORS.talisman
  elseif is_magic_staff(it) then
    alert_colors = ALERT_COLORS.staff
  end
  local tokens = {}
  tokens[1] = emoji and emoji or with_color(COLORS.cyan, "----")
  tokens[#tokens+1] = with_color(alert_colors.desc, " " .. alert_type .. ": ")
  tokens[#tokens+1] = with_color(alert_colors.item, item_desc .. " ")
  tokens[#tokens+1] = tokens[1]

  local do_fm = force_more or (CONFIG.fm_alert.artefact and it.artefact)
  enqueue_mpr_opt_more(do_fm, table.concat(tokens))

  pa_recent_alerts[#pa_recent_alerts+1] = get_plussed_name(it)
  add_to_pa_table(pa_items_alerted, it)
  you.stop_activity()
  return true
end

------------------- Hooks -------------------
function c_assign_invletter_item_alerts(it)
  add_to_pa_table(pa_items_picked, it)
  local name, _ = get_pa_keys(it)
  pa_items_alerted[name] = nil
  util.remove(pa_recent_alerts, get_plussed_name(it))
  remove_from_OTA(it)

  if is_weapon(it) or is_armour(it) then
    update_high_scores(it)
  end
end

function c_message_item_alerts(text, channel)
  if channel ~= "plain" then return end
  if text:find("Done exploring") or text:find("Partly explored") then
    local tokens = {}
    for _,v in ipairs(pa_recent_alerts) do
      tokens[#tokens+1] = "\n  " .. v
    end
    if #tokens > 0 then
      enqueue_mpr(with_color(COLORS.magenta, "Recent alerts:" .. table.concat(tokens)))
    end
    pa_recent_alerts = {}
  end
end

function ready_item_alerts()
  ready_pa_weapons()
  update_high_scores(items.equipped_at("armour"))
end

}
############################### End lua/pickup-alert/pa-main.lua ###############################
##########################################################################################

################################### Begin lua/pickup-alert/pa-data.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Helpers for using persistent tables in pickup-alert system----
function add_to_pa_table(table_ref, it)
  if is_weapon(it) or is_armour(it) or is_talisman(it) or is_orb(it) then
    local name, value = get_pa_keys(it)
    local cur_val = tonumber(table_ref[name])
    if not cur_val or value > cur_val then
      table_ref[name] = value
    end
  end
end

function already_contains(table_ref, it)
  local name, value = get_pa_keys(it)
  return table_ref[name] ~= nil and tonumber(table_ref[name]) >= value
end

function init_pa_data()
  if CONFIG.debug_init then crawl.mpr("Initializing pa-data") end

  create_persistent_data("pa_OTA_items", CONFIG.alert.one_time)
  create_persistent_data("pa_recent_alerts", {})
  create_persistent_data("pa_items_picked", {})
  create_persistent_data("pa_items_alerted", {})
  create_persistent_data("alerted_first_ranged", false)
  create_persistent_data("alerted_first_ranged_1h", false)
  create_persistent_data("alerted_first_polearm", false)
  create_persistent_data("alerted_first_polearm_1h", false)
  create_persistent_data("ac_high_score", 0)
  create_persistent_data("weapon_high_score", 0)
  create_persistent_data("unbranded_high_score", 0)

  -- Update alerts & tables for starting items
  for inv in iter.invent_iterator:new(items.inventory()) do
    remove_from_OTA(inv)
    add_to_pa_table(pa_items_picked, inv)

    if is_weapon(inv) then
      if is_polearm(inv) then
        alerted_first_polearm = true
        if get_hands(inv) == 1 then
          alerted_first_polearm_1h = true
        end
      elseif inv.is_ranged then
        alerted_first_ranged = true
        if get_hands(inv) == 1 then
          alerted_first_ranged_1h = true
        end
      end
    end
  end
end

function get_OTA_index(it)
  local qualname = it.name("qual")
  for i,v in ipairs(pa_OTA_items) do
    if v ~= "" and qualname:find(v) then return i end
  end
  return -1
end

function remove_from_OTA(it)
  local found = false
  local idx
  repeat
    idx = get_OTA_index(it)
    if idx ~= -1 then
      util.remove(pa_OTA_items, pa_OTA_items[idx])
      found = true
    end
  until idx == -1

  return found
end

--- Set all single high scores ---
-- Returns a string if item is a new high score, else nil
function update_high_scores(it)
  local ret_val = nil
  if is_armour(it) then
    local ac = get_armour_ac(it)
    if ac > ac_high_score then
      ac_high_score = ac
      if not ret_val then ret_val = "Highest AC" end
    end
  elseif is_weapon(it) then
    local it_plus = it.plus or 0
    local score = it.score or get_weap_score(it)
    if score > weapon_high_score then
      weapon_high_score = score
      if not ret_val then ret_val = "Highest damage" end
    end

    if score > unbranded_high_score then
      local unbranded_score = it.unbranded_score or get_weap_score(it, true)
      if unbranded_score > unbranded_high_score then
        unbranded_high_score = score
        if not ret_val then ret_val = "Highest no-brand damage" end
      end
    end
  end

  return ret_val
end

}
############################### End lua/pickup-alert/pa-data.lua ###############################
##########################################################################################

################################### Begin lua/pickup-alert/pa-util.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Utility functions specific to pickup-alert system ----
--------- Stat string formatting ---------
local function format_stat(abbr, val, is_worn)
  local stat_str = string.format("%.1f", val)
  if val < 0 then
    return abbr .. stat_str
  elseif is_worn then
    return abbr .. ':' .. stat_str
  else
    return abbr .. '+' .. stat_str
  end
end

function get_armour_info_strings(it)
  if not is_armour(it) or is_orb(it) then return "", "" end

  local cur = items.equipped_at(it.equip_type)
  local cur_ac = 0
  local cur_sh = 0
  local cur_ev = 0
  local is_worn = it.ininventory and cur and cur.slot == it.slot
  if cur and not is_worn then
    -- Only show deltas if not same item
    if is_shield(cur) then
      cur_sh = get_shield_sh(cur)
      cur_ev = -get_shield_penalty(cur)
    else
      cur_ac = get_armour_ac(cur)
      cur_ev = get_armour_ev(cur)
    end
  end

  if is_shield(it) then
    local sh_str = format_stat("SH", get_shield_sh(it) - cur_sh, is_worn)
    local ev_str = format_stat("EV", -get_shield_penalty(it) - cur_ev, is_worn)
    return sh_str, ev_str
  else
    local ac_str = format_stat("AC", get_armour_ac(it) - cur_ac, is_worn)
    if not is_body_armour(it) then return ac_str end
    local ev_str = format_stat("EV", get_armour_ev(it) - cur_ev, is_worn)
    return ac_str, ev_str
  end
end

function get_weapon_info_string(it)
  if not is_weapon(it) then return end
  local dmg = get_weap_dmg(it, DMG_TYPE.branded)
  local dmg_str = string.format("%.1f", dmg)
  if dmg < 10 then dmg_str = string.format("%.2f", dmg) end
  if dmg > 99.9 then dmg_str = ">100" end

  local delay = get_weap_delay(it)
  local delay_str = string.format("%.1f", delay)
  if delay < 1 then
    delay_str = string.format("%.2f", delay)
    delay_str = delay_str:sub(2, #delay_str)
  end

  local dps = dmg / delay
  local dps_str = string.format("%.1f", dps)
  if dps < 10 then dps_str = string.format("%.2f", dps) end
  if dps > 99.9 then dps_str = ">100" end

  local it_plus = it.plus or 0
  local acc = it.accuracy + it_plus
  if acc >= 0 then acc = "+" .. acc end

  --This would be nice if it worked in all UIs
  --dps_str = "DPS:<w>" .. dps_str .. "</w> "
  --return dps_str .. "(<red>" .. dmg_str .. "</red>/<blue>" .. delay_str .. "</blue>), Acc<w>" .. acc .. "</w>"
  return table.concat({ "DPS:", dps_str, " (", dmg_str, "/", delay_str, "), Acc", acc })
end


--------- Functions for armour and weapons ---------
function get_ego(it, terse)
  if it.artefact then return "arte" end
  local ego = it.ego(terse)
  if ego then return ego end

  if is_body_armour(it) then
    if it.name("qual"):find("(dragon scales|troll leather)") then return qualname end
  end
end

-- Used for data tables
function get_pa_keys(it, name_type)
  if is_talisman(it) or is_orb(it) then
    return it.name():gsub("\"", ""), 0
  end
  local name = it.name(name_type or "base"):gsub("\"", "")
  local value = tonumber(name:sub(1, 3))
  if not value then return name, 0 end
  return util.trim(name:sub(4)), value
end

function get_plussed_name(it, name_type)
  if is_talisman(it) or is_orb(it) or is_magic_staff(it) then
    return it.name():gsub("\"", ""), 0
  end
  local name, value = get_pa_keys(it, name_type)
  if value >= 0 then value = "+" .. value end
  return value .. " " .. name
end

-- Custom def of ego/branded
function has_ego(it, exclude_stat_only_egos)
  if not it then return false end
  if is_weapon(it) then
    if exclude_stat_only_egos then
      local ego = get_ego(it)
      if ego and (ego == "speed" or ego == "heavy") then return false end
    end
    return it.artefact or it.branded
  end

  if it.artefact or it.branded then return true end
  local basename = it.name("base")
  if basename:find("troll leather") then return true end
  if basename:find("dragon scales") and not basename:find("steam") then return true end
  return false
end

--------- Armour (Shadowing crawl calcs) ---------
function get_unadjusted_armour_pen(encumb)
  -- dcss v0.33.1
  local pen = encumb - 2 * get_mut(MUTS.sturdy_frame, true)
  if pen > 0 then return pen end
  return 0
end

function get_adjusted_armour_pen(encumb, str)
  -- dcss v0.33.1
  local base_pen = get_unadjusted_armour_pen(encumb)
  return 2 * base_pen * base_pen * (45 - CACHE.s_armour) / 45 / (5 * (str + 3))
end

function get_adjusted_dodge_bonus(encumb, str, dex)
  -- dcss v0.33.1
  local size_factor = -2 * CACHE.size_penalty
  local dodge_bonus = 8*(10 + CACHE.s_dodging * dex) / (20 - size_factor) / 10
  local armour_dodge_penalty = get_unadjusted_armour_pen(encumb) - 3
  if armour_dodge_penalty <= 0 then return dodge_bonus end

  if armour_dodge_penalty >= str then
    return dodge_bonus * str / (armour_dodge_penalty * 2)
  end
  return dodge_bonus - dodge_bonus * armour_dodge_penalty / (str * 2)
end

function get_armour_ac(it)
  -- dcss v0.33.1
  local it_plus = it.plus or 0

  if it.artefact and it.is_identified then
    local art_ac = it.artprops["AC"]
    if art_ac then it_plus = it_plus + art_ac end
  end

  local ac = it.ac * (1 + CACHE.s_armour / 22) + it_plus
  if not is_body_armour(it) then return ac end

  local deformed = get_mut(MUTS.deformed, true) > 0
  local pseudopods = get_mut(MUTS.pseudopods, true) > 0
  if pseudopods or deformed then
    return ac * 6/10
  end

  return ac
end

function get_armour_ev(it)
  -- dcss v0.33.1
  -- This function computes the armour-based component to standard EV (not paralysed, etc)
  -- Factors in stat changes from this armour and removing current one
  local str = CACHE.str
  local dex = CACHE.dex
  local no_art_str = str
  local no_art_dex = dex
  local art_ev = 0

  -- Adjust str/dex/EV for artefact stat changes
  local worn = items.equipped_at("armour")
  if worn and worn.artefact then
    if worn.artprops["Str"] then str = str - worn.artprops["Str"] end
    if worn.artprops["Dex"] then dex = dex - worn.artprops["Dex"] end
    if worn.artprops["EV"] then art_ev = art_ev - worn.artprops["EV"] end
  end

  if it.artefact then
    if it.artprops["Str"] then str = str + it.artprops["Str"] end
    if it.artprops["Dex"] then dex = dex + it.artprops["Dex"] end
    if it.artprops["EV"] then art_ev = art_ev + it.artprops["EV"] end
  end

  if str <= 0 then str = 1 end

  local dodge_bonus = get_adjusted_dodge_bonus(it.encumbrance, str, dex)
  local naked_dodge_bonus = get_adjusted_dodge_bonus(0, no_art_str, no_art_dex)
  return (dodge_bonus - naked_dodge_bonus) + art_ev - get_adjusted_armour_pen(it.encumbrance, str)
end

function get_shield_penalty(sh)
  -- dcss v0.33.1
  return 2 * sh.encumbrance * sh.encumbrance
        * (27 - CACHE.s_shields) / 27
        / (25 + 5 * CACHE.str)
end

function get_shield_sh(it)
  -- dcss v0.33.1
  local dex = CACHE.dex
  if it.artefact and it.is_identified then
    local art_dex = it.artprops["Dex"]
    if art_dex then dex = dex + art_dex end
  end

  local cur = items.equipped_at("offhand")
  if is_shield(cur) and cur.artefact and cur.slot ~= it.slot then
    local art_dex = cur.artprops["Dex"]
    if art_dex then dex = dex - art_dex end
  end

  local it_plus = it.plus or 0

  local base_sh = it.ac * 2
  local shield = base_sh * (50 + CACHE.s_shields*5/2)
  shield = shield + 200 * it_plus
  shield = shield + 38 * (CACHE.s_shields + 3 + dex * (base_sh + 13) / 26)
  return shield / 200
end


--------- Weapon stats (Shadowing crawl calcs) ---------
function get_weap_delay(it, ignore_brands)
  local delay = it.delay - get_skill(it.weap_skill)/2
  local min_delay = get_weap_min_delay(it)
  if delay < min_delay then delay = min_delay end

  if not ignore_brands then
    if get_ego(it) == "speed" then delay = delay * 2 / 3
    elseif get_ego(it) == "heavy" then delay = delay * 1.5
    end
  end

  if delay < 3 then delay = 3 end

  local sh = items.equipped_at("offhand")
  if is_shield(sh) then delay = delay + get_shield_penalty(sh) end

  if it.is_ranged then
    local worn = items.equipped_at("armour")
    if worn then
      local str = CACHE.str
      if it.artefact then
        if it.artprops["Str"] then str = str + it.artprops["Str"] end
      end
      local cur = items.equipped_at("weapon")
      if cur and cur ~= it and cur.artefact then
        if cur.artprops["Str"] then str = str - cur.artprops["Str"] end
      end

      delay = delay + get_adjusted_armour_pen(worn.encumbrance, str)
    end
  end

  return delay / 10
end

function get_weap_min_delay(it)
  -- This is an abbreviated version of the actual calculation.
  -- Intended only to be used to prevent skill from reducing too far in get_weap_delay()
  local basename = it.name("base")

  local adj_base_delay = it.delay / 2
  if get_ego(it) == "heavy" then adj_base_delay = 1.5 * adj_base_delay end
  local min_delay = math.floor(adj_base_delay)

  if it.weap_skill == "Short Blades" and min_delay > 5 then min_delay = 5 end
  if min_delay > 7 then min_delay = 7 end

  if basename:find("longbow") then min_delay = 6
  elseif basename:find("(crossbow|arbalest)") and min_delay < 10 then min_delay = 10 end

  return min_delay
end

function get_weap_dps(it, dmg_type)
  if not dmg_type then dmg_type = DMG_TYPE.scoring end
  return get_weap_dmg(it, dmg_type) / get_weap_delay(it)
end

function get_weap_dmg(it, dmg_type)
  -- Returns an adjusted weapon damage = damage * speed
  -- Includes stat/slay changes between weapon and the one currently wielded
  -- Aux attacks not included
  if not dmg_type then dmg_type = DMG_TYPE.scoring end
  local it_plus = it.plus or 0
  -- Adjust str/dex/slay from artefacts
  local str = CACHE.str
  local dex = CACHE.dex

  -- Adjust str/dex/EV for artefact stat changes
  if not it.equipped then
    local wielded = items.equipped_at("weapon")
    if wielded and wielded.artefact then
      if wielded.artprops["Str"] then str = str - wielded.artprops["Str"] end
      if wielded.artprops["Dex"] then dex = dex - wielded.artprops["Dex"] end
      if wielded.artprops["Slay"] then it_plus = it_plus - wielded.artprops["Slay"] end
    end

    if it.artefact and it.is_identified then
      if it.artprops["Str"] then str = str + it.artprops["Str"] end
      if it.artprops["Dex"] then dex = dex + it.artprops["Dex"] end
      if it.artprops["Slay"] then it_plus = it_plus + it.artprops["Slay"] end
    end
  end

  local stat
  if it.is_ranged or it.weap_skill:find("Blades") then stat = dex
  else stat = str end

  local stat_mod = 0.75 + 0.025 * stat
  local skill_mod = (1 + get_skill(it.weap_skill)/25/2) * (1 + CACHE.s_fighting/30/2)

  it_plus = it_plus + get_slay_bonuses()

  local pre_brand_dmg_no_plus = it.damage * stat_mod * skill_mod
  local pre_brand_dmg = pre_brand_dmg_no_plus + it_plus

  if is_magic_staff(it) then
    return (pre_brand_dmg + get_staff_bonus_dmg(it, dmg_type == DMG_TYPE.unbranded))
  end

  if dmg_type >= DMG_TYPE.branded then
    local ego = get_ego(it)
    if ego then
      local brand_bonus = WEAPON_BRAND_BONUSES[ego]
      if not brand_bonus and dmg_type == DMG_TYPE.scoring then
        brand_bonus = WEAPON_BRAND_BONUSES.subtle[ego]
      end
      if brand_bonus then return brand_bonus.factor * pre_brand_dmg_no_plus + brand_bonus.offset + it_plus end
    end
  end

  return pre_brand_dmg
end

function get_weap_score(it, no_brand_bonus)
  if it.dps and it.acc then
    -- Handle cached /  high-score tuples
    return it.dps + it.acc * TUNING.weap.pickup.accuracy_weight
  end
  local it_plus = it.plus or 0
  local dmg_type = no_brand_bonus and DMG_TYPE.unbranded or DMG_TYPE.scoring
  return get_weap_dps(it, dmg_type) + (it.accuracy + it_plus) * TUNING.weap.pickup.accuracy_weight
end


--------- Weap stat helpers ---------
function get_hands(it)
  if CACHE.race ~= "Formicid" then return it.hands end
  local st = it.subtype()
  if st == "giant club" or st == "giant spiked club" then return 2 end
  return 1
end

-- Get skill level, or average for artefacts w/ multiple skills
function get_skill(skill)
  if not skill:find(",") then
    return you.skill(skill)
  end

  local skills = crawl.split(skill, ",")
  local sum = 0
  local count = 0
  for _, s in ipairs(skills) do
    sum = sum + you.skill(s)
    count = count + 1
  end
  return sum/count
end

-- Count all slay bonuses from weapons/armour/jewellery
function get_slay_bonuses()
  local sum = 0

  -- Slots can go as high as 18 afaict
  for i = 0,20 do
    local it = items.equipped_at(i)
    if it then
      if is_ring(it) then
        if it.artefact then
          local name = it.name()
          local idx = name:find("Slay")
          if idx then
            local slay = tonumber(name:sub(idx+5, idx+5))
            if slay == 1 then
              local next_digit = tonumber(name:sub(idx+6, idx+6))
              if next_digit then slay = 10 + next_digit end
            end

            if name:sub(idx+4, idx+4) == "+" then sum = sum + slay
            else sum = sum - slay end
          end
        elseif get_ego(it, true) == "Slay" then
          sum = sum + it.plus
        end
      elseif it.artefact and (is_armour(it) or is_amulet(it)) then
          local slay = it.artprops["Slay"]
          if slay then sum = sum + slay end
      end
    end
  end

  if CACHE.race == "Demonspawn" then
    sum = sum + 3 * get_mut(MUTS.augmentation, true)
    sum = sum + get_mut(MUTS.sharp_scales, true)
  end

  return sum
end

function get_staff_bonus_dmg(it, ignore_brand_dmg)
  -- dcss v0.33.1
  if ignore_brand_dmg then
    local basename = it.name("base")
    if basename ~= "staff of earth" and basename ~= "staff of conjuration" then
      return 0
    end
  end

  local school = get_staff_school(it)
  if not school then return 0 end
  local spell_skill = get_skill(school)
  local evo_skill = you.skill("Evocations")

  local chance = (2*evo_skill + spell_skill) / 30
  if chance > 1 then chance = 1 end
  -- 0.75 is an acceptable approximation; most commonly 63/80
  -- Varies by staff type in sometimes complex ways
  local avg_dmg = 3/4 * (evo_skill/2 + spell_skill)
  return avg_dmg*chance
end

function get_staff_school(it)
  for k,v in pairs(ALL_STAFF_SCHOOLS) do
    if it.name("base") == "staff of " .. k then return v end
	end
end

}
############################### End lua/pickup-alert/pa-util.lua ###############################
##########################################################################################

## (Resuming init.txt) ##

### Pickup and alert - Feature files ###

################################### Begin lua/pickup-alert/pa-armour.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Pickup and Alert features for armour ----
ARMOUR_ALERT = {
  artefact = { msg = "Artefact armour", emoji = EMOJI.ARTEFACT },
  gain_ego = { msg = "Gain ego", emoji = EMOJI.EGO },
  diff_ego = { msg = "Diff ego", emoji = EMOJI.EGO },

  lighter = {
    gain_ego = { msg = "Gain ego (Lighter armour)", emoji = EMOJI.EGO },
    diff_ego = { msg = "Diff ego (Lighter armour)", emoji = EMOJI.EGO },
    same_ego = { msg = "Lighter armour", emoji = EMOJI.LIGHTER },
    lost_ego = { msg = "Lighter armour (Lost ego)", emoji = EMOJI.LIGHTER }
  },
  heavier = {
    gain_ego = { msg = "Gain ego (Heavier armour)", emoji = EMOJI.EGO },
    diff_ego = { msg = "Diff ego (Heavier armour)", emoji = EMOJI.EGO },
    same_ego = { msg = "Heavier Armour", emoji = EMOJI.HEAVIER },
    lost_ego = { msg = "Heavier Armour (Lost ego)", emoji = EMOJI.HEAVIER }
  }
} -- ARMOUR_ALERT (do not remove this comment)

local function send_armour_alert(it, alert_type)
  return pa_alert_item(it, alert_type.msg, alert_type.emoji, CONFIG.fm_alert.body_armour)
end

-- If training armour in early/mid game, alert user to any armour that is the strongest found so far
local function alert_ac_high_score(it)
  if not is_body_armour(it) then return false end
  if CACHE.s_armour == 0 then return false end
  if CACHE.xl > 12 then return false end
  if has_ego(it) and not it.is_identified then return false end

  if ac_high_score == 0 then
    local worn = items.equipped_at("armour")
    if not worn then return false end
    ac_high_score = get_armour_ac(worn)
  else
    local itAC = get_armour_ac(it)
    if itAC > ac_high_score then
      ac_high_score = itAC
      return pa_alert_item(it, "Strongest armour yet", EMOJI.STRONGEST, CONFIG.fm_alert.high_score_armour)
    end
  end

  return false
end


-- Alerts armour items that didn't autopickup, but are worth consideration
-- The function assumes pickup occurred; so it doesn't alert things like pure upgrades
-- Takes `unworn_inv_item`, which is an unworn aux armour item in inventory
function pa_alert_armour(it, unworn_inv_item)
  if is_body_armour(it) then
    if it.artefact then
      return it.is_identified and send_armour_alert(it, ARMOUR_ALERT.artefact)
    end
  
    local cur = items.equipped_at("armour")
    if not cur then return false end

    local encumb_delta = it.encumbrance - cur.encumbrance
    local ac_delta = get_armour_ac(it) - get_armour_ac(cur)
    local ev_delta = get_armour_ev(it) - get_armour_ev(cur)

    local it_ego = get_ego(it)
    local cur_ego = get_ego(cur)
    local ego_change_type
    if it_ego == cur_ego then ego_change_type = "same_ego"
    elseif not it_ego then ego_change_type = "lost_ego"
    elseif not cur_ego then ego_change_type = "gain_ego"
    else ego_change_type = "diff_ego"
    end

    if encumb_delta == 0 then
      if ego_change_type == "gain_ego" or ego_change_type == "diff_ego" then
        return send_armour_alert(it, ARMOUR_ALERT[ego_change_type])
      end
    elseif encumb_delta < 0 then
      if (ac_delta > 0) or (ev_delta / -ac_delta > TUNING.armour.lighter[ego_change_type]) then
        if ego_change_type == "lost_ego" and ev_delta < TUNING.armour.lighter.min_gain then return false end
        if ego_change_type ~= "same_ego" and -ac_delta > TUNING.armour.lighter.max_loss then return false end
        return send_armour_alert(it, ARMOUR_ALERT.lighter[ego_change_type])
      end
    else -- Heavier armour
      local encumb_impact = math.min(1, (CACHE.s_spellcasting + CACHE.s_ranged) / CACHE.xl)
      local total_loss = TUNING.armour.encumb_penalty_weight * encumb_impact * encumb_delta - ev_delta
      if (total_loss < 0) or (ac_delta / total_loss > TUNING.armour.heavier[ego_change_type]) then
        if ego_change_type == "lost_ego" and ac_delta < TUNING.armour.heavier.min_gain then return false end
        if ego_change_type ~= "same_ego" and total_loss > TUNING.armour.heavier.max_loss then return false end
        return send_armour_alert(it, ARMOUR_ALERT.heavier[ego_change_type])
      end
    end

    if alert_ac_high_score(it) then return true end
  elseif is_shield(it) then
    if it.artefact then
      return it.is_identified and pa_alert_item(it, "Artefact shield", EMOJI.ARTEFACT, CONFIG.fm_alert.shields)
    end
  
    local sh = items.equipped_at("offhand")
    if not is_shield(sh) then return false end
    if has_ego(it) and get_ego(it) ~= get_ego(sh) then
      local alert_msg = has_ego(sh) and "Diff ego" or "Gain ego"
      return pa_alert_item(it, alert_msg, EMOJI.EGO, CONFIG.fm_alert.shields)
    elseif get_shield_sh(it) > get_shield_sh(sh) then
      return pa_alert_item(it, "Increased SH", EMOJI.STRONGER, CONFIG.fm_alert.shields)
    end
  else
    -- Aux armour
    if it.artefact then
      return it.is_identified and pa_alert_item(it, "Artefact aux armour", EMOJI.ARTEFACT, CONFIG.fm_alert.aux_armour)
    end
  
    local cur = items.equipped_at(it.subtype()) or unworn_inv_item
    if not cur then return pa_alert_item(it, "Open slot", EMOJI.CAUTION, CONFIG.fm_alert.aux_armour) end
    if has_ego(it) and get_ego(it) ~= get_ego(cur) then
      local alert_msg = has_ego(cur) and "Diff ego" or "Gain ego"
      return pa_alert_item(it, alert_msg, EMOJI.EGO, CONFIG.fm_alert.aux_armour)
    elseif get_armour_ac(it) > get_armour_ac(cur) then
      return pa_alert_item(it, "Increased AC", EMOJI.STRONGER, CONFIG.fm_alert.aux_armour)
    end
  end
end

-- Equipment autopickup (by Medar, gammafunk, buehler, and various others)
function pa_pickup_armour(it)
  if has_ego(it) and not it.is_identified then return false end
  if has_risky_ego(it) then return false end

  if is_body_armour(it) then
    -- Pick up AC upgrades, new egos that don't lose AC, and artefacts that don't lose 5+ AC
    local cur = items.equipped_at("armour")
    if not cur then return false end
    if it.encumbrance > cur.encumbrance then return false end

    local ac_delta = get_armour_ac(it) - get_armour_ac(cur)

    if cur.artefact then return false end
    if it.artefact then return ac_delta > -5 end

    if get_ego(it) == get_ego(cur) then
      return ac_delta > 0 or ac_delta == 0 and it.encumbrance < cur.encumbrance 
    elseif has_ego(it) and not has_ego(cur) then
      return ac_delta >= 0
    end
  elseif is_shield(it) then
    -- Pick up SH upgrades, artefacts, and added egos
    local cur = items.equipped_at("offhand")
    if not is_shield(cur) then return false end
    if cur.encumbrance ~= it.encumbrance then return false end

    if cur.artefact then return false end
    if it.artefact then return true end
    if cur.branded then
      return get_ego(cur) == get_ego(it) and it.plus > cur.plus
    end
    return it.branded or it.plus > cur.plus
  else
    -- Aux armour: Pickup artefacts, AC upgrades, and new egos
    if is_orb(it) then return false end
    local st = it.subtype()

    -- Skip boots/gloves/helmet if wearing Lear's hauberk
    local worn = items.equipped_at("armour")
    if worn and worn.name("qual") == "Lear's hauberk" and st ~= "cloak" then return false end

    -- No autopickup if mutation interference
    if st == "gloves" then
      -- Ignore demonic touch if you're using offhand
      if get_mut(MUTS.demonic_touch, true) >= 3 and not offhand_is_free() then return false end
      -- Ignore claws if you're wielding a weapon
      if get_mut(MUTS.claws, true) > 0 and not have_weapon() then return false end
    elseif st == "boots" then
      if get_mut(MUTS.hooves, true) + get_mut(MUTS.talons, true) > 0 then return false end
    elseif it.name("base"):find("helmet") then
      if get_mut(MUTS.horns, true) + get_mut(MUTS.beak, true) + get_mut(MUTS.antennae, true) > 0 then return false end
    end

    local cur = items.equipped_at(st)
    if not cur then return true end
    if not it.is_identified then return false end

    if cur.artefact then return false end
    if it.artefact then return true end
    if cur.branded then
      return get_ego(cur) == get_ego(it) and it.plus > cur.plus
    end
    return it.branded or it.plus > cur.plus
  end

  return false
end

}
############################### End lua/pickup-alert/pa-armour.lua ###############################
##########################################################################################

################################### Begin lua/pickup-alert/pa-misc.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
function pa_alert_orb(it)
  if not it.is_identified then return false end
  return pa_alert_item(it, "New orb", EMOJI.ORB, CONFIG.fm_alert.orbs)
end

function pa_alert_OTA(it)
  local index = get_OTA_index(it)
  if index == -1 then return end

  local do_alert = true
  -- Don't alert if already wearing a larger shield
  if pa_OTA_items[index] == "buckler" then
    if have_shield() then do_alert = false end
  elseif pa_OTA_items[index] == "kite shield" then
    local sh = items.equipped_at("offhand")
    if sh and sh.name("qual") == "tower shield" then do_alert = false end
  end

  remove_from_OTA(it)
  if not do_alert then return false end
  return pa_alert_item(it, "Rare item", EMOJI.RARE_ITEM, CONFIG.fm_alert.one_time_alerts)
end

---- Alert for needed resists ----
function pa_alert_staff(it)
  if not it.is_identified then return false end
  local needRes = false
  local basename = it.name("base")

  if basename == "staff of fire" then needRes = CACHE.rF == 0
  elseif basename == "staff of cold" then needRes = CACHE.rC == 0
  elseif basename == "staff of air" then needRes = CACHE.rElec == 0
  elseif basename == "staff of poison" then needRes = CACHE.rPois == 0
  elseif basename == "staff of death" then needRes = CACHE.rN == 0
  end

  if not needRes then return false end
  return pa_alert_item(it, "Staff resistance", EMOJI.STAFF_RESISTANCE, CONFIG.fm_alert.staff_resists)
end

function pa_alert_talisman(it)
  if it.artefact then
    if it.is_identified then
      return pa_alert_item(it, "Artefact talisman", EMOJI.TALISMAN, CONFIG.fm_alert.talismans)
    end
    return false
  end
  return pa_alert_item(it, "New talisman", EMOJI.TALISMAN, CONFIG.fm_alert.talismans)
end

---- Smart staff pickup ----
function pa_pickup_staff(it)
  if not it.is_identified then return false end
  local school = get_staff_school(it)
  if get_skill(school) == 0 then return false end

  -- Check for previously picked staves
  for _,v in ipairs(pa_items_picked) do
    if v:find(it.name("base")) then return false end
  end

  return true
end

---- Exclude superfluous rings ----
function is_unneeded_ring(it)
  if not is_ring(it) or it.artefact or you.race() == "Octopode" then return false end
  local missing_hand = get_mut(MUTS.missing_hand, true)
  local st = it.subtype()
  local found_first = false
  for inv in iter.invent_iterator:new(items.inventory()) do
    if is_ring(inv) and inv.subtype() == st then
      if found_first or missing_hand then return true end
      found_first = true
    end
  end
  return false
end

}
############################### End lua/pickup-alert/pa-misc.lua ###############################
##########################################################################################

################################### Begin lua/pickup-alert/pa-weapons.lua ###################################
############### https://github.com/brianfaires/crawl-rc/ ###############
{
---- Cache weapons in inventory ----
INV_WEAP = {}

function INV_WEAP.get_key(it)
  local ret_val = it.is_ranged and "range_" or "melee_"
  ret_val = ret_val .. get_hands(it)
  if has_ego(it) then ret_val = ret_val .. "b" end
  return ret_val
end

function INV_WEAP.add_weapon(it)
  local weap_data = {}
  weap_data.ego = get_ego(it)
  weap_data.branded = weap_data.ego ~= nil
  weap_data.plus = it.plus
  weap_data.acc = it.accuracy + it.plus
  weap_data.damage = it.damage
  weap_data.dps = get_weap_dps(it)
  weap_data.score = get_weap_score(it)
  weap_data.unbranded_score = get_weap_score(it, true)

  weap_data.basename = it.name("base")
  weap_data.subtype = it.subtype()
  weap_data.is_ranged = it.is_ranged
  weap_data.hands = get_hands(it)
  weap_data.artefact = it.artefact
  weap_data.weap_skill = it.weap_skill
  weap_data.skill_lvl = get_skill(it.weap_skill)
 
  -- Track unique egos
  if weap_data.branded and not util.contains(INV_WEAP.egos, weap_data.ego) then
    INV_WEAP.egos[#INV_WEAP.egos+1] = weap_data.ego
  end

  -- Track max damage weapons of each type
  local keys = { INV_WEAP.get_key(it) }
  -- Also track less-restrictive versions of the key
  if weap_data.is_ranged then keys[#keys+1] = keys[1]:gsub("range", "melee") end
  if weap_data.branded then
    local len = #keys
    for i = 1, len do
      keys[len+i] = keys[i]:sub(1, -2)
    end
  end
  if weap_data.hands == 1 then
    local len = #keys
    for i = 1, len do
      keys[len+i] = keys[i]:gsub("1", "2")
    end
  end
  -- Update the max DPS for each category
  for _, key in ipairs(keys) do
    if weap_data.dps > INV_WEAP.max_dps[key].dps then
      INV_WEAP.max_dps[key].dps = weap_data.dps
      INV_WEAP.max_dps[key].acc = weap_data.acc
    end
  end

  INV_WEAP.weapons[#INV_WEAP.weapons+1] = weap_data
  return weap_data
end

function INV_WEAP.is_empty()
  return INV_WEAP.max_dps["melee_2"].dps == 0
end

---- Weapon pickup ----
local function is_weapon_upgrade(it, cur)
  -- `cur` comes from INV_WEAP
  if it.subtype() == cur.subtype then
    -- Exact weapon type match
    if it.artefact then return true end
    if cur.artefact then return false end
    if cur.branded and not it.branded then return false end
    if it.branded and it.is_identified and not cur.branded then
      return get_weap_score(it) / cur.score > TUNING.weap.pickup.add_ego
    end
    return get_ego(it) == cur.ego and get_weap_score(it) > cur.score
  elseif it.weap_skill == cur.weap_skill or CACHE.race == "Gnoll" then
    -- Return false if no clear upgrade possible
    if get_hands(it) > cur.hands then return false end
    if it.is_ranged ~= cur.is_ranged then return false end
    if is_polearm(cur) and not is_polearm(it) then return false end

    if it.artefact then return true end
    if cur.artefact then return false end
    if it.branded and not it.is_identified then return false end
    
    local min_ratio = it.is_ranged and TUNING.weap.pickup.same_type_ranged or TUNING.weap.pickup.same_type_melee
    return get_weap_score(it) / cur.score > min_ratio
  end

  return false
end

function pa_pickup_weapon(it)
  -- Check if we need the first weapon of the game
  if CACHE.xl < 5 and INV_WEAP.is_empty() and you.skill("Unarmed Combat") + get_mut(MUTS.claws, true) == 0 then
    -- Staves don't go into INV_WEAP; double-check that we're not carrying just a staff
    for _,inv in ipairs(items.inventory()) do
      if is_weapon(inv) then return false end -- faster to check weapon than staff
    end
    return true
  end

  if has_risky_ego(it) then return false end

  for _,inv in ipairs(INV_WEAP.weapons) do
    if is_weapon_upgrade(it, inv) then return true end
  end
end


---- Alert types ----
local function alert_first_ranged(it)
  if alerted_first_ranged_1h then return false end
  if not it.is_ranged then return false end

  if get_hands(it) == 1 then
    alerted_first_ranged = true
    alerted_first_ranged_1h = true
    return pa_alert_item(it, "First ranged weapon", EMOJI.RANGED, CONFIG.fm_alert.early_weap)
  else
    if alerted_first_ranged then return false end
    if have_shield() then return false end
    alerted_first_ranged = true
    return pa_alert_item(it, "First ranged weapon (2-handed)", EMOJI.RANGED, CONFIG.fm_alert.early_weap)
  end
end

local function alert_first_polearm(it)
  if alerted_first_polearm_1h then return false end
  if not is_polearm(it) then return false end
  if CACHE.s_ranged > 2 then return false end -- Don't bother if learning ranged

  if get_hands(it) == 1 then
    alerted_first_polearm = true
    alerted_first_polearm_1h = true
    return pa_alert_item(it, "First polearm", EMOJI.POLEARM, CONFIG.fm_alert.early_weap)
  else
    if alerted_first_polearm then return false end
    if have_shield() then return false end
    alerted_first_polearm = true
    return pa_alert_item(it, "First polearm (2-handed)", EMOJI.POLEARM, CONFIG.fm_alert.early_weap)
  end
end

local function alert_early_weapons(it)
  -- Alert really good usable ranged weapons
  if CACHE.xl <= TUNING.weap.alert.early_ranged.xl then
    if it.is_identified and it.is_ranged then
      if it.plus >= TUNING.weap.alert.early_ranged.min_plus and has_ego(it) or
         it.plus >= TUNING.weap.alert.early_ranged.branded_min_plus then
          if get_hands(it) == 1 or not have_shield() or
            CACHE.s_shields <= TUNING.weap.alert.early_ranged.max_shields then
              return pa_alert_item(it, "Ranged weapon", EMOJI.RANGED, CONFIG.fm_alert.early_weap)
          end
      end
    end
  end

  if CACHE.xl <= TUNING.weap.alert.early.xl then
    -- Skip items if we're clearly going another route
    local skill_diff = get_skill(CACHE.top_weap_skill) - get_skill(it.weap_skill)
    local max_skill_diff = CACHE.xl * TUNING.weap.alert.early.skill.factor + TUNING.weap.alert.early.skill.offset
    if skill_diff > max_skill_diff then return false end

    if has_ego(it) or it.plus and it.plus >= TUNING.weap.alert.early.branded_min_plus then
      return pa_alert_item(it, "Early weapon", EMOJI.WEAPON, CONFIG.fm_alert.early_weap)
    end
  end

  return false
end

-- Check if weapon is worth alerting for, informed by a weapon currently in inventory
-- `cur` comes from INV_WEAP
local function alert_interesting_weapon(it, cur)
  if it.artefact and it.is_identified then
    return pa_alert_item(it, "Artefact weapon", EMOJI.ARTEFACT, CONFIG.fm_alert.new_weap)
  end

  local inv_best = INV_WEAP.max_dps[INV_WEAP.get_key(it)]
  local best_dps = math.max(cur.dps, inv_best and inv_best.dps or 0)
  local best_score = math.max(cur.score, inv_best and get_weap_score(inv_best) or 0)

  if cur.subtype == it.subtype() then
    -- Exact weapon type match; alert new egos or higher DPS/weap_score
    if not cur.artefact and has_ego(it, true) and get_ego(it) ~= cur.ego then
      return pa_alert_item(it, "Diff ego", EMOJI.EGO, CONFIG.fm_alert.new_weap)
    elseif get_weap_score(it) > best_score or get_weap_dps(it) > best_dps then
      return pa_alert_item(it, "Better weapon", EMOJI.WEAPON, CONFIG.fm_alert.new_weap)
    end
    return false
  end
  
  if it.is_ranged ~= cur.is_ranged then return false end
  if 2 * get_skill(it.weap_skill) < get_skill(cur.weap_skill) then return false end
  
  -- Penalize lower-trained skills
  local damp = TUNING.weap.alert.low_skill_penalty_damping
  local penalty = (get_skill(it.weap_skill) + damp) / (get_skill(CACHE.top_weap_skill) + damp)
  local score_ratio = penalty * get_weap_score(it) / best_score

  if get_hands(it) > cur.hands then
    if offhand_is_free() or (CACHE.s_shields < TUNING.weap.alert.add_hand.ignore_sh_lvl) then
      if has_ego(it) and not util.contains(INV_WEAP.egos, get_ego(it)) and score_ratio > TUNING.weap.alert.new_ego then
        return pa_alert_item(it, "New ego (2-handed)", EMOJI.EGO, CONFIG.fm_alert.new_weap)
      elseif score_ratio > TUNING.weap.alert.add_hand.not_using then
        return pa_alert_item(it, "2-handed weapon", EMOJI.TWO_HANDED, CONFIG.fm_alert.new_weap)
      end
    elseif has_ego(it) and not cur.branded and score_ratio > TUNING.weap.alert.add_hand.add_ego_lose_sh then
      return pa_alert_item(it, "2-handed weapon (Gain ego)", EMOJI.TWO_HANDED, CONFIG.fm_alert.new_weap)
    end
  else -- No extra hand required
    if cur.artefact then return false end
    if has_ego(it, true) then
      local it_ego = get_ego(it)
      if not cur.branded then
        if score_ratio > TUNING.weap.alert.gain_ego then
          return pa_alert_item(it, "Gain ego", EMOJI.EGO, CONFIG.fm_alert.new_weap)
        end
      elseif not util.contains(INV_WEAP.egos, it_ego) and score_ratio > TUNING.weap.alert.new_ego then
        return pa_alert_item(it, "New ego", EMOJI.EGO, CONFIG.fm_alert.new_weap)
      end
    end
    if score_ratio > TUNING.weap.alert.pure_dps then
      return pa_alert_item(it, "Better weapon", EMOJI.WEAPON, CONFIG.fm_alert.new_weap)
    end
  end
  
  return false
end

local function alert_interesting_weapons(it)
  for _,inv in ipairs(INV_WEAP.weapons) do
    if alert_interesting_weapon(it, inv) then return true end
  end
  return false
end

local function alert_weap_high_scores(it)
  local category = update_high_scores(it)
  if not category then return false end
  return pa_alert_item(it, category, EMOJI.WEAPON, CONFIG.fm_alert.high_score_weap)
end

function pa_alert_weapon(it)
  if has_ego(it) and not it.is_identified then return false end

  if alert_interesting_weapons(it) then return true end
  if alert_first_ranged(it) then return true end
  if alert_first_polearm(it) then return true end
  if alert_early_weapons(it) then return true end

  -- Skip high score alerts if not using weapons
  if INV_WEAP.is_empty() then return false end
  return alert_weap_high_scores(it)
end


function init_pa_weapons()
  INV_WEAP.weapons = {}
  INV_WEAP.egos = {}
  
  -- Track max DPS by weapon category
  INV_WEAP.max_dps = {}
  local keys = {
    "melee_1", "melee_1b", "melee_2", "melee_2b",
    "range_1", "range_1b", "range_2", "range_2b"
  }
  for _, key in ipairs(keys) do
    INV_WEAP.max_dps[key] = { dps = 0, acc = 0 }
  end
end


-------- Hooks --------
function ready_pa_weapons()
  init_pa_weapons()
  for inv in iter.invent_iterator:new(items.inventory()) do
    if is_weapon(inv) and not is_magic_staff(inv) then
      INV_WEAP.add_weapon(inv)
      update_high_scores(inv)
    end
  end
end

}
############################### End lua/pickup-alert/pa-weapons.lua ###############################
##########################################################################################

## (Resuming init.txt) ##


############## Lua Hook Functions ##############
{
local buehler_rc_active

function c_assign_invletter(it)
  if not buehler_rc_active then return end
  -- Calls with no return values; just triggering on new item pickup
  if c_assign_invletter_item_alerts then c_assign_invletter_item_alerts(it) end
  if c_assign_invletter_remind_identify then c_assign_invletter_remind_identify(it) end
  if c_assign_invletter_drop_inferior then c_assign_invletter_drop_inferior(it) end
  if c_assign_invletter_color_inscribe then c_assign_invletter_color_inscribe(it) end

  -- Calls with possible return values
  local ret_val = nil
  if c_assign_invletter_weapon_slots then ret_val = c_assign_invletter_weapon_slots(it) end
  if ret_val then return ret_val end
end

function c_message(text, channel)
  if not buehler_rc_active then return end
  if c_message_remind_identify then c_message_remind_identify(text, channel) end
  if c_message_weapon_slots then c_message_weapon_slots(text, channel) end
  if c_message_exclude_dropped then c_message_exclude_dropped(text, channel) end
  if c_message_fully_recover then c_message_fully_recover(text, channel) end
  if c_message_after_shaft then c_message_after_shaft(text, channel) end
  if c_message_item_alerts then c_message_item_alerts(text, channel) end
  if c_message_runrest_features then c_message_runrest_features(text, channel) end
  if c_message_fm_pack then c_message_fm_pack(text, channel) end
  if c_message_fm_disable then c_message_fm_disable(text, channel) end
end

function ch_stop_running(kind)
  if not buehler_rc_active then return end
  if ch_stop_running_fully_recover then ch_stop_running_fully_recover(kind) end
end

function c_answer_prompt(prompt)
  if not buehler_rc_active then return end
  if prompt:find("cheaper one?") and CACHE.branch ~= "Bazaar" then
    crawl.mpr("Replacing shopping list items")
    return true end
  if prompt == "Die?" then
    return false
  end  
end

function ready()
  if not buehler_rc_active then return end
  if you.turns() == prev_turn then return end

  ready_cache()
  prev_turn = CACHE.turn

  -- Features (may not be included)
  if ready_fm_monsters then ready_fm_monsters() end
  if ready_dynamic_options then ready_dynamic_options() end
  if ready_inscribe_stats then ready_inscribe_stats() end
  if ready_safe_consumables then ready_safe_consumables() end
  if ready_runrest_features then ready_runrest_features() end
  if ready_after_shaft then ready_after_shaft() end
  if ready_exclude_dropped then ready_exclude_dropped() end
  if ready_safe_stairs then ready_safe_stairs() end

  -- Features with text
  if ready_weapon_slots then ready_weapon_slots() end
  if ready_fully_recover then ready_fully_recover() end
  if ready_remind_identify then ready_remind_identify() end
  if ready_announce_damage then ready_announce_damage() end
  if ready_item_alerts then ready_item_alerts() end
  if ready_misc_alerts then ready_misc_alerts() end

  -- Delayed messages
  mpr_consume_queue()
end

function init_buehler(reset_persistent_data)
  buehler_rc_active = false

  -- Init core modules
  init_config()
  init_emojis()
  init_cache()
  init_util()
  init_persistent_data(reset_persistent_data)

  -- Init optional features
  if init_after_shaft then init_after_shaft() end
  if init_announce_damage then init_announce_damage() end
  if init_drop_inferior then init_drop_inferior() end
  if init_dynamic_options then init_dynamic_options() end
  if init_exclude_dropped then init_exclude_dropped() end
  if init_fm_monsters then init_fm_monsters() end
  if init_fully_recover then init_fully_recover() end
  if init_misc_alerts then init_misc_alerts() end
  if init_pa_main then init_pa_main() end
  if init_remind_id then init_remind_id() end
  if init_runrest_features then init_runrest_features() end
  if init_safe_stairs then init_safe_stairs() end
  if init_startup then init_startup() end
  if init_weapon_slots then init_weapon_slots() end

  if not verify_data_reinit() then
    crawl.mpr(with_color(COLORS.lightred, "Failed initialization. buehler.rc is inactive."))
    return
  else
    buehler_rc_active = true
    local success_emoji = CONFIG.emojis and EMOJI.SUCCESS or ""
    local success_text = string.format(" Successfully initialized buehler.rc v%s! ", prev_buehler_rc_version)
    crawl.mpr("\n" .. success_emoji .. with_color(COLORS.lightgreen, success_text) .. success_emoji)
  end

   -- Force a full ready() cycle
  prev_turn = CACHE.turn - 1
  ready()
end

-- This is the only line of top-level code, aside from declaring variables (without values)
-- Done to give confidence in simple re-inits
init_buehler(you.turns() == 0)
}
